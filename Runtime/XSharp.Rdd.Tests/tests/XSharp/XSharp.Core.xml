<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XSharp.Core</name>
    </assembly>
    <members>
        <member name="F:XSharp.Core.Functions.F_NAME">
            <summary>Position in DbStruct and DbCreate sub-array for fileName (as a string).</summary>
            <seealso cref="M:XSharp.RT.Functions.DbStruct">DbStruct function</seealso>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)">DbCreate Function</seealso>
        </member>
        <member name="F:XSharp.Core.Functions.F_SIZE">
            <summary>Position in DbStruct and DbCreate sub-array for filesize(as a numeric).</summary>
            <seealso cref="M:XSharp.RT.Functions.DbStruct">DbStruct function</seealso>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)">DbCreate Function</seealso>
        </member>
        <member name="F:XSharp.Core.Functions.F_DATE">
            <summary>Position in DbStruct and DbCreate sub-array for file date(as a date).</summary>
            <seealso cref="M:XSharp.RT.Functions.DbStruct">DbStruct function</seealso>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)">DbCreate Function</seealso>
        </member>
        <member name="F:XSharp.Core.Functions.F_TIME">
            <summary>Position in DbStruct and DbCreate sub-array for file time(as a string).</summary>
            <seealso cref="M:XSharp.RT.Functions.DbStruct">DbStruct function</seealso>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)">DbCreate Function</seealso>
        </member>
        <member name="F:XSharp.Core.Functions.F_ATTR">
            <summary>Position in DbStruct and DbCreate sub-array for file attributes(as a string).</summary>
            <seealso cref="M:XSharp.RT.Functions.DbStruct">DbStruct function</seealso>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)">DbCreate Function</seealso>
        </member>
        <member name="F:XSharp.Core.Functions.F_LEN">
            <summary>Length of DbStruct and DbCreate sub-array.</summary>
            <seealso cref="M:XSharp.RT.Functions.DbStruct">DbStruct function</seealso>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)">DbCreate Function</seealso>
        </member>
        <member name="F:XSharp.Core.Functions.PI">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.PI_2">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.PI_4">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.L2E">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.L2T">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.L10E">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.LG2">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.LN2">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.LN10">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.REAL4_EPSILON">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.REAL4_MAX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.REAL8_EPSILON">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.REAL8_MAX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.TICK_FREQUENCY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_BELL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_BS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_TAB">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_LF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_FF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_CR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_SOFT_CR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_EOF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_ESC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_BLANK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_0">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_1">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_9">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_A">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ASC_Z">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.CRLF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DOSERR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_ERR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OLEAUTO_ERROR_FIRST">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH1">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH2">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH3">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH4">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH5">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH6">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH7">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH8">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH9">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH10">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH11">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_MONTH12">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY1">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY2">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY3">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY4">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY5">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY6">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_DAY7">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_INFOSTRING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_LITERAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_SHORT_TRUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_SHORT_FALSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_LONG_TRUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_LONG_FALSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_SHORT_YES">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_SHORT_NO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_LONG_YES">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_LONG_NO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_CURRENCY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RT_MSG_YNSTRING">
            <summary></summary>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2DW(System.String)">
            <summary>
            Convert a string containing a 32-bit unsigned integer to a double word.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.W2Bin(System.UInt16)' >W2Bin</seealso>
            <seealso cref='M:XSharp.Core.Functions.DW2Bin(System.UInt32)' >DW2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2I(System.String)">
            <summary>
            Convert a string containing a 16-bit signed integer to a short integer.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.I2Bin(System.Int16)'>I2Bin</seealso>
            <seealso cref='M:XSharp.Core.Functions.L2Bin(System.Int32)' >L2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2L(System.String)">
            <summary>
            Convert a string containing a 32-bit signed integer to a long integer.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.I2Bin(System.Int16)'>I2Bin</seealso>
            <seealso cref='M:XSharp.Core.Functions.L2Bin(System.Int32)' >L2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2Logic(System.String)">
            <summary>
            Convert a string containing an 8-bit logical into a logical value.
            </summary>
            <param name="pszC"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.LTOC(System.Boolean)' >LTOC</seealso>
            <seealso cref='M:XSharp.Core.Functions.Logic2Bin(System.Boolean)' >Logic2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Ptr2Bin(System.IntPtr)">
            <summary>
            Convert a intptr to a string
            </summary>
            <remarks>
      <note type="warning">
        This is a compatibility function that only works in x86 mode. The function will throw an exception when running in x64 mode.
      </note>
    </remarks>
            <seealso cref="M:XSharp.Core.Functions.Bin2Ptr(System.String)">Bin2Ptr</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2Ptr(System.String)">
            <summary>
            </summary>
            <param name="cPointer" />
            <remarks>
      <note type="warning">
        This is a compatibility function that only works in x86 mode. The function will throw an exception when running in x64 mode.
      </note>
    </remarks>
            <seealso cref="M:XSharp.Core.Functions.Ptr2Bin(System.IntPtr)">Ptr2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2Real4(System.String)">
            <summary>
            Convert a string containing a 32-bit Floating point number to a Real4 value.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Real42Bin(System.Single)' >Real42Bin</seealso>
            <seealso cref='M:XSharp.Core.Functions.Real82Bin(System.Double)' >Real82Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2Real8(System.String)">
            <summary>
            Convert a string containing a 32-bit Floating point number to a Real8 value.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Real42Bin(System.Single)' >Real42Bin</seealso>
            <seealso cref='M:XSharp.Core.Functions.Real82Bin(System.Double)' >Real82Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Bin2W(System.String)">
            <summary>
            Convert a string containing a 16-bit unsigned integer to a word.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.W2Bin(System.UInt16)' >W2Bin</seealso>
            <seealso cref='M:XSharp.Core.Functions.DW2Bin(System.UInt32)' >DW2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.CTOL(System.String)">
            <summary>
            Convert a string value to a logic.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.LTOC(System.Boolean)' >LTOC</seealso>
            <seealso cref='M:XSharp.Core.Functions.Logic2Bin(System.Boolean)' >Logic2Bin</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.C2Hex(System.String)">
            <summary>
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DW2Bin(System.UInt32)">
            <summary>
            Convert a double word to a string containing a 32-bit unsigned integer.
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2W(System.String)' >Bin2W</seealso>
            <seealso cref='M:XSharp.Core.Functions.Bin2DW(System.String)' >Bin2DW</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.HiByte(System.UInt16)">
            <summary>
            Return the high-order (leftmost) byte in a number.
            </summary>
            <param name="dw"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.HiWord(System.UInt32)">
            <summary>
            Return the high-order (leftmost) word in a number.
            </summary>
            <param name="dw"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.I2Bin(System.Int16)">
            <summary>
            Convert a short integer to a string containing a 16-bit signed integer.
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2I(System.String)' >Bin2I</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.L2Bin(System.Int32)">
            <summary>
            Convert a long integer to a string containing a 32-bit signed integer.
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2L(System.String)' >Bin2L</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.LoByte(System.UInt16)">
            <summary>
            Return the low-order (rightmost) byte in a number.
            </summary>
            <param name="dw"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.LoWord(System.UInt32)">
            <summary>
            Return the low-order (rightmost) word in a number.
            </summary>
            <param name="dw"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Logic2Bin(System.Boolean)">
            <summary>
            Convert a logical value to a string containing an 8-bit logical value.
            </summary>
            <param name="l"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2Logic(System.String)' >Bin2Logic</seealso>
            <seealso cref='M:XSharp.Core.Functions.CTOL(System.String)' >CTOL</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.LTOC(System.Boolean)">
            <summary>
            Convert a logical value to a string.
            </summary>
            <param name="l"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2Logic(System.String)' >Bin2Logic</seealso>
            <seealso cref='M:XSharp.Core.Functions.CTOL(System.String)' >CTOL</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Real42Bin(System.Single)">
            <summary>
            Convert a Real4 value to a string containing a 32-bit Floating point number.
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2Real8(System.String)' >Bin2Real8</seealso>
            <seealso cref='M:XSharp.Core.Functions.Bin2Real4(System.String)' >Bin2Real4</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Real82Bin(System.Double)">
            <summary>
            Convert a Real8 value to a string containing an 8-byte Floating point number.
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2Real8(System.String)' >Bin2Real8</seealso>
            <seealso cref='M:XSharp.Core.Functions.Bin2Real4(System.String)' >Bin2Real4</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.W2Bin(System.UInt16)">
            <summary>
            Convert a word to a string containing a 16-bit unsigned integer.
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.Bin2W(System.String)' >Bin2W</seealso>
            <seealso cref='M:XSharp.Core.Functions.Bin2DW(System.String)' >Bin2DW</seealso>
        </member>
        <member name="M:XSharp.Core.Functions._Val(System.String)">
            <summary>
            Convert a string containing a numeric value to a numeric data type.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DebOut32(System.String)">
            <summary>
            Write information to the Debug Terminal Program
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._DebOut32(System.String)">
            <summary>
            Write information to the Debug Terminal Program
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcFile(System.UInt32)">
            <summary>
            Return the source file for the active code line
            </summary>
            <param name="dwActivation"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcFile">
            <summary>
            Return the source file for the active code line
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcFile(System.Int32)">
            <summary>
            Return the source file for the active code line
            </summary>
            <param name="dwActivation"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcLine(System.UInt32)">
            <summary>
            Return the source line number of the last line executed in an activated entity.
            </summary>
            <param name="dwActivation"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcLine">
            <summary>
            Return the source line number of the last line executed in an activated entity.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcLine(System.Int32)">
            <summary>
            Return the source line number of the last line executed in an activated entity.
            </summary>
            <param name="dwActivation"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcName">
            <summary>
            Return the name of an activated entity.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ProcName(System.Int32)">
            <summary>
            Return the name of an activated entity.
            </summary>
            <param name="dwActivation"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AltD">
            <summary>
            Either determine whether the Debugger can be invoked manually or programmatically define a breakpoint in an application.
            </summary>
            <param name="nMode">This parameter is ignored in X#</param>
            <returns>
            </returns>
            <remarks>This function is inlined by the compiler </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.AltD(System.Int32)">
            <summary>
            Either determine whether the Debugger can be invoked manually or programmatically define a breakpoint in an application.
            </summary>
            <param name="nMode">This parameter is ignored in X#</param>
            <returns>
            </returns>
            <remarks>This function is inlined by the compiler </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.ErrString(System.UInt32)">
            <summary>
            Return an error message associated with a system-generated error code.
            </summary>
            <param name="nGenCode">The error code exported by an error object. One of the GenCodes enum values</param>
            <returns>The message string associated with the error code.  Error messages are nation-dependent.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.DosErrString(System.UInt32)">
            <summary>
            Return a description string for a DOS error number.
            </summary>
            <param name="nDosErr">The DOS error number that you want a description for.</param>
            <returns>The message string associated with the error number.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.TypeString(System.UInt32)">
            <summary>
            </summary>
            <param name="dwType"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FFCount(System.String,System.UInt32)">
            <summary>
            Return the number of files that match a given file specification and attribute.
            </summary>
            <param name="cFile"></param>
            <param name="nAttr"></param>
            <returns>The number of files that match a given file specification and attribute.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FFirst(System.String,System.UInt32)">
            <summary>
            Find the first file that matches a given file specification or attribute.
            </summary>
            <param name="cFile"></param>
            <param name="nAttr"></param>
            <returns>The first file that matches a given file specification or attribute.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FAttrib">
            <summary>
            Determine the attributes of the file found after FFCount(), FFirst(), or FNext().
            </summary>
            <returns>The attributes of the file found after FFCount(), FFirst(), or FNext().
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FDate">
            <summary>
            Return the Date stamp of the file found by FFCount(), FFirst(), or FNext().
            </summary>
            <returns>The Date stamp of the file found by FFCount(), FFirst(), or FNext().
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FName">
            <summary>
            Return the name of the file found by FFCount(), FFirst(), or FNext().
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FNext">
            <summary>
            Find the next file that matches the file previously found by FFirst().
            </summary>
            <returns>TRUE when a next file is found. Otherwise FALSE.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FSize">
            <summary>
            Return the size of the file found by FFCount(), FFirst(), or FNext().
            </summary>
            <returns>The size of the file found by FFCount(), FFirst(), or FNext().
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FTime">
            <summary>
            Return the time stamp of the file found by FFCount(), FFirst(), or FNext().
            </summary>
            <returns>The time stamp of the file found by FFCount(), FFirst(), or FNext().
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.File(System.String)">
            <summary>
            Determine if any file matches a given file specification.
            </summary>
            <param name="cFile">The name oif the file</param>
            <returns>
            True if the file exists, otherwise false
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FPathName">
            <summary>
            Return the name and path of the file that was used by FXOpen() or File().
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.__FileHelper(System.String,System.String,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:XSharp.Core.Functions.__GetSearchPaths">
            <summary></summary>
        </member>
        <member name="M:XSharp.Core.Functions.AmPm(System.String)">
            <summary>
            Convert a 24-hour military time to a 12-hour clock time.
            </summary>
            <param name="cTime"> A valid military time in the form hh:mm:ss, where hh is hours in 24-hour format, mm is minutes, and ss is seconds.</param>
            <returns>
            An 11-character string in 12-hour format with either "am" or "pm."  If cTime does not represent a valid military time, a String.Empty is returned.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ElapTime(System.String,System.String)">
            <summary>
            Return the difference between two time strings.
            </summary>
            <param name="cStartTime">The starting time in the form HH:mm:ss.</param>
            <param name="cEndTime">The ending time in the form HH:mm:ss.</param>
            <returns>
            The amount of time that has elapsed from cStartTime to cEndTime as a time string in the format hh:mm:ss.
            </returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.ConTime(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Format a set of numbers representing an hour, minute, and second as a time string.
            </summary>
            <param name="dwHour"></param>
            <param name="dwMinute"></param>
            <param name="dwSeconds"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ConTime(System.DateTime)">
            <summary>
            Return the timestring from a DateTime structure
            </summary>
            <param name="dt"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.NToCDoW(System.UInt32)">
            <summary>
            Convert the number that identifies a day into the name of the day.
            </summary>
            <param name="dwDay">A number from 1 to 7.</param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.NToCMonth(System.UInt32)">
            <summary>
            Convert the number that identifies a month into the name of the month.
            </summary>
            <param name="dwMonth"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Secs(System.String)">
            <summary>
            Return a time as the number of seconds that have elapsed since midnight.
            </summary>
            <param name="cTime">The time to convert to seconds, in the form hh:mm:ss.</param>
            <returns>The number of seconds from midnight to the time specified.  The return value cannot be greater than 86,400, the number of seconds in a day.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Days(System.Double)">
            <summary>
            Convert a specified number of seconds to days.
            </summary>
            <returns>The number of days to the nearest day.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.Seconds">
            <summary>
            Return the number of seconds that have elapsed since midnight.
            </summary>
            <returns>The number of seconds that have elapsed since midnight in the form seconds.hundredths.  Numbers range from 0 to 86,399.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.Time">
            <summary>
            Return the system time in a format determined by various international settings.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Time24">
            <summary>
            Return the system time in 24-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.TString(System.Double)">
            <summary>Convert a specified number of seconds to a time string.</summary>
        </member>
        <member name="M:XSharp.Core.Functions.TString(System.UInt32)">
            <summary>Convert a specified number of seconds to a time string.</summary>
        </member>
        <member name="M:XSharp.Core.Functions._ConDate(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Format a set of numbers representing a year, month, and day as a Date.
            </summary>
            <param name="dwY">A valid year.  If the century digits are not specified, the century is determined by the rules of SetEpoch(). </param>
            <param name="dwM">A number from 1 through 12 representing a valid month. </param>
            <param name="dwDay">A number representing a valid day of dwMonth.</param>
            <returns>The date that corresponds to the passed arguments.  If any of the arguments specified do not represent a valid year, month, or day, a NULL_DATE is returned.</returns>
        </member>
        <member name="M:XSharp.Core.Functions._CToDAnsi(System.String)">
            <summary>
            Convert an ANSI date string to date format.
            </summary>
            <param name="cDate">A string in the ANSI form yyyy.mm.dd, where yy, mm, and dd represent year, month, and day respectively.  
            The year, month, and day can be separated by any character other than a number. 
            cDate is always interpreted as an ANSI string and is not dependent on SetDateFormat() or SetDateCountry().  
            If the century digits are not specified, the century is determined by the rules of SetEpoch().</param>
            <returns>The date value that corresponds to the numbers specified in <paramref name="cDate"/>.  If cDate is not a valid ANSI date, CToDAnsi() returns a NULL_DATE.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._DToC(System.DateTime)">
            <summary>
            Convert a Date to a string.
            </summary>
            <param name="d">The Date to be converted.</param>
            <returns>
            A string representation of the given Date, formatted in the current Date format.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._DToS(System.DateTime)">
            <summary>
            Convert a Date value to a string formatted as string in ANSI format
            </summary>
            <param name="dDate">The Date to be converted</param>
            <returns>
            An 8-character string in the format yyyymmdd.  If dDate is a NULL_DATE, a string of eight spaces is returned.  The return value is not affected by the current date format.
            </returns>
        </member>
        <member name="F:XSharp.Core.Functions.F_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FERROR_FULL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FERROR_EOF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FERROR_PARAM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FS_SET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FS_RELATIVE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FS_END">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_READ">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_WRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_READWRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_COMPAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_EXCLUSIVE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_DENYWRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_DENYREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_DENYNONE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OF_SHARE_COMPAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OF_SHARE_EXCLUSIVE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OF_SHARE_DENY_WRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OF_SHARE_DENY_READ">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OF_SHARE_DENY_NONE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OF_PARSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.CREATE_NEW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.CREATE_ALWAYS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OPEN_EXISTING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.OPEN_ALWAYS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_DELETE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_VERIFY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_CANCEL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_CREATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_PROMPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_EXIST">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FO_REOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FXO_WILD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FC_NORMAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FC_READONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FC_HIDDEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FC_SYSTEM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FC_ARCHIVED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FA_VOLUME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FA_DIRECTORY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FA_NORMAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FA_TEMPORARY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FA_COMPRESSED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FA_OFFLINE">
            <summary></summary>
        </member>
        <member name="M:XSharp.Core.Functions.FError(System.UInt32)">
            <summary>
            Set the error code for a file operation.
            </summary>
            <param name="nSet"></param>
            <returns>The previous errorcode from the last file operation.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.FError">
            <summary>
            Get the error code for a file operation.
            </summary>
            <returns>The error from the last file operation or the last user-specified setting.  If there was no error, FError() returns 0.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.FException">
            <summary>
            Get the last exception for a file operation.
            </summary>
            <returns>The exception from the last file operation or the last user-specified setting.  If there was no exception, FException() returns null.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.FChSize(System.IntPtr,System.UInt32)">
            <summary>
            Change the size of a file opened with a low-level file function.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="nSize">The new length to which the file should be set. </param>
            <returns>The new length of the file if successful; otherwise, F_ERROR.  FError() can be used to determine the specific error.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FClose(System.IntPtr)">
            <summary>
            Close an open file and write the buffers to disk.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param>
            <returns>FALSE if an error occurs while writing; otherwise, TRUE.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FCommit(System.IntPtr)">
            <summary>
            Flush file buffers.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FEof(System.IntPtr)">
            <summary>
            Determine if the file pointer is positioned at the end-of-file.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <returns>TRUE if the file pointer is at end-of-file; otherwise, FALSE.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FFLock(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Lock a portion of an open file.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="dwOffset">The file offset at which to start locking.  A value of zero corresponds to the first byte of the file. </param>
            <param name="dwLength">The number of bytes to lock. </param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FFlush(System.IntPtr)">
            <summary>
            Flush to disk a file opened with a low-level file function.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FFUnLock(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            UnLock a portion of an open file.
            </summary>
            <param name="dwOffset">The file offset at which to start unlocking.  A value of zero corresponds to the first byte of the file. </param>
            <inheritdoc cref="M:XSharp.Core.Functions.FFLock(System.IntPtr,System.UInt32,System.UInt32)" />"
        </member>
        <member name="M:XSharp.Core.Functions.FGetS(System.IntPtr)">
            <inheritdoc cref="M:XSharp.Core.Functions.FReadLine(System.IntPtr,System.UInt32)" />"
        </member>
        <member name="M:XSharp.Core.Functions.FGetS(System.IntPtr,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FReadLine(System.IntPtr,System.UInt32)" />"
        </member>
        <member name="M:XSharp.Core.Functions.FGetS2(System.IntPtr,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FReadLine(System.IntPtr,System.UInt32)" />"
        </member>
        <member name="M:XSharp.Core.Functions.FPutS(System.IntPtr,System.String)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String,System.UInt32)" /> 
        </member>
        <member name="M:XSharp.Core.Functions.FPutS(System.IntPtr,System.String,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String,System.UInt32)" /> 
        </member>
        <member name="M:XSharp.Core.Functions.FPutS3(System.IntPtr,System.String,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String,System.UInt32)" /> 
        </member>
        <member name="M:XSharp.Core.Functions.FRead3(System.IntPtr,System.Byte[],System.UInt32)">
            <summary>
            Read characters from a file into an allocated buffer.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="pBuffer">An array of bytes to store the data read from the specified file. The length of this variable must be greater than or equal to the number of bytes in the next parameter.</param>
            <param name="dwCount">The number of bytes to read into the buffer.</param>
            <returns>The number of bytes successfully read.  A return value less than the number of bytes requested indicates end-of-file or some other read error.  FError() can be used to determine the specific error.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FRead4(System.IntPtr,System.Byte[],System.UInt32,System.Boolean)">
            <summary>
            Read characters from a file into an allocated buffer with optional OEM to Ansi conversion.
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.FRead3(System.IntPtr,System.Byte[],System.UInt32)" />
            <param name="lAnsi">If FALSE an OEM to ANSI conversion is made. </param>
        </member>
        <member name="M:XSharp.Core.Functions.FReadLine(System.IntPtr,System.UInt32)">
            <summary>
            Read a line from an open file, specifying two strongly-typed arguments.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="nLineLen">The maximum number of characters to read per line.</param>
            <returns>The line read.  When the end-of-file is reached while attempting to read, the function returns a NULL_STRING and FError() is set to 257.</returns>
            <remarks>This function is assumed to handle raw binary data and are not dependent upon the status of SetAnsi().
            FReadText() and FRead4(), on the other hand, are dependent upon SetAnsi().
            </remarks>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FReadLine2(System.IntPtr,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FReadLine(System.IntPtr,System.UInt32)" />"
        </member>
        <member name="M:XSharp.Core.Functions.FReadStr(System.IntPtr,System.UInt32)">
            <summary>
            Read characters from a file.
            </summary>
            <param name="dwCount">The number of bytes to read, beginning at the current DOS file pointer position.  Characters are read up to this number or until end-of-file is encountered.
            The file pointer is then moved forward.  If the number is greater than the number of bytes from the pointer position to the end of the file, the file pointer is positioned at the last byte in the file.
            </param>
            <inheritdoc cref="M:XSharp.Core.Functions.FReadLine(System.IntPtr,System.UInt32)" />
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FRead(System.IntPtr,System.String@,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FReadText(System.IntPtr,System.String@,System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.FReadText(System.IntPtr,System.String@,System.UInt32)">
            <summary>
            Read characters from a file into a buffer variable that is passed by reference.
            </summary>
            <param name="strValue" />
            <returns>The number of bytes successfully read.  A return value less than the number specified 0 indicates
            end-of-file or some other read error.  FError() can be used to determine the specific error.</returns>
            <inheritdoc cref="M:XSharp.Core.Functions.FRead3(System.IntPtr,System.Byte[],System.UInt32)" />
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FReadText3(System.IntPtr,System.Byte[],System.UInt32)">
            <summary>
            Read characters from a file into an allocated buffer, with possible OEM to ANSI conversion, based on the current SetAnsi() setting.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="pBuffer">Pointer to an array of bytes to store data read from the specified file.  The length of this variable must be greater than or equal to the number of bytes in the next parameter.</param>
            <param name="dwCount" />
            <inheritdoc cref="M:XSharp.Core.Functions.FRead3(System.IntPtr,System.Byte[],System.UInt32)" />
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FRewind(System.IntPtr)">
            <summary>
            Set the file pointer at the top of an open file.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <returns>
            </returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FSeek3(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
            Set the file pointer to a new position, specifying three strongly-typed arguments.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="lOffset">The number of bytes to move the file pointer, from the position defined in the next parameter.It can be a positive or negative number.
            A positive number moves the pointer forward in the file, and a negative number moves the pointer backward.
            If the origin is the end-of-file, then this must be 0 or negative.</param>
            <param name="dwOrigin">One of the following constants indicating the starting location of the file pointer, telling where to start searching the file:</param>
            <returns>The new position of the file pointer, relative to the beginning of the file (position 0).  (The original position of the file pointer does not matter.)</returns>
            <remarks>
            The possible values for the origin are:
            <list type="table">
            <listheader>
            <term>Constant</term>           <description>Seeks from</description>
            </listheader>
            <item><term>FS_END</term>       <description>End-of-file   </description></item>  
            <item><term>FS_RELATIVE</term>  <description>Current pointer position  </description></item>  
            <item><term>FS_SET</term>       <description>Beginning-of-file </description></item>
            </list>
            </remarks>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FTell(System.IntPtr)">
            <summary>
            Return the current position of the file pointer.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <returns>The current position of the file pointer, relative to the beginning of the file.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FTell64(System.IntPtr)">
            <inheritdoc cref="M:XSharp.Core.Functions.FTell(System.IntPtr)" />
        </member>
        <member name="M:XSharp.Core.Functions.FWrite(System.IntPtr,System.String)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWrite(System.IntPtr,System.String,System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.FWrite(System.IntPtr,System.String,System.UInt32)">
            <overloads>
            <summary>
            Write a string to an open file
            </summary>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
            </overloads>
            <summary>
            Write a string to an open file
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="c"> The string to write. </param>
            <param name="nCount">The number of characters from the string to write, beginning at the current file pointer position.</param>
            <returns>The number of bytes written.  If the value returned is equal to nCount, the operation was successful.
            If the return value is less than the nCount or 0, this means that the length of the buffer/string is less than number of bytes,
            or the disk is full, or another error has occurred.  FError() can be used to determine the specific error. </returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FWrite3(System.IntPtr,System.Byte[],System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWrite(System.IntPtr,System.String,System.UInt32)" />
            <param name="pBuffer">Pointer to an array of bytes to store data read from the specified file.  The length of this variable must be greater than or equal to the number of bytes in the next parameter.</param>
        </member>
        <member name="M:XSharp.Core.Functions.FWrite4(System.IntPtr,System.Byte[],System.UInt32,System.Boolean)">
            <summary>
            Write the contents of a buffer to an open file, with an ANSI to OEM conversion option.
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.FWrite3(System.IntPtr,System.Byte[],System.UInt32)" />
            <param name="lAnsi">If FALSE , an ANSI to OEM conversion is made.</param>
            <returns></returns>
        </member>
        <member name="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String,System.UInt32)" />
            <returns>The number of bytes written.  If the value returned is equal to the length of the string +2, the operation was successful.
            If the return value is less 0, this means the disk is full, or another error has occurred.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String,System.UInt32)">
            <overloads>
            <summary>
            Write a string, a carriage-return character, and a linefeed character to an open file.
            </summary>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
            </overloads>
            <summary>
            Write a string, a carriage-return character, and a linefeed character to an open file, specifying strongly-typed arguments.
            </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <param name="c">The string to write.</param>
            <param name="nCount">The number of bytes in the string to write, beginning at the current file pointer position.</param>
            <returns>The number of bytes written.  If the value returned is equal to the nCount + 2, the operation was successful.
            If the return value is less than nCount + 2 or 0, this means that the length of  the string was less than nCount,
            or the disk is full, or another error has occurred.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FWriteLine3(System.IntPtr,System.String,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FWriteLine(System.IntPtr,System.String,System.UInt32)" /> 
        </member>
        <member name="M:XSharp.Core.Functions.FWriteText3(System.IntPtr,System.Byte[],System.UInt32)">
            <summary>
            Write the contents of a buffer to an open file, with SetAnsi() dependency.
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.FWrite(System.IntPtr,System.String,System.UInt32)" /> 
            <param name="pBuffer">Pointer to an array of bytes to write to the specified file.  The length of this variable must be greater than or equal to the number of bytes in the next parameter.</param>
        </member>
        <member name="M:XSharp.Core.Functions.AdjustFName(System.String)">
            <summary>
            Remove spaces from a file name specified as a string.
            </summary>
            <param name="cName"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AdjustFNameA(System.String@)">
            <summary>
            Remove spaces from a file name specified as a string, changing the contents of the original file name as well as the returned file name.
            </summary>
            <param name="cName"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FCreate2(System.String,System.UInt32)">
            <summary>
            Create a file or open and truncate an existing file, specifying two strongly typed arguments.
            </summary>
            <param name="cFile">The name of the file to create, including an optional drive, directory, and extension.
            SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and
            directory as part of the file name.  No extension is assumed.  If the file already exists, its length is truncated to 0 without warning.</param>
            <param name="kAttributes"> A number that indicates the attribute to be set when creating the file. See the remarks section for a list of possible values.</param>
            <remarks>
            The possible values for the file attributes are:
            <list type="table">
            <listheader>
            <term>Constant</term> <description>Description</description>
            </listheader>
            <item><term>FC_ARCHIVED</term><description>Archived file </description></item>  
            <item><term>FC_HIDDEN</term> <description>Hidden File</description></item>  
            <item><term>FC_NORMAL</term> <description>Normal Read/write file</description></item>   
            <item><term>FC_READONLY</term> <description>Readonly file</description></item>   
            <item><term>FC_SYSTEM</term> <description>System file</description></item> 
            </list>
            </remarks> 
            <returns>The file handle of the new file.  If an error occurs, the function returns  F_ERROR.  FError() can be used to determine the specific error.</returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FCreate(System.String)">
            <summary>
            Create a file or open and truncate an existing file
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.FCreate2(System.String,System.UInt32)" /> 
            <remarks>This creates the file with a FC_NORMAL attribute </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FCreate(System.String,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FCreate2(System.String,System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.FOpen(System.String)">
            <summary>
            Open a file.
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.FOpen(System.String,System.UInt32)" />
            <remarks>This opens the file with FO_READ and FO_EXCLUSIVE mode.
            <inheritdoc cref="M:XSharp.Core.Functions.FOpen(System.String,System.UInt32)" />
            </remarks> 
        </member>
        <member name="M:XSharp.Core.Functions.FOpen(System.String,System.UInt32)">
            <overloads>
            <summary>Open a file.</summary>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
            </overloads>
            <summary>
            Open a file, specifying two strongly-typed arguments.
            </summary>
            <param name="cFile">The file name, including an optional drive, directory, and extension.
            SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and directory
            as part of the file name.  No extension is assumed</param>
            <param name="dwMode">The open mode, which determines the accessibility of the file.  The open mode is composed of elements from the two types of modes:
            Access mode + Sharing mode.  Specifying an access mode constant indicates how the opened file is to be accessed. The sharing mode determines how other
            processes can access the file. See the table in the remarks section for possible values.</param>
            <remarks>
            The possible values for the file open modes are:
            <list type="table">
            <listheader>
            <term>Access Modes</term>           <description>Operation</description>
            </listheader>
            <item><term>FO_READ</term>          <description>Open for reading (default)   </description></item>  
            <item><term>FO_READWRITE</term>     <description>Open for reading and/or writing </description></item>  
            <item><term>FO_WRITE</term>         <description>Open for writing </description></item>
            <item><term> </term>                <description> </description></item>
            </list>
            <list type="table">
            <listheader>
            <term>Sharing Modes</term>          <description>Operation</description>
            </listheader>  
            <item><term>FO_COMPAT</term>        <description>Compatibility mode (default) </description></item>   
            <item><term>FO_DENYNONE</term>      <description>Allow others to read or write </description></item>
            <item><term>FO_DENYREAD</term>      <description>Prevent others from reading </description></item>
            <item><term>FO_DENYWRITE</term>     <description>Prevent others from writing </description></item>
            <item><term>FO_EXCLUSIVE</term>     <description>Exclusive use </description></item>
            <item><term>FO_SHARED</term>        <description>Same as FO_DENYNONE </description></item> 
            </list>
            </remarks> 
            <returns>
            <span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span><br />
            If an error occurs, the function returns F_ERROR.  <br />
            FError() and FException() can be used to determine the specific error.
            </returns>
            <remarks>
      <note type="tip">
        The low level File IO functions in the X# runtime are using .Net filestreams in the background. <br />
        That means that the file handles returned by FOpen() and FCreate() are not 'normal' file handles,
        but unique identifiers that are used to find the underlying stream object in a collection of
        streams in the runtime. <br />
        That also means that you can't use file handles for functions such as FRead() and FWrite() that were not
        created in the X# runtime.<br />
        If you want to access the underlying FileStream, then you should call the 
        function <see cref="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">FGetStream() </see>
      </note>
    </remarks>
            <seealso cref="M:XSharp.Core.Functions.FError" />
            <seealso cref="M:XSharp.Core.Functions.FException" />
        </member>
        <member name="M:XSharp.Core.Functions.FOpen2(System.String,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.FOpen(System.String,System.UInt32)" /> 
        </member>
        <member name="M:XSharp.Core.Functions.GetFAttr(System.String)">
            <summary>
            Convert file attributes to numbers.
            </summary>
            <param name="uxFileAttr"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetFAttr(System.UInt32)">
            <summary>
            Convert file attributes to numbers.
            </summary>
            <param name="dwAttributes"></param>
            <returns>
            Does not do anything. Returns the original value
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetFMask(System.String)">
            <summary>
            Prepare a file specification for wildcard searching.
            </summary>
            <param name="cFileMask"></param>
            <returns>
            When the source string ends with ":" or "\" then *.* is added
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.String2FAttr(System.String)">
            <param name="cAttr"> One or more of the following constants or strings: ADHSRV</param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.FAttr2String(System.UInt32)">
            <summary>
            Display file attributes as a string.
            </summary>
            <param name="nAttrib"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Bytes2String(System.Byte[],System.Int32)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Core.Functions.String2Bytes(System.String)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Core.Functions.FGetBuffer(System.IntPtr,System.Int32)">
            <summary>Access or allocate the File I/O Buffer used by the X# Runtime for Low Level File Access for a file.</summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param>
            <param name="nSize">The size of the buffer that you would like to allocate.s</param> 
            <returns>The Byte[] associated with the file handle for an open file.
            When the file handle is invalid then a NULL object will be returned.</returns>
            <remarks>This function will either return the existing buffer or allocate a new buffer of the requested size. <br />
            When there is already a buffer allocated for the file handle, and this buffer is large enough then the existing buffer is returned.
            When the size requested exceeds the size of the allocated buffer, or when no buffer exists, then a new byte array will be allocated.
            </remarks>
            <seealso cref="M:XSharp.Core.Functions.FClose(System.IntPtr)" />
        </member>
        <member name="M:XSharp.Core.Functions.FGetStream(System.IntPtr)">
            <summary>Access the FileStream object used by the X# Runtime for Low Level File Access </summary>
            <param name="pFile"><span>
      The handle of the file. <em>Please see the remark below about the compatibility of X# Runtime file handles and Win32 file handles.</em>
    </span></param> 
            <returns>The FileStream object or NULL when the handle is not valid </returns>
            <remarks><note type="warning">You are not supposed to close the stream object that you retrieve with this function.
            The Lifetime management of the stream should be left to the X# Runtime <br />
            If you want to close the stream, please use the FClose() function </note>
            </remarks>
            <seealso cref="M:XSharp.Core.Functions.FClose(System.IntPtr)" />
        </member>
        <member name="M:XSharp.Core.Functions.FRename(System.String,System.String)">
            <summary>
            Change the name of a file.
            </summary>
            <param name="cOldFile">The original file name, including an optional drive, directory, and extension.  SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and directory as part of the file name.  No extension is assumed.</param>
            <param name="cNewFile">The new file name, including an optional drive, directory, and extension.  SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and directory as part of the file name.  No extension is assumed.  If the source directory is different from the target directory, the file moves to the target directory.  If cNewFile exists or is currently open, FRename() fails and returns FALSE.</param>
            <returns>TRUE if the operation succeeds; otherwise, FALSE.  In the case of a failure, FError() can be used to determine the specific error.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.FErase(System.String)">
            <summary>
            Delete a file from disk.
            </summary>
            <param name="cFile">The file name, including an optional drive, directory, and extension.  SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and directory as part of the file name.  No extension is assumed.</param>
            <returns>TRUE if the operation succeeds; otherwise, FALSE.  In the case of a failure, FError() can be used to determine the specific error.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.FCopy(System.String,System.String)">
             <summary>Copy a file to a new file or to a device.</summary>
             <param name="cSourceFile">The name of the source file to copy, including an optional drive, directory, and extension.</param>
             <param name="cTargetFile">The name of the target file, including an optional drive, directory, and extension.</param>
             <returns>TRUE if successful; otherwise, FALSE.</returns>
             <remarks>
             FCopy() is the functional form of the COPY FILE command.
             If cSourceFile does not exist, a runtime error is raised.  
             If cTargetFile does not exist, it is created.  
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.FCopy(System.String,System.String,System.Boolean)">
             <inheritdoc cref="M:XSharp.Core.Functions.FCopy(System.String,System.String)" />"
             <param name="lOverWrite">Should the target file be overwritten.</param>
             <remarks>
             FCopy() is the functional form of the COPY FILE command.
             If cSourceFile does not exist, a runtime error is raised.  
             If cTargetFile does not exist, it is created.  If it exists it is only overwritten if lOverWrite = TRUE
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions._SplitPath(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Break a path name into its components.
            </summary>
            <param name="cPath"></param>
            <param name="cDrive"></param>
            <param name="cDir"></param>
            <param name="cName"></param>
            <param name="cExt"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetMacroCompiler">
            <summary>
            Get the type of the class that is used to compile macros
            </summary>
            <returns>The type of the currently defined MacroCompiler. This may be NULL if no type has been set yet and no macros have been compiled.</returns>
            <seealso cref="T:XSharp.IMacroCompiler"/>
        </member>
        <member name="M:XSharp.Core.Functions.SetMacroCompiler(System.Type)">
            <summary>
            Set the type of the class that must be used to compile macros
            </summary>
            <param name="oCompiler">The type of the class that implements the macro compiler. This type MUST implement IMacroCompiler.</param>
            <returns>The type of the previously defined MacroCompiler. This may be NULL if no type has been set yet and no macros have been compiled.</returns>
            <seealso cref="T:XSharp.IMacroCompiler"/>
        </member>
        <member name="M:XSharp.Core.Functions.SetMacroCompiler(XSharp.IMacroCompiler)">
            <summary>
            Set the class that must be used to compile macros
            </summary>
            <param name="oCompiler">The object that implements the macro compiler.</param>
            <returns>The previously defined MacroCompiler. This may be NULL if no compiler has been set yet and no macros have been compiled.</returns>
            <seealso cref="T:XSharp.IMacroCompiler"/>
        </member>
        <member name="M:XSharp.Core.Functions.MLine(System.String,System.UInt32)">
            <summary>
            Extract a line of text from a string, specifying an optional offset argument.
            </summary>
            <param name="cMemo"></param>
            <param name="nLine"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.MLine(System.String,System.UInt32,System.UInt32@)">
            <summary>
            Extract a line of text from a string, specifying an optional offset argument.
            </summary>
            <param name="cMemo"></param>
            <param name="nLine"></param>
            <param name="nOffset"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.MLine(System.String,System.UInt32,System.UInt32)">
            <summary>
            Extract a line of text from a string, specifying an optional offset argument.
            </summary>    
        </member>
        <member name="M:XSharp.Core.Functions.MLine3(System.String,System.UInt32,System.UInt32@)">
            <summary>
            Extract a line of text from a string, specifying a required offset argument.
            </summary>
            <param name="cMemo"></param>
            <param name="nLineNum"></param>
            <param name="nOffSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.MemoLine(System.String,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Extract a line of text from a string.
            </summary>
            <param name="cMemo"></param>
            <param name="wWidth"></param>
            <param name="wLineNum"></param> 
            <param name="wTabSize"></param>
            <param name="lWrap"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.MemoRead(System.String)">
            <summary>
            Return the contents of a text file as a string. The system assumes the source file has a 8 bit character format.
            For the conversion the system follows the global Ansi setting. The characters are encoded
            using either the current Ansi Windows codepage, or the current OEM Windows Codepage.
            </summary>
            <param name="cFile">The name of the text file to read from disk, including an optional drive, directory, and extension.  SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and directory as part of the file name.  No extension is assumed</param>
            <returns>The string as Unicode String
            </returns>
            <remarks>This function should NOT be used to read the contents of a binary file (such as a word document).
            Use MemoReadBinary() in stead .</remarks>
            <seealso cref='M:XSharp.Core.Functions.MemoReadBinary(System.String)' >MemoReadBinary</seealso>
            <seealso cref='M:XSharp.Core.Functions.MemoWrit(System.String,System.String)' >MemoWrit</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.MemoReadBinary(System.String)">
            <summary>
            Return the contents of a binary file as an array of bytes.
            Use this function in stead of MemoRead() to read the contents of a binary file.
            </summary>
            <param name="cFile">The name of the binary file to read from disk, including an optional drive, directory, and extension.  SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and directory as part of the file name.  No extension is assumed</param>
            <returns>The file as an array of bytes</returns>
            <seealso cref='M:XSharp.Core.Functions.MemoRead(System.String)' >MemoRead</seealso>
            <seealso cref='M:XSharp.Core.Functions.MemoWritBinary(System.String,System.Byte[])' >MemoWritBinary</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.MemoWrit(System.String,System.String)">
            <summary>
            Write a string to a disk file. The text is written in 8 bit character format.
            For the conversion the system follows the global Ansi setting. The characters are encoded
            using either the current Ansi Windows codepage, or the current OEM Windows Codepage.
            </summary>
            <param name="cFile"></param>
            <param name="c"></param>
            <returns>
            </returns>
            <seealso cref='M:XSharp.Core.Functions.MemoRead(System.String)' >MemoRead</seealso>
            <seealso cref='M:XSharp.Core.Functions.MemoWritBinary(System.String,System.Byte[])' >MemoWritBinary</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.MemoWrit(System.String,System.Byte[])">
            <inheritdoc cref="M:XSharp.Core.Functions.MemoWritBinary(System.String,System.Byte[])" />
        </member>
        <member name="M:XSharp.Core.Functions.MemoWritBinary(System.String,System.Byte[])">
            <summary>
            Write binary data  o a disk file. Use this function for binary files instead of MemoWrit(). This day may be read with MemoReadBinary().
            </summary>
            <param name="cFile">The name of the target disk file, including an optional drive, directory, and extension.
            SetDefault() and SetPath() settings are ignored; the Windows default is used unless you specify a drive and
            directory as part of the file name.  No extension is assumed.
            If the file does not exist, it is created.  If it exists, this function attempts to open the file in exclusive
            mode and, if successful, the file is overwritten without warning or error.  If access is denied because,
            for example, another process is using the file, MemoWrit() returns FALSE and NetErr() is set to TRUE.</param>
            <param name="bData">The contents to write</param>
            <returns>TRUE if the writing operation is successful; otherwise, FALSE</returns>
            <seealso cref='M:XSharp.Core.Functions.MemoReadBinary(System.String)' >MemoReadBinary</seealso>
            <seealso cref='M:XSharp.Core.Functions.MemoWrit(System.String,System.String)' >MemoWrit</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.MLPos2(System.String,System.UInt32)">
            <summary>
            Determine the position of a line in a string.
            </summary>
            <param name="cMemo"></param>
            <param name="nLineNum"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.MLCount1(System.String)">
            <summary>
            Count the number of lines in a string.
            </summary>
            <param name="cMemo"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.MemLines(System.String)">
            <summary>
            Count the number of lines in a string or memo field.
            </summary>
            <param name="cMemo"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._MPosToLc(System.String,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <exclude />
        </member>
        <member name="M:XSharp.Core.Functions.MLcToPos(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>Return the position of a character in a formatted string.</summary>
        </member>
        <member name="M:XSharp.Core.Functions.AbsInt(System.Int32)">
            <summary>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
            </summary>
            <param name="i"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AbsLong(System.Int32)">
            <summary>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
            </summary>
            <param name="li"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AbsReal4(System.Single)">
            <summary>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
            </summary>
            <param name="r4"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AbsReal8(System.Double)">
            <summary>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
            </summary>
            <param name="r8"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AbsShort(System.Int16)">
            <summary>
            Return the absolute value of a strongly typed numeric expression, regardless of its sign.
            </summary>
            <param name="si"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Mod(System.Double,System.Double)">
            <summary>
            Return the remainder of one number divided by another number
            </summary>
            <param name="dividend">The dividend of the division operation</param>
            <param name="divisor">The divisor of the division operation</param>
            <returns>A number representing the remainder of <paramref name="dividend"/> divided by <paramref name="divisor"/>.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.Mod(System.Int64,System.Int64)">
            <summary>
            Return the remainder of one number divided by another number
            </summary>
            <param name="dividend">The dividend of the division operation</param>
            <param name="divisor">The divisor of the division operation</param>
            <returns>A number representing the remainder of <paramref name="dividend"/> divided by <paramref name="divisor"/>.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.Mod(System.Int32,System.Int32)">
            <summary>
            Return the remainder of one number divided by another number
            </summary>
            <param name="dividend">The dividend of the division operation</param>
            <param name="divisor">The divisor of the division operation</param>
            <returns>A number representing the remainder of <paramref name="dividend"/> divided by <paramref name="divisor"/>.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapByte(System.Byte)">
            <summary>
            Exchange the right and left halves of a byte.
            </summary>
            <param name="b">The byte whose nibbles should be swaped.</param>
            <returns>
            New value with the nibbles swapped.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapDWord(System.UInt32)">
            <summary>
            Exchange the right and left halves of a double word.
            </summary>
            <param name="dw"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapInt(System.Int32)">
            <summary>
            Exchange the right and left halves of an integer.
            </summary>
            <param name="li"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapLong(System.Int32)">
            <summary>
            Exchange the right and left halves of a long integer.
            </summary>
            <param name="li"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapInt64(System.Int64)">
            <summary>
            Exchange the right and left halves of a Int64
            </summary>
            <param name="i64"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapShort(System.Int16)">
            <summary>
            Exchange the right and left halves of a short integer.
            </summary>
            <param name="si"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SwapWord(System.UInt16)">
            <summary>
            Exchange the right and left halves of a word.
            </summary>
            <param name="w"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.RGB(System.Byte,System.Byte,System.Byte)">
            <summary>
            Get a particular Windows color.
            </summary>
            <param name="bR"></param>
            <param name="bG"></param>
            <param name="bB"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DosError(System.UInt32)">
            <summary>
            Return the last DOS error code  (Exit code) and set a new code.
            </summary>
            <param name="nSet">New value for the DOS eror code </param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DosError">
            <summary>
            Return the last DOS error code  (Exit code). use GetDosError() to fetch the error from the Last Win32 call.
            </summary>
            <param name="nSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetDosError">
            <summary>
            Return the DOS error code from any application.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetEnv(System.String)">
            <summary>
            Retrieve the contents of a DOS environment variable.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetEnv(System.String,System.String)">
            <summary>
            Update or replace the contents of a DOS environment variable.
            </summary>
            <param name="cVar"></param>
            <param name="cValue"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetEnv(System.String,System.String,System.Boolean)">
            <summary>
            Update or replace the contents of a DOS environment variable.
            </summary>
            <param name="cVar"></param>
            <param name="cValue"></param>
            <param name="lAppend"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.NetName">
            <summary>
            Identify the current workstation.
            </summary>
            <returns>The workstation ID as a string.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.CurDir(System.String)">
            <summary>
            Return the current Windows directory.
            </summary>
            <param name="cDisk"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CurDir">
            <summary>
            Return the current Windows directory.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CurDrive">
            <summary>
            Return the current Windows drive.
            </summary>
            <returns>
            Return the letter of the current drive without colon
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.WorkDir">
            <summary>
            Return the currently selected working directory.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DiskFree">
            <summary>
            Return the space available on the current disk drive.
            </summary>
            <param name="cDisk"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DiskFree(System.String)">
            <summary>
            Return the space available on a specified disk.
            </summary>
            <param name="cDrive">The drivename to get the free space from.</param>
            <returns>
            The free space on the specified disk drive.
            </returns>	   
        </member>
        <member name="M:XSharp.Core.Functions.DiskFree(System.Int32)">
            <summary>
            Return the space available on a specified disk.
            </summary>
            <param name="nDrive">The drive number (1 = A, 2 = B etc)</param>
            <returns>
            The free space on the specified disk drive.
            </returns>	   
        </member>
        <member name="M:XSharp.Core.Functions.DiskName">
            <summary>
            Return the current Windows drive.
            </summary>
            <returns>
            Return the letter of the current drive without colon
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DiskSpace">
            <summary>
            Return the capacity of the current disk.
            </summary>
            <returns>
            The capacity of the current disk.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DiskSpace(System.Int32)">
            <summary>
            Return the capacity of the specified disk.
            </summary>
            <param name="nDisk"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DiskSpace(System.String)">
            <summary>
            Return the capacity of the specified disk.
            </summary>
            <param name="cDrive"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.NetErr">
            <summary>
            Detect a concurrency conflict.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.NetErr(System.Boolean)">
            <summary>
            Detect a concurrency conflict.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.LockTries">
            <summary>
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.LockTries(System.UInt32)">
            <summary>
            </summary>
            <param name="n"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DirChange(System.String)">
            <summary>
            Change the current Windows directory.
            </summary>
            <param name="pszDir"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DirMake(System.String)">
            <summary>
            Create a directory.
            </summary>
            <param name="pszDir"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DirRemove(System.String)">
            <summary>
            Remove a directory.
            </summary>
            <param name="pszDir"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DiskChange(System.String)">
            <summary>
            Change the current disk drive.
            </summary>
            <param name="pszDisk"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.OS">
            <summary>Return the operating system name.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.OS(System.Boolean)">
            <summary>Return the operating system name.</summary>
            <param name="lExtended"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._ExecName">
            <exclude/>	
        </member>
        <member name="M:XSharp.Core.Functions._GetCmdLine">
            <summary>
            Returns the command line used to invoke the application.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._Quit">
            <summary>Terminate application processing, close all open files, and return control to the operating system.</summary>
            <remarks>This function can be used from anywhere in an application.
            A RETURN executed from the Start() function can also be used to QUIT an application.</remarks>
        </member>
        <member name="M:XSharp.Core.Functions.AllTrim(System.String)">
            <summary>Remove leading and trailing spaces from a string. </summary>
            <param name="cString">The string to trim.</param>
            <seealso cref='M:XSharp.Core.Functions.Trim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.RTrim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.LTrim(System.String)' />
            <returns>A trimmed string, with leading and trailing spaces removed.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.Asc(System.String)">
            <summary>
            Convert a character to its ASCII value using default Windows codepage
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AscW(System.String)">
            <summary>
            Convert a character to its Unicode ASCII value.
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.At(System.String,System.String)">
            <summary>
            Return the position of the first occurrence of a substring within a string.
            </summary>
            <param name="cSearch">The string to search for.</param>
            <param name="c">The string to search in.</param>
            <returns>
            The position of the first occurrence of cSearch within cTarget.  If cSearch is not found, At() returns 0.
            If cSearch is empty or c is empty, At() returns 0.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.At2(System.String,System.String)">
            <summary>
            Return the position of the first occurrence of a substring within a string.
            </summary>
            <param name="cSearch">The string to search for.</param>
            <param name="c">The string to search in.</param>
            <returns>
            The position of the first occurrence of cSearch within cTarget.  If cSearch is not found, At() returns 0.
            If cSearch is empty or c is empty, At() returns 0.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.At3(System.String,System.String,System.UInt32)">
            <summary>
            Return the position of the first occurrence of a substring within a string, starting at a specified position.
            </summary>
            <param name="cSearch">The string to search for.</param>
            <param name="c">The string to search in.</param>
            <param name="dwOff">The position to begin the search with. This offset is ZERO based</param>
            <returns>
            The position of the first occurrence of cSearch within cTarget behind the give position.  If cSearch is not found, At() returns 0.
            If cSearch is empty or c is empty, At3() returns 0.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AtC(System.String,System.String)">
            <summary>
            Return the position of the first occurrence of a substring within a string, without regard for case.
            </summary>
            <param name="cSearch"></param>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.AtC2(System.String,System.String)">
            <summary>
            Return the position of the first occurrence of a substring within a string, without regard for case.
            </summary>
            <param name="cSearch"></param>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ATCLine(System.String,System.String)">
            <summary>
            Return the line number of the first occurrence of a substring within a multiple line string, without regard for case.
            </summary>
            <param name="cSearch"></param>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ATCLine2(System.String,System.String)">
            <summary>
            Return the line number of the first occurrence of a substring within a multiple line string, without regard for case.
            </summary>
            <param name="cSearch"></param>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ATLine(System.String,System.String)">
            <summary>
            Return the line number of the first occurrence of a substring within a multiple line string.
            </summary>
            <param name="cSearch"></param>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ATLine2(System.String,System.String)">
            <summary>
            Return the line number of the first occurrence of a substring within a multiple line string.
            </summary>
            <param name="cSearch"></param>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.B64EncFile(System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.B64EncString(System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="cIn"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Buffer(System.UInt32)">
            <summary>
            Return an uninitialized string of a specified size.
            </summary>
            <param name="dwSize"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CharEven(System.String)">
            <summary>
            Return the even-numbered characters in a string.
            </summary>
            <param name="c">The string from which the even characters shall be extracted.</param>
            <returns>
            A string which is assembled from the even characters in c.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CharMix(System.String,System.String)">
            <summary>
            Return a string whose odd-numbered characters and even-numbered characters are from 2 different strings.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CharOdd(System.String)">
            <summary>
            Return the odd-numbered characters in a string.
            </summary>
            <param name="c">The string from which the odd characters shall be extracted.</param>
            <returns>
            A string which is assembled from the odd characters in c.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CharPos(System.String,System.UInt32)">
            <summary>
            Return a character based on its position in a string.
            </summary>
            <param name="c">The strign to be searched</param>
            <param name="nStart">The position of the reuested charachter</param>
            <returns>
            The character at the given position as a string, if position is beyond the length
            of the length of the string String.Empty is returned.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Chr(System.UInt32)">
            <summary>
            Convert an ASCII code to a character value.
            </summary>
            <param name="dwChar"></param>
            <returns>A single character that corresponds to the value of the parameter</returns>
            <remarks>
            The value of dwChar must be between 0 and 255<br/>
            The return value of Chr() in XSharp depends on the setting of SetAnsi().<br/>
            When SetAnsi() = TRUE then the active windows Ansi codepage is used to calculate the character.<br/>
            When SetAnsi() = FALSE then the active windows Oem codepage is used to calculate the character.<br/>
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.ChrW(System.UInt32)">
            <summary>
            Convert an ASCII code to a character value.
            </summary>
            <param name="dwChar"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Crypt(System.String,System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="cSource"></param>
            <param name="cKey"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.CryptA(System.String,System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="cSource"></param>
            <param name="cKey"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.DecodeBase64(System.String,System.IntPtr)">
            <summary>
            Decode a file from an e-mail transfer.
            </summary>
            <param name="cMailPart"></param>
            <param name="hfOut"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.EncodeBase64(System.IntPtr,System.IntPtr)">
            <summary>
            Encode a file for e-mail transfer.
            </summary>
            <param name="hfIn"></param>
            <param name="hfOut"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.HardCR(System.String)">
            <summary>
            Replace all soft carriage returns (Chr(141)) in a string with hard carriage returns (Chr(13)).
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Hex2C(System.String)">
            <summary>
            </summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Instr(System.String,System.String)">
            <summary>
            Indicate whether a substring is contained in a string.
            </summary>
            <param name="cSearch">The string to search for.</param>
            <param name="c">The string to search in.</param>
            <returns>
            True if the searched string is in the string.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Left(System.String,System.UInt32)">
            <summary>
            Extract a substring beginning with the first character in a string.
            </summary>
            <param name="c">A string from which the left part should be extracted.</param>
            <param name="dwLen">The length of the substring which should be extracted.</param>
            <returns>
            A string of the left first characters in the given length.
            </returns>function Len(c as string) as dword
        </member>
        <member name="M:XSharp.Core.Functions.Lower(System.String)">
            <summary>
            Convert the uppercase and mixed case characters in a string to lowercase.
            </summary>
            <param name="cSource">The string to be converted.</param>
            <returns>Returns the input string with all characters converted to lowercase.</returns>
            <seealso cref='M:XSharp.Core.Functions.LowerA(System.String@)'>LowerA</seealso>
            <seealso cref='M:XSharp.Core.Functions.Upper(System.String)'>Upper</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.LowerA(System.String@)">
            <summary>
            Convert the uppercase and mixed case characters in a string to lowercase, 
            changing the contents of the argument as well as the return value.
            </summary>
            <param name="cSource">The string to be converted.</param>
            <returns>Returns the input string with all characters converted to lowercase.</returns>
            <seealso cref='M:XSharp.Core.Functions.Lower(System.String)'>Lower</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.LTrim(System.String)">
            <summary>
            Remove leading spaces from a string.
            </summary>
            <param name="c">The string from which leading spaces should be cut off.</param>
            <returns>
            The input strings without eading spaces.
            </returns>
            <seealso cref='M:XSharp.Core.Functions.RTrim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.Trim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.AllTrim(System.String)' />
        </member>
        <member name="M:XSharp.Core.Functions.Occurs(System.String,System.String)">
            <summary>
            Return the number of times a substring occurs in a string.
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.Occurs3(System.String,System.String,System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.Occurs2(System.String,System.String)">
            <inheritdoc cref="M:XSharp.Core.Functions.Occurs(System.String,System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.Occurs3(System.String,System.String,System.UInt32)">
            <summary>
            Return the number of times a substring occurs in a string, starting at a specified position.
            </summary>
            <param name="cSearch">The substring to search for. </param>
            <param name="cTarget">The string in which to search. </param>
            <param name="nOffset">The position in the string at which to start searching.  A value of zero (0) specifies the first byte. </param>
            <returns>
            The number of times that the search string occurs in the original string.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Ansi2Oem(System.String)">
            <overloads>
            <summary>Convert a string of ANSI characters to OEM characters.</summary>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Oem2Ansi" />
            <seealso cref="O:XSharp.Core.Functions.Ansi2OemA" />
            </overloads>
            <summary>Convert a string of ANSI characters to OEM characters.</summary>
            <param name="cSource">String in Ansi format</param>
            <returns>String converted to Unicode
            </returns>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Ansi2OemA" />
            <seealso cref="M:XSharp.Core.Functions.Ansi2OemBuff(System.Byte[],System.Byte[],System.UInt32)" />
            <seealso cref="O:XSharp.Core.Functions.Oem2Ansi" />
            <seealso cref="O:XSharp.Core.Functions.Oem2AnsiA" />
        </member>
        <member name="M:XSharp.Core.Functions.Ansi2Oem(System.Byte[])">
            <summary>
            Convert an array of bytes from ANSI to OEM.
            </summary>
            <param name="bSource">String in Ansi format</param>
            <inheritdoc cref="M:XSharp.Core.Functions.Ansi2Oem(System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.Ansi2Oem(System.Byte[],System.Int32)">
            <param name="iLen">Length of the source array</param>
            <inheritdoc cref="M:XSharp.Core.Functions.Ansi2Oem(System.Byte[])" />
        </member>
        <member name="M:XSharp.Core.Functions.Ansi2OemA(System.String@)">
            <overloads>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Oem2AnsiA" />
            <seealso cref="O:XSharp.Core.Functions.Ansi2Oem" />
            </overloads>
            <summary>
            Convert a string of ANSI characters to OEM characters, changing the contents of the original string as well as the returned string.
            </summary>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Ansi2Oem" />
            <seealso cref="M:XSharp.Core.Functions.Ansi2OemBuff(System.Byte[],System.Byte[],System.UInt32)" />
            <seealso cref="O:XSharp.Core.Functions.Oem2Ansi" />
            <seealso cref="O:XSharp.Core.Functions.Oem2AnsiA" />
        </member>
        <member name="M:XSharp.Core.Functions.Ansi2OemA(System.Byte[])">
            <summary>
            Convert an array of ANSI characters to OEM characters, changing the contents of the argument as well as the return value.
            </summary>
            <param name="bSource">A byte array that contains the string to convert</param>
            <inheritdoc cref="O:XSharp.Core.Functions.Oem2AnsiA(System.String@)" />
        </member>
        <member name="M:XSharp.Core.Functions.Oem2Ansi(System.String)">
            <overloads>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Ansi2Oem" />
            <seealso cref="O:XSharp.Core.Functions.Oem2AnsiA" />
            </overloads>
            <summary>
            Convert a string of OEM characters to ANSI characters.
            </summary>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <param name="cSource">String in OEM format</param>
            <returns>String converted to Ansi</returns>
            <seealso cref="M:XSharp.Core.Functions.Oem2AnsiBuff(System.Byte[],System.Byte[],System.UInt32)" />
            <seealso cref="O:XSharp.Core.Functions.Ansi2Oem" />
            <seealso cref="O:XSharp.Core.Functions.Ansi2OemA" />
            <seealso cref="O:XSharp.Core.Functions.Oem2AnsiA" />
        </member>
        <member name="M:XSharp.Core.Functions.Oem2Ansi(System.Byte[])">
            <summary>
            Convert an array of OEM characters to ANSI characters.
            </summary>
            <param name="bSource">A byte array that contains the string to convert</param>
            <inheritdoc cref="M:XSharp.Core.Functions.Oem2Ansi(System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.Oem2AnsiA(System.String@)">
            <overloads>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Oem2Ansi" />
            <seealso cref="O:XSharp.Core.Functions.Ansi2OemA" />
            </overloads>
            <summary>
            Convert a string of OEM characters to ANSI characters, changing the contents of the argument as well as the return value.
            </summary>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="O:XSharp.Core.Functions.Ansi2Oem" />
            <seealso cref="O:XSharp.Core.Functions.Ansi2OemA" />
            <seealso cref="O:XSharp.Core.Functions.Oem2Ansi" />
        </member>
        <member name="M:XSharp.Core.Functions.Oem2AnsiA(System.Byte[])">
            <summary>
            Convert an array of OEM characters to ANSI characters, changing the contents of the argument as well as the return value.
            </summary>
            <param name="bSource">A byte array that contains the string to convert</param>
            <inheritdoc cref="M:XSharp.Core.Functions.Oem2AnsiA(System.String@)" />
        </member>
        <member name="M:XSharp.Core.Functions.Oem2Ansi(System.Byte[],System.Int32)">
            <inheritdoc cref="M:XSharp.Core.Functions.Oem2Ansi(System.Byte[])" />
            <param name="iLen">The number of characters to convert</param>
            <returns>String converted to Ansi</returns>
            <seealso cref="M:XSharp.Core.Functions.Ansi2Oem(System.Byte[],System.Int32)" />
        </member>
        <member name="M:XSharp.Core.Functions.Oem2AnsiBuff(System.Byte[],System.Byte[],System.UInt32)">
            <summary>
            Convert a specified number of OEM characters in a source buffer to a buffer of corresponding, if any, ANSI characters.
            </summary>
            <param name="bDest">A byte array that will contain the converted characters</param>
            <param name="bSource">A byte array that contains the characters to convert</param>
            <param name="dwCount">The number of characters to convert</param>
            <returns>The byte array with the converted characters</returns>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="M:XSharp.Core.Functions.Ansi2OemBuff(System.Byte[],System.Byte[],System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.Ansi2OemBuff(System.Byte[],System.Byte[],System.UInt32)">
            <summary>
            Convert a specified number of ANSI characters in a source buffer to a buffer of corresponding OEM characters.
            </summary>
            <param name="bDest">A byte array that will contain the converted characters</param>
            <param name="bSource">A byte array that contains the characters to convert</param>
            <param name="dwCount">The number of characters to convert</param>
            <returns>The byte array with the converted characters</returns>
            <remarks><span>
      <note type="warning">
      The Ansi2Oem() and Oem2Ansi() family of functions are compatibility functions. Do not use them unless you really have to.
      X# is a Unicode language and conversions from Unicode - Ansi - Oem - Unicode will take place
      if you use these functions. <br />
        You should also realize that Ansi2Oem(Oem2Ansi(cSource)) will not always return cSource. Some characters may
        not be available in the OEM codepage and could be translated to other characters.
        For example: Windows codepage 1252 has Capital E Umlaut (Ë) on position 203.
        When translated to OEM codepage 437 this will become capital E without umlaut (69). Converting back to Ansi
        this will remain a E without umlaut.
        </note>
    </span></remarks>
            <seealso cref="M:XSharp.Core.Functions.Oem2AnsiBuff(System.Byte[],System.Byte[],System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.Proper(System.String)">
            <summary>
            Change the first character of each word to uppercase
            </summary>
            <param name="cString">The string to be converted.</param>
            <returns>
            The converted string according to the CurrentCulture
            </returns>
            <seealso cref="M:XSharp.Core.Functions.ProperA(System.String@)" />
        </member>
        <member name="M:XSharp.Core.Functions.ProperA(System.String@)">
            <summary>
            Capitalize a proper name correctly, changing the contents of the argument as well as the return value.
            </summary>
            <param name="cText"></param>
            <returns>
            The converted string according to the CurrentCulture
            </returns>
            <inheritdoc cref="M:XSharp.Core.Functions.Proper(System.String)" />
            <seealso cref="M:XSharp.Core.Functions.Proper(System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.QPEncString(System.String)">
            <summary>
            </summary>
            <param name="cIn"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.RAt(System.String,System.String)">
            <summary>
            Return the position of the last occurrence of a substring within a string.
            </summary>
            <param name="cSearch">THe string to be searched.</param>
            <param name="c">The string to be searched in.</param>
            <returns>
            The right most position of the string to be searched inside the searched string.
            </returns>
            <seealso cref="M:XSharp.Core.Functions.RAt3(System.String,System.String,System.UInt32)" />
            <seealso cref="M:XSharp.Core.Functions.RAt2(System.String,System.String)" />
            <seealso cref="M:XSharp.Core.Functions.RAt(System.String,System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.RAt2(System.String,System.String)">
            <inheritdoc cref="M:XSharp.Core.Functions.RAt(System.String,System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.RAt3(System.String,System.String,System.UInt32)">
            <param name="dwOffSet">The position in the string at which to start searching.  A value of zero (0) specifies the first byte.</param>
            <inheritdoc cref="M:XSharp.Core.Functions.RAt(System.String,System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.RAtLine(System.String,System.String)">
            <summary>
            Return the line number of the last occurrence of a substring within a multiline string.
            </summary>
            <inheritdoc cref="M:XSharp.Core.Functions.RAt(System.String,System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.RATLine2(System.String,System.String)">
            <inheritdoc cref="M:XSharp.Core.Functions.RAtLine(System.String,System.String)" />
        </member>
        <member name="M:XSharp.Core.Functions.Repl(System.String,System.UInt32)">
            <summary>
            Repeat a string a specified number of times.
            </summary>
            <param name="c">The string to be repeated.</param>
            <param name="dwCount">The number of replications.</param>
            <returns>
            A string which consist of dwCount replications of c.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Replicate(System.String,System.UInt32)">
            <inheritdoc cref="M:XSharp.Core.Functions.Repl(System.String,System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.Right(System.String,System.UInt32)">
            <summary>
            Return a substring beginning with the rightmost character.
            </summary>
            <param name="c">The string to extract the rightmost characters from.</param>
            <param name="dwLen">The length of the string to extract.</param>
            <returns>
            Returns the right most part in the given length.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.RTrim(System.String)">
            <summary>
            Remove trailing spaces from a string.
            </summary>
            <param name="c">The string to trim.</param>
            <returns>The string with the trailing spaces removed.  If the source string  is a NULL_STRING or all spaces, RTrim() returns a NULL_STRING.</returns>
            <seealso cref='M:XSharp.Core.Functions.LTrim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.Trim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.AllTrim(System.String)' />
        </member>
        <member name="M:XSharp.Core.Functions.SClone(System.String)">
            <summary>
            Create new character variable with the same characters as the original string.
            </summary>
            <param name="c">The string be cloned.</param>
            <returns>
            A copy of the input string.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Space(System.UInt32)">
            <summary>
            Create a string of spaces.
            </summary>
            <param name="count">The number of spaces to return.</param>
            <returns>A string of spaces.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.Space(System.Int32)">
            <inheritdoc cref="M:XSharp.Core.Functions.Space(System.UInt32)" />
        </member>
        <member name="M:XSharp.Core.Functions.SLen(System.String)">
            <summary>
            Return the length of a strongly typed string.
            </summary>
            <param name="c">String which length should be calculated.</param>
            <returns>
            The length of the string.
            </returns>
            <remarks>
            The compiler will replace calls to SLen() as much as possible with a direct call to the Length property of a string.
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.SoundEx(System.String)">
            <summary>
            Convert a string to Soundex form.
            </summary>
            <param name="c"> The string to convert. </param>
            <returns>A 4-digit string starting with an alphabetic character and ending with three digits.</returns>
            <remarks>
            Soundex() is a character function that indexes and searches for sound-alike or phonetic matches.
            It is used in applications where the precise spelling of character keys is not known or where there is a
            high probability of misspelled names.  Misspelling is common in real-time transaction systems where the
            data entry operator is receiving information over the telephone.  Soundex() works by bringing sound-alikes
            together under the same key value.  Note, however, the soundex method is not absolute.
            Keys that are quite different can result in the same soundex value.
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.StrEvaluate(System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="s"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Stuff(System.String,System.UInt32,System.UInt32,System.String)">
            <summary>
            Delete and insert characters in a string.
            </summary>
            <param name="c">The string in which the substitution should take place</param>
            <param name="n">Starting position of the substring to be deleted.</param>
            <param name="nDel">The number of characters to be deleted.</param>
            <param name="cIns">The string which should be inserted instead of the deleted characters.</param>
            <returns>
            A new string with the substring from the starting position in the given length being subsituted with the insert string.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.__SubStr(System.String,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:XSharp.Core.Functions.SubStr2(System.String,System.UInt32)">
            <summary>
            Extract a substring from a string, using strong typing and only two arguments.
            </summary>
            <param name="c">The string to be extracted from.</param>
            <param name="dwStart">The starting position from which the substring should be extracted.</param>
            <returns>
            The extracted substring.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SubStr3(System.String,System.UInt32,System.UInt32)">
            <summary>
            Extract a substring from a string, using strong typing and three required arguments.
            </summary>
            <param name="c">The string to be extracted from.</param>
            <param name="dwStart">The starting position from which the substring should be extracted.</param>
            <param name="dwLen">The length of the substring to beextracted</param>
            <returns>
            The extracted substring in the given length.
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.Trim(System.String)">
            <summary>
            Remove trailing spaces from a string.
            </summary>
            <param name="c">The string to trim. </param>
            <returns>The string with the trailing spaces removed.  If the string is a NULL_STRING or all spaces, Trim() returns a NULL_STRING.</returns>
            <seealso cref='M:XSharp.Core.Functions.RTrim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.LTrim(System.String)' />
            <seealso cref='M:XSharp.Core.Functions.AllTrim(System.String)' />
        </member>
        <member name="M:XSharp.Core.Functions.Upper(System.String)">
            <summary>
            Convert the lowercase and mixed case characters in a string to uppercase.
            </summary>
            <param name="cSource"> The string to convert to uppercase. </param>
            <returns>String with all alphabetical characters converted to uppercase.  All other characters remain the same as in the original string.</returns>
            <seealso cref='M:XSharp.Core.Functions.UpperA(System.String@)'>UpperA</seealso>
            <seealso cref='M:XSharp.Core.Functions.Lower(System.String)'>Lower</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.UpperA(System.String@)">
            <summary>
            Convert the lowercase and mixed case characters in a string to uppercase, changing the contents of the argument as well as the return value.
            </summary>
            <param name="cSource"> The string to convert to uppercase. </param>
            <returns>String with all alphabetical characters converted to uppercase.  All other characters remain the same as in the original string.</returns>
            <seealso cref='M:XSharp.Core.Functions.Upper(System.String)'>Upper</seealso>
            <remarks>UpperA() is similar to Upper() except that it changes the contents of the argument as well as the return value.  See Upper() for details.</remarks>
        </member>
        <member name="M:XSharp.Core.Functions.UUDecodeLine(System.String,System.Void*)">
            <summary>This function is not implemented yet</summary>
            <param name="cLine"></param>
            <param name="hfOut"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.UUEncFile(System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.UUEncLine(System.String)">
            <summary>This function is not implemented yet</summary>
            <param name="c"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.IsAlpha(System.String)">
            <summary>Determine if the leftmost character in a string is alphabetic.</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character is alphabetic.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsAlNum(System.String)'>IsAlNum</seealso>
            <seealso cref='M:XSharp.Core.Functions.IsAlphaNum(System.String)'>IsAlphaNum</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsAlNum(System.String)">
            <summary>Determine if the leftmost character in a string is alphanumeric.</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character is either alphabetic or numeric otherwise FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsAlNum(System.String)'>IsAlpha</seealso>
            <seealso cref='M:XSharp.Core.Functions.IsAlphaNum(System.String)'>IsAlphaNum</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsAlphaNum(System.String)">
            <summary>Determine if the leftmost character in a string is alphanumeric..</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character is either alphabetic or numeric otherwise FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsAlNum(System.String)'>IsAlNum</seealso>
            <seealso cref='M:XSharp.Core.Functions.IsAlpha(System.String)'>IsAlpha</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsDigit(System.String)">
            <summary>Determine if the leftmost character in a string is a digit (that is, a numeric digit between 0 and 9).</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character of the string is a number from 0 to 9; otherwise FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsBDigit(System.String)'>IsBDigit</seealso>
            <seealso cref='M:XSharp.Core.Functions.IsXDigit(System.String)'>IsXDigit</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsBDigit(System.String)">
            <summary>Determine if the leftmost character in a string is a binary digit  (0 or 1)).</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character of the string is 0 or 1 otherwise FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsXDigit(System.String)'>IsXDigit</seealso>
            <seealso cref='M:XSharp.Core.Functions.IsDigit(System.String)'>IsDigit</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsXDigit(System.String)">
            <summary>Determine if the leftmost character in a string is a hex character (that is, digits from 1 through 9 and letters from A through F).</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character is hex otherwise FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsBDigit(System.String)'>IsBDigit</seealso>
            <seealso cref='M:XSharp.Core.Functions.IsDigit(System.String)'>IsDigit</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsSpace(System.String)">
            <summary>Determine if the leftmost character in a string is a blank (that is, Chr(9) through Chr(13) or Chr(32)).</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character of the string blank otherwise FALSE.</returns>
        </member>
        <member name="M:XSharp.Core.Functions.IsUpper(System.String)">
            <summary>Determine if the leftmost character in a string is uppercase.</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character is an uppercase letter otherwise, FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsLower(System.String)'>IsLower</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.IsLower(System.String)">
            <summary>Determine if the leftmost character in a string is lower.</summary>
            <param name="cSource">The string to examine.</param>
            <returns>TRUE if the first character is a lowercase letter otherwise, FALSE.</returns>
            <seealso cref='M:XSharp.Core.Functions.IsUpper(System.String)'>IsUpper</seealso>
        </member>
        <member name="M:XSharp.Core.Functions._Like(System.String,System.String)">
            <summary>Determine if a string matches a wildcard pattern (like the wildcard pattern for the DIR command in the OS).</summary>
            <param name="sWildCard">The wildcard to use. '*' matches 0 or more characters until the next non-wildcard character, '?' matches any character, all other characters must match exactly.</param>
            <param name="sSource">The string to examine.</param>
            <remarks>This function is case sensitive. If you want to do a case insensitive compare, use Like()</remarks>
            <seealso cref='M:XSharp.Core.Functions.Like(System.String,System.String)'>Like</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.Like(System.String,System.String)">
            <summary>Determine if a string matches a wildcard pattern (like the wildcard pattern for the DIR command in the OS).</summary>
            <param name="sWildCard">The wildcard to use. '*' matches 0 or more characters until the next non-wildcard character, '?' matches any character, all other characters must match exactly.</param>
            <param name="sSource">The string to examine.</param>
            <remarks>This function is case INsensitive. If you want to do a case sensitive compare, use _Like()</remarks>
            <seealso cref='M:XSharp.Core.Functions._Like(System.String,System.String)' >_Like</seealso>
        </member>
        <member name="M:XSharp.Core.Functions.SetLiteral(System.UInt32)">
            <exclude />
        </member>
        <member name="M:XSharp.Core.Functions._GetStringDXAX(System.UInt32)">
            <exclude />
        </member>
        <member name="M:XSharp.Core.Functions._VO_Sprintf(System.UInt32,System.Object[])">
            <exclude />
        </member>
        <member name="M:XSharp.Core.Functions._VO_Sprintf(System.String,System.Object[])">
            <exclude />
        </member>
        <member name="M:XSharp.Core.Functions.__CavoStr(System.UInt32)">
            <exclude />
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_DELETED">
            <exclude />
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_LOCKED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_RECSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_RECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_UPDATED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_BUFFPTR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_RAWRECORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_ENCRYPTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_RAWMEMOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_RAWDATA">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRI_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_NAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_DEC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_ALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_ISNULL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_COUNTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_STEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_GET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_OFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_POINTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_DIRECT_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_BLOB_DIRECT_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_STRUCT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_PROPERTIES">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBS_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.TOPSCOPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BOTTOMSCOPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ISDBF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_CANPUTREC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GETHEADERSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_LASTUPDATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GETDELIMITER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_SETDELIMITER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GETRECSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GETLOCKARRAY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_TABLEEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_FULLPATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ISFLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_READONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_CHILDCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_FILEHANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ISANSI">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BOF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_EOF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_DBFILTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_FOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_FCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_LOCKCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_VALIDBUFFER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GETSCOPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_LOCKOFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOHANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BLOB_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_CODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_NEWINDEXLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_DOSCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_DB_VERSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RDD_VERSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RDD_LIST">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOFIELD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_VO_MACRO_SYNTAX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RDD_OBJECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BLOB_DIRECT_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BLOB_DIRECT_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BLOB_INTEGRITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BLOB_OFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_BLOB_RECOVER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_LOCKSCHEME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ISREADONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ROLLBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_PASSWORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ISENCRYPTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_SEPARATOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOVERSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_TABLETYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_SCOPEDRELATION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_TRIGGER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_OPENINFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ENCRYPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_DECRYPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_MEMOPACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_DIRTYREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_POSITIONED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_ISTEMPORARY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_LOCKTEST">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_CODEPAGE_HB">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_TRANSREC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_SETHEADER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_QUERY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_SUPPORTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_CREATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_REMOVE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_CLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_FILL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_ADD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_DROP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_TEST">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_COUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RM_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_AND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_CLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_COUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_DESTROY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_EXFILTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_GETFILTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_HASMAYBE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_MAYBEEVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_NEW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_NEWDUP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_NEWQUERY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_NEXTRECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_NOT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_OR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_PREVRECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_SET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_SETFILTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_RL_TEST">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GET_ACE_TABLE_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBI_GET_ACE_STMT_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_CONDITION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_EXPRESSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_POSITION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_RECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_NAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_NUMBER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_BAGNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_INDEXNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_BAGEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_INDEXEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ORDERCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_FILEHANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ISCOND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ISDESC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_UNIQUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_FULLPATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SETCODEBLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYDEC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_HPLOCKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_LOCKOFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYADD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYDELETE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPETOP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPEBOTTOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPETOPCLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPEBOTTOMCLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_CUSTOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPUNIQUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYSINCLUDED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYNORAW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYCOUNTRAW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_OPTLEVEL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPEVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPEVALBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPREGEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPREGEXBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPWILD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SKIPWILDBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPEEVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_FINDREC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_FINDRECCONT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPESET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SCOPECLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_BAGCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_BAGNUMBER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_BAGORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ISMULTITAG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ISSORTRECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_LARGEFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_TEMPLATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_MULTIKEY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_CHGONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_PARTIAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ISREADONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_READLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_WRITELOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_UPDATECOUNTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_EVALSTEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_ISREINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_I_BAGNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_I_TAGNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_RELKEYPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_USECURRENT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_INDEXTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_RESETPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_INDEXPAGESIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_AXS_PERCENT_INDEXED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_GET_ACE_INDEX_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYGOTO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYGOTORAW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_KEYNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_INFO_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_FILE_RECOVER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_FILE_INTEGRITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_OFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_POINTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_EXPORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_ROOT_UNLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_ROOT_PUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_ROOT_GET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_ROOT_LOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_IMPORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_DIRECT_PUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_DIRECT_GET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_GET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_DIRECT_EXPORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_DIRECT_IMPORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_NMODE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_EXPORT_APPEND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_EXPORT_OVERWRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_IMPORT_COMPRESS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BLOB_IMPORT_ENCRYPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_OPTIMIZED_NONE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_OPTIMIZED_PART">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_OPTIMIZED_FULL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_TYPE_UNDEF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_TYPE_NONE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_TYPE_NONCOMPACT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_TYPE_COMPACT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBOI_TYPE_COMPOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRMI_FUNCTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRMI_PARAM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRMI_LOVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRMI_HIVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRMI_RESULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBRMI_SIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBF_STD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBF_VFP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMO_NONE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMO_DBT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMO_FPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMO_SMT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMOVER_STD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMOVER_SIX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMOVER_FLEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_MEMOVER_CLIP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_DEFAULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_CLIPPER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_COMIX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_VFP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_HB32">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_HB64">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DB_DBFLOCK_CLIPPER2">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBT_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FPT_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.SMT_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBV_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DBT_DEFBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FPT_DEFBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.SMT_DEFBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FPT_LOCKPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FPT_LOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FPT_ROOTBLOCK_OFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.SIX_ITEM_BUFSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FLEX_ITEM_BUFSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.MAX_SIXFREEBLOCKS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.MAX_FLEXFREEBLOCKS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FLEXGCPAGE_SIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDT_FULL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDT_TRANSFER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDT_HIDDEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ISDBF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_CANPUTREC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_DELIMITER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_SEPARATOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_TABLEEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ORDBAGEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ORDEREXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ORDSTRUCTEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_LOCAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_REMOTE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_CONNECTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_TABLETYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_LARGEFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_LOCKSCHEME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_RECORDMAP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ENCRYPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_TRIGGER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_AUTOLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_STRUCTORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_STRICTSTRUCT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_FORCEOPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MULTITAG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_SORTRECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MULTIKEY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOVERSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOGCTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOREADLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_MEMOREUSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_BLOB_SUPPORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_PENDINGTRIGGER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_PENDINGPASSWORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_PASSWORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_LOCKRETRY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_DIRTYREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_INDEXPAGESIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_DECIMALS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_SETHEADER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_CONNECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_DISCONNECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_EXECUTE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_ERRORNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_INSERTID">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_AFFECTEDROWS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.RDDI_QUERY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SEEK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SKIP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_GOTO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SETRELATION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_USE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_CREATEINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SETORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SETINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_FIELDNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_BADALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_DUPALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SETFILTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_CYCLICREL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_CREATETABLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_RDDNOTFOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_FIELDINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SELECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_SYMSELECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_TOTAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_RECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_EXPRESSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_EXPR_WIDTH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_DRIVERLOAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_PARAM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_NOAREAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_NOMEM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_NOFIELDS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_BAD_ERROR_INFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_WRONGFIELDNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_ORDDESTROY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_NOINITFUNCTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_ERRORINIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_DBSTRUCT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_NOTABLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_NOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EDB_ASSERTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.AMERICAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ANSI">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.BRITISH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.FRENCH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.GERMAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ITALIAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.DUTCH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.JAPANESE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.USA">
            <summary></summary>
        </member>
        <member name="M:XSharp.Core.Functions.GetAnsi">
            <summary>
            Return and the setting that determines whether database files are created using ANSI or OEM format and whether certain text file operations convert between the two character sets.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetChunkBase64(System.Byte,System.Byte,System.Byte,System.Int32)">
            <summary>
            </summary>
            <param name="pBuffer"></param>
            <param name="nSize"></param>
            <returns>
            </returns>
            THROW NotImplementedException{}
            <summary>This function is not implemented yet</summary>
            <param name="b1"></param>
            <param name="b2"></param>
            <param name="b3"></param>
            <param name="nPad"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetCurPath">
            <summary>
            Get the current X# search path for opening file.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetDefault">
            <summary>
            Return the X# default drive and directory.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetDefaultDir">
            <summary>
            Return the current SetDefaultDir() setting.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetMimType(System.String)">
            <summary>This function is not implemented yet</summary>
        </member>
        <member name="M:XSharp.Core.Functions.GetNatDLL">
            <summary>
            Get the current DLL for nation-dependent operations and messages.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetPMExt">
            <summary>
            Returns a string representing the evening extension for time strings in 12-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetTimeSep">
            <summary>
            Return the current separation character used in time strings.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetTimeZoneDiff">
            <summary>
            Returns TimeZone difference for current timezone in Hours
            </summary>
            <returns>
            </returns>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EXACT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_FIXED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DECIMALS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DATEFORMAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EPOCH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_PATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DEFAULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EXCLUSIVE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_SOFTSEEK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_UNIQUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DELETED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CANCEL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DEBUG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_TYPEAHEAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_COLOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CURSOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CONSOLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_ALTERNATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_ALTFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DEVICE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EXTRA">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EXTRAFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_PRINTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_PRINTFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_MARGIN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_BELL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CONFIRM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_ESCAPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_INSERT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EXIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_INTENSITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_SCOREBOARD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DELIMITERS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DELIMCHARS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_WRAP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_MESSAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_MCENTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_SCROLLBREAK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DIGITS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_NETERR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_ANSI">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_YIELD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_LOCKTRIES">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_AMEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_AMPM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_PMEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CENTURY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DIGITFIXED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DECIMALSEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_THOUSANDSEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_TIMESEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_FIELDSTORE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_SCIENCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CPU">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_FLOATDELTA">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_MATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_INTERNATIONAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DATECOUNTRY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DICT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_INTL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_COLLATIONMODE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_RDDINFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_MEMOBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DEFAULTRDD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_HPLOCKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_NEWINDEXLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_BLOBCIRCREF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_FOXLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_WINCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DOSCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_LANGUAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_IDLEREPEAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_FILECASE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DIRCASE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DIRSEPARATOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EOF">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_HARDCOMMIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_FORCEOPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DBFLOCKSCHEME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DEFEXTENSIONS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EOL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_TRIMFILENAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_HBOUTLOG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_HBOUTLOGINFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_OSCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_TIMEFORMAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_DBCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_AXSLOCKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_RIGHTSCHECKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_CONNECTION_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_EXACTKEYPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_SQL_QUERY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_SQL_TABLE_PASSWORDS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._SET_COLLATION_NAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions._MAX_PATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.MAX_PATH">
            <summary></summary>
        </member>
        <member name="M:XSharp.Core.Functions.GetAMExt">
            <summary>
            Returns a string representing the morning extension for time strings in 12-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetAMExt">
            <summary>
            Returns a string representing the morning extension for time strings in 12-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetAMExt(System.String)">
            <summary>
            Set the morning extension for time strings in 12-hour format.
            </summary>
            <param name="cExt"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetAmPm">
            <summary>
            Returns the setting that determines whether time strings are in 12-hour or 24-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetAmPm">
            <summary>
            Returns the setting that determines whether time strings are in 12-hour or 24-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetAmPm(System.Boolean)">
            <summary>
            Change the setting that determines whether time strings are in 12-hour or 24-hour format.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetAnsi">
            <summary>
            Return and the setting that determines whether database files are created using ANSI or OEM format and whether certain text file operations convert between the two character sets.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetAnsi(System.Boolean)">
            <summary>
            Change the setting that determines whether database files are created using ANSI or OEM format and whether certain text file operations convert between the two character sets.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetBeep">
            <summary>
            Return the setting that determines whether a beep is sounded by the error system when an error occurs.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetBeep(System.Boolean)">
            <summary>
            Change the setting that determines whether a beep is sounded by the error system when an error occurs.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetCentury">
            <summary>
            Return the setting that determines whether to include or omit century digits in the date format.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetCentury(System.Boolean)">
            <summary>
            Change the setting that determines whether to include or omit century digits in the date format.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetCpu">
            <summary>
            Return the setting that determines the type of central processor you have.
            </summary>
            <param name="nCpu"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetCpu(System.UInt32)">
            <summary>
            Change the setting that determines the type of central processor you have.
            </summary>
            <param name="nCpu"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDateCountry">
            <summary>
            Return the setting that determines the X# date format by selecting from a list of constants with corresponding date formats.
            </summary>
            <param name="dwCountry"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDateCountry(System.UInt32)">
            <summary>
            Return and optionally change the setting that determines the X# date format by selecting from a list of constants with corresponding date formats.
            </summary>
            <param name="dwCountry"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.GetDateFormat">
            <summary>
            Return the current Date format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDateFormat(System.String)">
            <summary>
            Change the setting that determines the X# date format.
            </summary>
            <param name="cDateFormat"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDecimal">
            <summary>
            Return the setting that determines the number of decimal places used to display numbers.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDecimal(System.UInt32)">
            <summary>
            Return and change the setting that determines the number of decimal places used to display numbers.
            </summary>
            <param name="nDec"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDecimalSep">
            <summary>
            Return the setting that determines the decimal separation character to be used in numeric-to-string conversion functions.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDecimalSep(System.UInt32)">
            <summary>
            Return and change the setting that determines the decimal separation character to be used in numeric-to-string conversion functions.
            </summary>
            <param name="wSep"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDefault">
            <summary>
            Return the setting that determines the default drive and directory.
            </summary>
            <param name="cDefault"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDefault(System.String)">
            <summary>
            Change the setting that determines the default drive and directory.
            </summary>
            <param name="cDefault"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDeleted">
            <summary>
            Return the setting that determines whether to ignore or include records that are marked for deletion.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDeleted(System.Boolean)">
            <summary>
            Change the setting that determines whether to ignore or include records that are marked for deletion.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDigit">
            <summary>
            Return the setting that determines the number of digits that will be shown to the left of the decimal point when a number is displayed.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDigit(System.UInt32)">
            <summary>
            Change the setting that determines the number of digits that will be shown to the left of the decimal point when a number is displayed.
            </summary>
            <param name="nDig"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDigitFixed">
            <summary>
            Return the setting that fixes the number of digits used to display numeric output.
            </summary>
            <param name="f"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetDigitFixed(System.Boolean)">
            <summary>
            Change the setting that fixes the number of digits used to display numeric output.
            </summary>
            <param name="f"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetEpoch">
            <summary>
            Return the setting that determines how dates without century digits are interpreted.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetEpoch(System.UInt32)">
            <summary>
            Change the setting that determines how dates without century digits are interpreted.
            </summary>
            <param name="wYear"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetErrorLog">
            <summary>
            Return the setting that determines whether error information is written to the error log file by the default runtime error handler.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetErrorLog(System.Boolean)">
            <summary>
            Change the setting that determines whether error information is written to the error log file by the default runtime error handler.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetExact">
            <summary>
            Return the setting for an exact match for character string comparisons.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetExact(System.Boolean)">
            <summary>
            Change the setting for an exact match for character string comparisons.
            </summary>
            <param name="fExact"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetExclusive">
            <summary>
            Return the setting that determines whether to open database files in exclusive or shared mode.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetExclusive(System.Boolean)">
            <summary>
            Change the setting that determines whether to open database files in exclusive or shared mode.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetFieldStore">
            <summary>
            Return the setting that determines whether assignments are made to fields or to memory variables.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetFieldStore(System.Boolean)">
            <summary>
            Change the setting that determines whether assignments are made to fields or to memory variables.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetFixed">
            <summary>
            Return the setting that fixes the number of decimal digits used to display numbers.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetFixed(System.Boolean)">
            <summary>
            Change the setting that fixes the number of decimal digits used to display numbers.
            </summary>
            <param name="fFixed"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetMath">
            <summary>
            Return the setting that determines the internal operational characteristics of the underlying floating-point system.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetMath(System.UInt32)">
            <summary>
            Change the setting that determines the internal operational characteristics of the underlying floating-point system.
            </summary>
            <param name="nFPU"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetNatDLL(System.String)">
             <summary>
             Activate a new DLL for nation-dependent operations and messages.
             </summary>
             <returns>
             </returns>
             <remarks>
             In Visual Objects the nation DLL is an external DLL. For X# there are no separate
             nation DLL. The nation support code is integrated in XSharp.Core.DLL.
             For compatibility you can still use the SetNatDLL() function to switch to another
             nation module. <br/>
             The available nation modules are (just like in Visual Objects):<br/> 
             	"BRAZIL", "CROATIA", "CZECH852", "CZECH895", "DANISH", "DUTCH", "FINNISH", 
             	"FRENCH", "GENERIC", "GERMAN", "GERMAN2", "HUNG852", "HUNGCWI", "ITALIAN", 
                 "NORWEGN", "POL-ISO", "POL-MAZ", "POL852", "PORT850", "PORT860", "ROMANIA", 
             	"RUSSIAN", "SERBIA", "SL-W-95", "SL-W-AS7", "SL-W-EE", "SLOV852", "SLOV895", 
             	"SPANISH", "SWEDISH", "UK"
             <br/> You may specify a DLL name with full path. The Runtime will strip the path and extension
             from the file name and will look for one of the names listed above.<br/> 
             The nation DLL name is NOT case sensitive.
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions._SetCollation(System.String)">
            <exclude/>
        </member>
        <member name="M:XSharp.Core.Functions._SetNatDLL(System.String)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Core.Functions.SetPath">
            <summary>
            Return the setting that determines the search path for opening files. This may be a semi colon separated list of folders.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions._SetDict">
            <exclude/>
        </member>
        <member name="M:XSharp.Core.Functions._SetDict(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:XSharp.Core.Functions.SetPath(System.String)">
            <summary>
            Change the setting that determines the search path for opening files.
            </summary>
            <param name="cPath">New path. This may be a semi colon separated list of folders.</param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetPathArray">
            <summary>
            Return the Path array that is used by the File() function to locate files outside of the current directory.
            This is a combination of the SetDefault() and SetPath() variables
            This may be null if the file function has never been called or never been called for files outside of the current
            directory.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetPathArray(System.String[])">
            <summary>
            Set the Path array that is used by the File() function to locate files outside of the current directory.
            This is a combination of the SetDefault() and SetPath() variables
            This array gets cleared when SetPath() or SetDefault() is called and is initialized the first time File() or a related function
            </summary>
            <param name="aPath"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetPMExt">
            <summary>
            Returns a string representing the evening extension for time strings in 12-hour format.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetPMExt(System.String)">
            <summary>
            Set the evening extension for time strings in 12-hour format.
            </summary>
            <param name="cExt"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetScience">
            <summary>
            Return the setting that displays numbers in scientific notation.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetScience(System.Boolean)">
            <summary>
            Change the setting that displays numbers in scientific notation.
            </summary>
            <param name="f"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetSoftSeek">
            <summary>
            Return the setting that determines whether a seek operation will find a close match when no exact match is found.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetSoftSeek(System.Boolean)">
            <summary>
            Change the setting that determines whether a seek operation will find a close match when no exact match is found.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetThousandSep">
            <summary>
            Return the setting that determines the thousands separation character to be used in numeric-to-string conversion functions.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetThousandSep(System.UInt32)">
            <summary>
            Change the setting that determines the thousands separation character to be used in numeric-to-string conversion functions.
            </summary>
            <param name="wSep"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetTimeSep">
            <summary>
            Return the setting that determines the separation character to be used in time strings.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetTimeSep(System.UInt32)">
            <summary>
            Change the setting that determines the separation character to be used in time strings.
            </summary>
            <param name="dwChar"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetUnique">
            <summary>
            Return the setting that determines whether to include unique record keys in an order.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetUnique(System.Boolean)">
            <summary>
            Change the setting that determines whether to include unique record keys in an order.
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetYield">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetYield(System.Boolean)">
            <summary>
            </summary>
            <param name="lSet"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ErrorLevel(System.UInt32)">
            <summary>
            Retrieve and set the X# return code.
            </summary>
            <param name="dw"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.ErrorLevel">
            <summary>
            Retrieve the X# return code.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetInternational">
            <summary>
            Return the setting that determines the international mode for the application
            </summary>
            <returns>The current setting, either "Windows" (the default) or  "Clipper"
            </returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetInternational(System.String)">
            <summary>
            Return and change the setting that determines the international mode for the application
            </summary>
            <returns>The current setting, either "Windows" (the default) or  "Clipper"
            </returns>
            <remarks>
            SetInternational() allows XSharp apps to operate in different international modes.  
            The "CLIPPER" mode is provided for compatibility with CA-Clipper applications and uses an 
            internationalization routine defined in the nation module.
            The "Windows" mode uses international services provided by Windows.
            When you set this mode several settings will be changed
            <list type="table">
            <listheader>
            <term>Setting</term> <description>Initial value in CLIPPER mode</description>
            </listheader>
            <item><term>SetAmExt</term> <description>Empty String</description></item>  
            <item><term>SetPmExt</term> <description>Empty String</description></item>  
            <item><term>SetAmPm</term> <description>FALSE (24 hour format)</description></item>   
            <item><term>SetCentury</term> <description>FALSE</description></item>   
            <item><term>SetDateCountry</term> <description>American (1)</description></item> 
            <item><term>SetDateFormat</term> <description>mm/dd/yy</description></item> 
            <item><term>SetDecimal</term> <description>2</description></item>   
            <item><term>SetDecimalSep</term> <description>Period (.)</description></item>
            <item><term>SetThousandSep</term> <description>Comma (,)</description></item>  
            <item><term>SetTimeSep</term> <description>Colon(:)</description></item> 
            </list>
            </remarks>
        </member>
        <member name="M:XSharp.Core.Functions.SetCollation">
            <summary>
            Return and change the setting that determines the internal collation routine used for string comparisons when running in the VO or Vulcan dialect.
            The Core dialect always compares according to the Unicode rules.
            The available modes are "Windows" (the default),  "Clipper", "Unicode" and "Ordinal".
            </summary>
            <returns>The current setting for SetCollation().</returns>
        </member>
        <member name="M:XSharp.Core.Functions.SetCollation(System.String)">
            <summary>
            Return and change the setting that determines the internal collation routine used for string comparisons when running in the VO or Vulcan dialect.
            </summary>
            <remarks>
            The Core dialect always compares according to the Unicode rules.
            The other dialects use the rules defined with SetCollation for string comparison. There are 4 possible values:
            <list type="table">
            <item>
            <term>Windows (the default)</term>
            <description>This uses the normal windows Ansi comparison mechanism that Visual Objects uses as well.
            That means that the Unicode strings from .Net are converted to Ansi first and then compared with the Ansi comparison rules.
            
            In most cases characters that are not available in the Ansi codepage are translated to a question mark '?' and are therefore all seen as equal. <br/>
            If you want true unicode comparison you need the Unicode value for SetCollation.
            </description>
            </item>
            <item>
            <term>Clipper</term>
            <description>This uses string comparison tables that are the same as the character comparison tables in the Visual Objects
            nation modules. Each character from the unicode string is converted to a character from the OEM codepage first using the
            DosCodePage from the runtime state. the resulting OEM characters are then looked up in the 256 character weight tables that
            are part of the runtime dll. You can switch to a different table by using SetNatDLL().
            </description>
            </item>
            <item>
            <term>Unicode</term>
            <description>This uses the normal Unicode String.Compare routines for string comparisons. 
            </description>
            </item>
            <item>
            <term>Ordinal</term>
            <description>This uses the normal Ordinal String.Compare routines from DotNet. This is the fastest.
            </description>
            </item>
            </list>
            </remarks>
            <returns>The current setting, either "Windows" (the default),  "Clipper", "Unicode" or "Ordinal" </returns>
            <param name="cCollation">The collation mode to use. The available modes are "Windows" (the default),  "Clipper", "Unicode" and "Ordinal". </param>
        </member>
        <member name="M:XSharp.Core.Functions.ErrorBuild(System.Exception)">
            <exclude/>
        </member>
        <member name="F:XSharp.Core.Functions.EG_UNKNOWN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_ARG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_BOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_STROVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NUMOVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_ZERODIV">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NUMERR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_SYNTAX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_COMPLEXITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_MEMOVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_SEQUENCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_MEM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOFUNC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOVAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOVARMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_BADALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_DUPALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NULLVAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_CREATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_OPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_CLOSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_READ">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_WRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_PRINT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOATOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOCLASS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_WRONGCLASS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_REFERENCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_UNSUPPORTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_LIMIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_CORRUPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_DATATYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_DATAWIDTH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOTABLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_NOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_UNLOCKED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_READONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_APPENDLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_LOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_LOCK_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_LOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_STACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_EVALSTACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_ERRORBLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_PROTECTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_BADPTR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_BADPAGEFAULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_ERRORBUILD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_DYNPTR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_INACCESSIBLETYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_AMBIGUOUSMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_SEND_MISSINGARG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_SEND_TOOMANYARGS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_EXCEPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.EG_MAX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ES_WHOCARES">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ES_WARNING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ES_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.ES_CATASTROPHIC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_BREAK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_RETRY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_DEFAULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_EXCEPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_ACCESSVIOLATION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_DATATYPE_MISALIGNMENT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_SINGLE_STEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_ARRAY_BOUNDS_EXCEEDED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_DENORMAL_OPERAND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_DIVIDE_BY_ZERO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_INEXACT_RESULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_INVALID_OPERATION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_OVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_STACK_CHECK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_FLT_UNDERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_INT_DIVIDE_BY_ZERO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_INT_OVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_PRIV_INSTRUCTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_ILLEGAL_INSTRUCTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_NONCONTINUABLE_EXCEPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_STACK_OVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_INVALID_DISPOSITION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Core.Functions.E_GUARD_PAGE">
            <summary></summary>
        </member>
        <member name="T:XSharp.Collations">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:XSharp.Collations.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:XSharp.Collations.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:XSharp.Collations.BRAZIL">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.CROATIA">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.CZECH852">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.CZECH895">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.DANISH">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.DUTCH">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.FINNISH">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.FRENCH">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.GENERIC">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.GERMAN">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.GERMAN2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.HUNG852">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.HUNGCWI">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.ITALIAN">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.NORWEGN">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.POL_ISO">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.POL_MAZ">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.POL852">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.PORT850">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.PORT860">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.ROMANIA">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.RUSSIAN">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SERBIA">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SL_W_95">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SL_W_AS7">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SL_W_EE">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SLOV852">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SLOV895">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SPANISH">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.SWEDISH">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XSharp.Collations.UK">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:XSharp.AssemblyHelper">
            <exclude />
        </member>
        <member name="M:XSharp.AssemblyHelper.Load(System.String)">
            <exclude />
        </member>
        <member name="T:XSharp.IO.File">
            <exclude />
        </member>
        <member name="F:XSharp.IO.File.errorCode">
            <exclude />
        </member>
        <member name="F:XSharp.IO.File.LastFound">
            <exclude />
        </member>
        <member name="M:XSharp.IO.File.#cctor">
            <exclude />
        </member>
        <member name="T:XSharp.StringHelpers">
            <exclude />
        </member>
        <member name="M:XSharp.StringHelpers.#cctor">
            <exclude />
        </member>
        <member name="M:XSharp.StringHelpers.Changed(System.Object,System.EventArgs)">
            <exclude />
        </member>
        <member name="M:XSharp.StringHelpers.GetValues">
            <exclude />
        </member>
        <member name="M:XSharp.StringHelpers.CompareWindows(System.String,System.String)">
            <exclude />
        </member>
        <member name="M:XSharp.StringHelpers.CompareClipper(System.String,System.String)">
            <exclude />
        </member>
        <member name="T:XSharp.RDD.BaseIndex">
            <summary>Base Index class. Does not implement anything. </summary>
            <seealso cref="T:XSharp.RDD.IOrder"/>
        </member>
        <member name="M:XSharp.RDD.BaseIndex.#ctor(XSharp.RDD.Workarea)">
            <summary>Create the BaseIndex object</summary>
            <param name="oArea">Workarea object that 'owns' this index object </param>
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderCondition(XSharp.RDD.Support.DbOrderCondInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderCreate(XSharp.RDD.Support.DbOrderCreateInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderDestroy(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderInfo(System.UInt32,XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderListAdd(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderListDelete(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderListFocus(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.OrderListRebuild">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.Seek(XSharp.RDD.Support.DbSeekInfo)">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.BaseIndex.Found">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseIndex.Flush">
            <inheritdoc />
        </member>
        <member name="T:XSharp.RDD.BaseMemo">
            <summary>Base Memo class. Does not implement anything. </summary>
            <seealso cref="T:XSharp.RDD.IMemo"/>
        </member>
        <member name="M:XSharp.RDD.BaseMemo.#ctor(XSharp.RDD.Workarea)">
            <summary>Create the BaseMemo object</summary>
            <param name="oArea">Workarea object that 'owns' this memo object </param>
        </member>
        <member name="M:XSharp.RDD.BaseMemo.GetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.GetValueFile(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.GetValueLength(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.Flush">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.PutValue(System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.PutValueFile(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.CloseMemFile">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.CreateMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.OpenMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.BaseMemo.Zap">
            <inheritdoc />        
        </member>
        <member name="T:XSharp.RDD.DbFloat">
            <summary>Implementation of the IFloat interface that can be used by the RDD system. </summary> 
            <seealso cref="T:XSharp.IFloat"/>
        </member>
        <member name="P:XSharp.RDD.DbFloat.Value">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.DbFloat.Digits">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.DbFloat.Decimals">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.DbFloat.#ctor(System.Double,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:XSharp.RDD.DbFloat.ToString">
            <inheritdoc />
        </member>
        <member name="T:XSharp.RDD.DbDate">
            <summary>Implementation of the IDate interface that can be used by the RDD system. </summary> 
            <seealso cref="T:XSharp.IDate"/>
        </member>
        <member name="P:XSharp.RDD.DbDate.Year">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.DbDate.Month">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.DbDate.Day">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.DbDate.Value">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.DbDate.IsEmpty">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.DbDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:XSharp.RDD.DbDate.ToString">
            <inheritdoc />
        </member>
        <member name="T:XSharp.RDD.Enums.AutoShareMode">
            <summary>This enum specifies how files should be opened.</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.AutoShareMode.NoChange">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.AutoShareMode.Auto">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.AutoShareMode.ForceExclusive">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbLockMode">
            <summary>This enum specifies the lock modes.</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbLockMode.Lock">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbLockMode.UnLock">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbRecordInfo">
             <summary>This enum specifies the various values that the RecordInfo method for the IRDD interface accepts.
             <note type="tip">
             These enums are also available as DEFINES and can therefore also be used without the "DbRecordInfo." prefix.
             </note>
            </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_DELETED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_LOCKED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_RECSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_RECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_UPDATED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_BUFFPTR">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_ENCRYPTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_RAWMEMOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_RAWDATA">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_RAWRECORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbRecordInfo.DBRI_USER">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbFieldInfo">
             <summary>This enum specifies the various values that the FieldInfo method for the IRDD interface accepts.
            </summary>
             <note type="tip">
             These enums are also available as DEFINES and can therefore also be used without the "DbFieldInfo." prefix.
             </note>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_NAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_DEC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_ALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_ISNULL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_COUNTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_STEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_GET">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_OFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_POINTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_DIRECT_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_BLOB_DIRECT_LEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_STRUCT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_PROPERTIES">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldInfo.DBS_USER">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbInfo">
             <summary>This enum specifies the various values that the Info method for the IRDD interface accepts.
             <note type="tip">
             These enums are also available as DEFINES and can therefore also be used without the "DbInfo." prefix.
             </note>
            </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ISDBF">
            <summary>Logical: Is the RDD DBF based ?</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_CANPUTREC">
            <summary>Logical: Does the RDD support the PutRec mechanism ?</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GETHEADERSIZE">
            <summary>Numeric: Get header size of the file  ?</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_LASTUPDATE">
            <summary>Date:    Last date RDD file updated  </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GETDELIMITER">
            <summary>String:  Get default delimiter</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_SETDELIMITER">
            <summary>String:  Set default delimiter</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GETRECSIZE">
            <summary>Numeric: Get record size </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GETLOCKARRAY">
            <summary>Array:   Get array of locked records</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_TABLEEXT">
            <summary>String:  Get table file extension</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_READONLY">
            <summary>Logic: is the file opened readonly</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ISFLOCK">
            <summary>Logic: Is there a file lock active? </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_CHILDCOUNT">
            <summary>Number: Number of child relations set</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_FILEHANDLE">
            <summary>IntPtr: The data file's handle</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_FULLPATH">
            <summary>String: Full path to data file</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ISANSI">
            <summary>Logic: Is the file ansi encoded</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_BOF">
            <summary>Logic: Same as Bof()</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_EOF">
            <summary>Logic: Same as Eof()</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_DBFILTER">
            <summary>String: Current Filter setting </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_FOUND">
            <summary>Logic: Same as Found() </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_FCOUNT">
            <summary>Number: Number of fields per record</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_LOCKCOUNT">
            <summary>Number: Number of record locks  </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_VALIDBUFFER">
            <summary>Logic: Is the buffer Valid</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ALIAS">
            <summary>String: Alias</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GETSCOPE">
            <summary>Object: The ScopeInfo</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_LOCKOFFSET">
            <summary>Number: Lock offset</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_SHARED">
            <summary>Logic: is the file opened shared</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOEXT">
            <summary>String: Memo file extension</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOHANDLE">
            <summary>Intptr: The memo file's handle</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_BLOB_HANDLE">
            <summary>Intptr: The memo file's handle</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOBLOCKSIZE">
            <summary>Number: The memo block size</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_BLOB_INTEGRITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_CODEPAGE">
            <summary>Number: The Windows Codepage</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_DOSCODEPAGE">
            <summary>Number: The DOS Codepage</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_BLOB_RECOVER">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_NEWINDEXLOCK">
            <summary>Logic:  Use new index lock mechanism</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_STRICTREAD">
            <summary>Flag for avoiding RDD hierarchy and using a bigger buffer when indexing</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_OPTIMIZE">
            <summary>Flag for whether to use query optimization</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_AUTOOPEN">
            <summary>Flag for automatically opening structural indexes</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_AUTOORDER">
            <summary>Should the order be set to the first index when a structural index is opened</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_AUTOSHARE">
            <summary>When a network is detected, open the index shared, otherwise open exclusively</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_DB_VERSION">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RDD_VERSION">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RDD_LIST">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOFIELD">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_VO_MACRO_SYNTAX">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RDD_OBJECT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_LOCKSCHEME">
            <summary></summary> 
            <summary>Harbour extension: Locking scheme used by RDD</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ISREADONLY">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ROLLBACK">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_PASSWORD">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ISENCRYPTED">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOTYPE">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_SEPARATOR">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOVERSION">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_TABLETYPE">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_SCOPEDRELATION">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_TRIGGER">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_OPENINFO">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ENCRYPT">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_DECRYPT">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_MEMOPACK">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_DIRTYREAD">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_POSITIONED">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_ISTEMPORARY">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_LOCKTEST">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_CODEPAGE_HB">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_TRANSREC">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_SETHEADER">
            <summary>Harbour extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_SUPPORTED">
            <summary></summary> 
            <summary>Harbour record map extension: has WA RDD record map support?</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_CREATE">
            <summary>Harbour record map extension: create new empty work area record map</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_REMOVE">
            <summary>Harbour record map extension: remove active work area record map</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_CLEAR">
            <summary>Harbour record map extension: remove all records from WA record map</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_FILL">
            <summary>Harbour record map extension: add all records to WA record map </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_ADD">
            <summary>Harbour record map extension: add record to work area record map </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_DROP">
            <summary>Harbour record map extension: remove record from work area record map</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_TEST">
            <summary>Harbour record map extension: test if record is set in WA record map</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_COUNT">
            <summary>Harbour record map extension: number of records set in record map </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RM_HANDLE">
            <summary>Harbour record map extension: get/set record map filter handle</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_QUERY">
            <summary>if area represents result of a query, obtain expression of this query </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_INFO_HANDLE">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_FILE_RECOVER">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_FILE_INTEGRITY">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_OFFSET">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_POINTER">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_LEN">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_TYPE">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_EXPORT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_ROOT_UNLOCK">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_ROOT_PUT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_ROOT_GET">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_ROOT_LOCK">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_IMPORT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_DIRECT_PUT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_DIRECT_GET">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_GET">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_DIRECT_EXPORT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_DIRECT_IMPORT">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_NMODE">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_EXPORT_APPEND">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_EXPORT_OVERWRITE">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_DIRECT_TYPE">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_DIRECT_LEN">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.BLOB_USER">
            <summary></summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_USER">
            <summary>Start of user defined DBI values</summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_AND">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_CLEAR">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_COUNT">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_DESTROY">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_EXFILTER">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_GETFILTER">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_HASMAYBE">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_LEN">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_MAYBEEVAL">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_NEW">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_NEWDUP">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_NEWQUERY">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_NEXTRECNO">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_NOT">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_OR">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_PREVRECNO">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_SET">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_SETFILTER">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_RL_TEST">
            <summary>Clipmore extension: </summary> 
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GET_ACE_TABLE_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbInfo.DBI_GET_ACE_STMT_HANDLE">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbOrder_Info">
             <summary>This enum specifies the various values that the OrderInfo method for the IRDD interface accepts.
             <note type="tip">
             These enums are also available as DEFINES and can therefore also be used without the "DbOrderInfo." prefix.
             </note>
            </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_CONDITION">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_EXPRESSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_POSITION">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_RECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_NAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_NUMBER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_BAGNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_INDEXNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_BAGEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_INDEXEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_FULLPATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_FILEHANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ISDESC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ISCOND">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SETCODEBLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYDEC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_HPLOCKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_LOCKOFFSET">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYADD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYDELETE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPETOP">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPEBOTTOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPETOPCLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPEBOTTOMCLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_UNIQUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ORDERCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_CUSTOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPUNIQUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYGOTO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYSINCLUDED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYNORAW">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_OPTLEVEL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_KEYCOUNTRAW">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_LOCK_ALL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_LOCK_FAIL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_HPLOCK_GATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPEVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPEVALBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPREGEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPREGEXBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPWILD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SKIPWILDBACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPEEVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_FINDREC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_FINDRECCONT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPESET">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SCOPECLEAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_BAGCOUNT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_BAGNUMBER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_BAGORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ISMULTITAG">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ISSORTRECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_LARGEFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_TEMPLATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_MULTIKEY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_CHGONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_PARTIAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ISREADONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_READLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_WRITELOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_UPDATECOUNTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_EVALSTEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_ISREINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_I_BAGNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_I_TAGNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_RELKEYPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_USECURRENT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_INDEXTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_RESETPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_INDEXPAGESIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_AXS_PERCENT_INDEXED">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbOrder_Info.DBOI_GET_ACE_INDEX_HANDLE">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbFieldType">
            <summary>This enum specifies the various field types that can appear in DBF files.</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Unknown">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Character">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Date">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Logic">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Memo">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Number">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.VOObject">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.AutoIncrement">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Integer2">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Integer4">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Double8">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.ModTime">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.TimeStamp">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Double">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Float">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Ole">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Integer">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Picture">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.VarLength">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.DateTime">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Any">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Blob">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.Currency">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.CurrencyDouble">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbFieldType.RowVer">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.DbfHeaderCodepage">
            <summary>This enum specifies the various code pages that can appear in DBF files.</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_OLD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_US">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_INTL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_ANSI">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_MAC_STANDARD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_EEUROPEAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_RUSSIAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_NORDIC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_ICELANDIC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_KAMENICKY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_MAZOVIA">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_GREEK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_TURKISH">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_DOS_CANADIAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_CHINESE_1">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_KOREAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_CHINESE_2">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_JAPANESE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_THAI">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_HEBREW">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_ARABIC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_MAC_RUSSIAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_MAC_EEUROPEAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_MAC_GREEK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_EEUROPEAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_RUSSIAN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_TURKISH">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbfHeaderCodepage.CP_DBF_WIN_GREEK">
            <summary></summary>
        </member>
        <member name="T:XSharp.RDD.Enums.RDDInfo">
             <summary>This enum specifies the various values that the RDDInfo method for the IRDD interface accepts.
             <note type="tip">
             These enums are also available as DEFINES and can therefore also be used without the "RDDInfo." prefix.
             </note>
            </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ISDBF">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_CANPUTREC">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_DELIMITER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_SEPARATOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_TABLEEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ORDBAGEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ORDEREXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ORDSTRUCTEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_LOCAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_REMOTE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_CONNECTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_TABLETYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_LARGEFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_LOCKSCHEME">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_RECORDMAP">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ENCRYPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_TRIGGER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_AUTOLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_STRUCTORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_STRICTSTRUCT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_FORCEOPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MULTITAG">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_SORTRECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MULTIKEY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOVERSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOGCTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOREADLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_MEMOREUSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_BLOB_SUPPORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_PENDINGTRIGGER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_PENDINGPASSWORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_PASSWORD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_LOCKRETRY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_DIRTYREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_INDEXPAGESIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_DECIMALS">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_SETHEADER">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_CONNECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_DISCONNECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_EXECUTE">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_ERRORNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_INSERTID">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_AFFECTEDROWS">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.RDDInfo.RDDI_QUERY">
            <summary></summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbSortFlags.Default">
            <summary>An ascending sort (default)   </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbSortFlags.Case">
            <summary> A case-insensitive sort        </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbSortFlags.Numeric">
            <summary>A sort with printable numerics        </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbSortFlags.Ascii">
            <summary>A sort for ASCII (not nation-dependent)</summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbSortFlags.Long">
            <summary>A sort with long integer values        </summary>
        </member>
        <member name="F:XSharp.RDD.Enums.DbSortFlags.Descending">
            <summary>A descending sort        </summary>
        </member>
        <member name="T:XSharp.RDD.IMemo">
            <summary>This interface defines the mimimum methods that a RDD that supports memos should implement.</summary>	
        </member>
        <member name="M:XSharp.RDD.IMemo.GetValue(System.Int32)">
            <summary>Get a value from a memo file for the specified column.</summary>	
            <param name="nFldPos">1 based column number for which the value should be retrieved.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.GetValueFile(System.Int32,System.String)">
            <summary>Get the value for a column and write (export) it to an external file.</summary>	
            <param name="nFldPos">1 based column number for which the value should be retrieved.</param>
            <param name="fileName">Name of the file that needs to be written to.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.GetValueLength(System.Int32)">
            <summary>Get the length of the for the specified column.</summary>	
            <param name="nFldPos">1 based column number for which the length should be retrieved.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.PutValue(System.Int32,System.Object)">
            <summary>Write a value to a memo file for a specified column</summary>	
            <param name="nFldPos">1 based column number for which the value should be written.</param>
            <param name="oValue">New value that needs to written to the memo file for this column.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.PutValueFile(System.Int32,System.String)">
            <summary>Read (Import) a value from an external file and write it to the specified column.</summary>	
            <param name="nFldPos">1 based column number for which the value should be written.</param>
            <param name="fileName">Name of the file that needs to be read from.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.Flush">
            <summary>Flush the changes to the memo file </summary>	
        </member>
        <member name="M:XSharp.RDD.IMemo.CloseMemFile">
            <summary>Close the memo file</summary>	
        </member>
        <member name="M:XSharp.RDD.IMemo.CreateMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <summary>Create the memo file</summary>	
            <param name="info">object describing the file to create.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.OpenMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <summary>Open the memo file </summary>	
            <param name="info">object describing the file to open.</param>
        </member>
        <member name="M:XSharp.RDD.IMemo.Zap">
            <summary>Physically remove all memos from the memofile.</summary>
        </member>
        <member name="T:XSharp.RDD.IOrder">
            <summary>This interface defines the mimimum methods that a RDD that supports indexes should implement.</summary>	
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderCondition(XSharp.RDD.Support.DbOrderCondInfo)">
            <summary>Set the condition for the next Index Creation</summary>
            <param name="info">An object containing information for the order condition.</param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderCreate(XSharp.RDD.Support.DbOrderCreateInfo)">
            <summary>Create a new index or tag.</summary>
            <param name="info">An object containing information for order creation.</param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderDestroy(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Delete an index or tag.</summary>
            <param name="info">An object containing information about the order to remove.</param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderInfo(System.UInt32,XSharp.RDD.Support.DbOrderInfo)">
            <summary>Retrieve information about the current index.</summary>
            <param name="nOrdinal"></param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderListAdd(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Open an index file and add to the list of open indexes for the current workarea.</summary>
            <param name="info">An object containing information about the orderlist (file)  to add.</param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderListDelete(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Close an index file and remove it from the list of open indexes for the current workarea.</summary>
            <param name="info"></param>
            <param name="info">An object containing information about the orderlist (file) to delete.</param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderListFocus(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Set focus to another index in the list open indexes for the current workarea.</summary>
            <param name="info">An object containing information about the order to select.</param>
        </member>
        <member name="M:XSharp.RDD.IOrder.OrderListRebuild">
            <summary>Rebuild all indexes for the current workarea.</summary>
        </member>
        <member name="M:XSharp.RDD.IOrder.Seek(XSharp.RDD.Support.DbSeekInfo)">
            <summary>Perform a seek operation on the current selected index for the current workarea.</summary>
            <param name="info">An object containing containing the necessary seek information.</param>
        </member>
        <member name="P:XSharp.RDD.IOrder.Found">
            <summary>Result of the last seek operation for the current workarea.</summary>
        </member>
        <member name="M:XSharp.RDD.IOrder.Flush">
            <summary>Flush the changes to the index.</summary>	
        </member>
        <member name="T:XSharp.RDD.IRdd">
            <summary>Definition for the interface that each RDD must implement</summary>
            <seealso cref="T:XSharp.RDD.Workarea"/>
        </member>
        <member name="M:XSharp.RDD.IRdd.DbEval(XSharp.RDD.Support.DbEvalInfo)">
            <summary>Evaluate a code block for each row.</summary>
            <param name="info">object containing the information about which rows to visit.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.GoTop">
            <summary>Position the cursor to the first logical row.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.GoBottom">
            <summary>Position the cursor to the last logical row.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.GoTo(System.Int32)">
            <summary>Position the cursor to a specific, physical row.</summary>
            <param name="nRec">The row number of the new cursor position.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.GoToId(System.Object)">
            <summary>Position the cursor to a specific, physical identity.</summary>
            <param name="oRec">The row ID of the new cursor position.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Skip(System.Int32)">
            <summary>Position the cursor relative to its current position.</summary>
            <param name="nToSkip">The number of rows to skip.  If this argument is positive, the cursor moves forward (toward the end-of-file).  If it is negative, the cursor moves backward (toward the beginning-of-file).</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.SkipFilter(System.Int32)">
            <summary>Position the cursor, respecting scope and filter conditions.</summary>
            <param name="nToSkip">The number of rows to skip.  If this argument is positive, the cursor moves forward (toward the end-of-file).  If it is negative, the cursor moves backward (toward the beginning-of-file).</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.SkipRaw(System.Int32)">
            <summary>Position the cursor regardless of scope and filter conditions.</summary>
            <param name="nToSkip">The number of rows to skip.  If this argument is positive, the cursor moves forward (toward the end-of-file).  If it is negative, the cursor moves backward (toward the beginning-of-file).</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.SkipScope(System.Int32)">
            <summary>Position the cursor relative to its current position within the current scope.</summary>
            <param name="nToSkip">The number of rows to skip.  If this argument is positive, the cursor moves forward (toward the end-of-file).  If it is negative, the cursor moves backward (toward the beginning-of-file).</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Append(System.Boolean)">
            <summary>Append a blank row and position the cursor to the new row.</summary>
            <param name="lReleaseLock">A flag that is TRUE if you want to clear all pending row locks before appending the new row and FALSE if you want to add the new row to the end of the current lock list.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Delete">
            <summary>Mark the row at the current cursor position for deletion.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.GetRec">
            <summary>Retrieve the RDD's record buffer as array of bytes.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Pack">
            <summary>Physically remove rows marked for deletion.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.PutRec(System.Byte[])">
            <summary>Replace the row at the current cursor position with the contents of a byte array.</summary>
            <param name="aRec">The buffer containing the information that you want to write.</param>
            <note>The buffer should have at least the # of bytes that matches the current record size.</note>
        </member>
        <member name="M:XSharp.RDD.IRdd.Recall">
            <summary>Remove the deletion marker from the row at the current cursor position.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Zap">
            <summary>Physically remove all rows from a table.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Close">
            <summary>Close a table.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Create(XSharp.RDD.Support.DbOpenInfo)">
            <summary>Create a table.</summary>
            <param name="info">object describing the file to create.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Open(XSharp.RDD.Support.DbOpenInfo)">
            <summary>Open a table.</summary>
            <param name="info">object describing the file to open.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.ClearFilter">
            <summary>Clear the active filter condition.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.ClearScope">
            <summary>Clear the active locate condition.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Continue">
            <summary>Goto the next record based on the corrent locate condition.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.GetScope">
            <summary>Retrieve the active locate condition.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.SetFilter(XSharp.RDD.Support.DbFilterInfo)">
            <summary>Set the filter condition.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.SetScope(XSharp.RDD.Support.DbScopeInfo)">
            <summary>Set the locate condition.</summary>
            <param name="info">object  containing the scope information.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.AddField(XSharp.RDD.Support.RddFieldInfo)">
            <summary>Add a column.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.CreateFields(XSharp.RDD.Support.RddFieldInfo[])">
            <summary>Add columns defined in an array.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.FieldIndex(System.String)">
            <summary>Return the ONE based field index for a field name.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.FieldInfo(System.Int32,System.Int32,System.Object)">
            <summary>Retrieve and optionally change information about a column.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.FieldName(System.Int32)">
            <summary>Retrieve a column name based on its ONE based column number.</summary>
            <param name="nFldPos">The ONE based number of the column whose name you want to obtain.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.GetValue(System.Int32)">
            <summary>Get a value for the specified column.</summary>	
            <param name="nFldPos">1 based column number for which the value should be retrieved.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.GetValueFile(System.Int32,System.String)">
            <summary>Get the value for a column and write (export) it to an external file.</summary>	
            <param name="nFldPos">1 based column number for which the value should be retrieved.</param>
            <param name="fileName">Name of the file that needs to be written to.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.GetValueLength(System.Int32)">
            <summary>Get the length of the for the specified column.</summary>	
            <param name="nFldPos">1 based column number for which the length should be retrieved.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Flush">
            <summary>Flush the changes to the table, its indexes and memo file.</summary>	
        </member>
        <member name="M:XSharp.RDD.IRdd.GoCold">
            <summary>Write the contents of a work area's memory to the data store (usually a disk).</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.GoHot">
            <summary>Mark a data buffer as hot, indicating that it needs to be written to the data store.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.PutValue(System.Int32,System.Object)">
            <summary>Write a value for a specified column</summary>	
            <param name="nFldPos">1 based column number for which the value should be written.</param>
            <param name="oValue">New value that needs to written to the table this column.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.PutValueFile(System.Int32,System.String)">
            <summary>Read (Import) a value from an external file and write it to the specified column.</summary>	
            <param name="nFldPos">1 based column number for which the value should be written.</param>
            <param name="fileName">Name of the file that needs to be read from.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.AppendLock(XSharp.RDD.Enums.DbLockMode)">
            <summary>Add a newly appended row to the list of locked rows.</summary>
            <param name="uiMode">An enum value specifying the kind of lock to acquire.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.HeaderLock(XSharp.RDD.Enums.DbLockMode)">
            <summary>Lock or unlock the header of a database file.</summary>
            <param name="uiMode">An enum value specifying the kind of lock to acquire.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Lock(XSharp.RDD.Support.DbLockInfo@)">
            <summary>Perform a lock.</summary>
            <param name="uiMode">An object specifying the kind of lock to acquire.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.UnLock(System.Object)">
            <summary>Release locks.</summary>
            <param name="oRecId">The row number to unlock.  This argument is provided for drivers that support multiple row locks.  By convention, a value of zero indicates that all rows should be unlocked.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.CloseMemFile">
            <summary>Close the memo file</summary>	
        </member>
        <member name="M:XSharp.RDD.IRdd.CreateMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <summary>Create the memo file</summary>	
            <param name="info">object describing the file to create.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OpenMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <summary>Open the memo file </summary>	
            <param name="info">object describing the file to open.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderCondition(XSharp.RDD.Support.DbOrderCondInfo)">
            <summary>Set the condition for the next Index Creation</summary>
            <param name="info">An object containing information for the order condition.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderCreate(XSharp.RDD.Support.DbOrderCreateInfo)">
            <summary>Create a new index or tag.</summary>
            <param name="info">An object containing information for order creation.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderDestroy(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Delete an index or tag.</summary>
            <param name="info">An object containing information about the order to remove.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderInfo(System.UInt32,XSharp.RDD.Support.DbOrderInfo)">
            <summary>Retrieve information about the current index.</summary>
            <param name="info">An object containing information about the order to retrieve the info for.</param>
            <param name="nOrdinal"></param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderListAdd(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Open an index file and add to the list of open indexes for the current workarea.</summary>
            <param name="info">An object containing information about the orderlist (file)  to add.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderListDelete(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Close an index file and remove it from the list of open indexes for the current workarea.</summary>
            <param name="info"></param>
            <param name="info">An object containing information about the orderlist (file) to delete.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderListFocus(XSharp.RDD.Support.DbOrderInfo)">
            <summary>Set focus to another index in the list open indexes for the current workarea.</summary>
            <param name="info">An object containing information about the order to select.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.OrderListRebuild">
            <summary>Rebuild all indexes for the current workarea.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Seek(XSharp.RDD.Support.DbSeekInfo)">
            <summary>Perform a seek operation on the current selected index for the current workarea.</summary>
            <param name="info">An object containing containing the necessary seek information.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.ChildEnd(XSharp.RDD.Support.DbRelInfo)">
            <summary>Report the initialization of a relation.</summary>
            <param name="info">An object containing information about the relation</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.ChildStart(XSharp.RDD.Support.DbRelInfo)">
            <summary>Report the initialization of a relation.</summary>
            <param name="info">An object containing information about the relation</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.ChildSync(XSharp.RDD.Support.DbRelInfo)">
            <summary>Post a pending relational movement, indicating that the specified child work area has been affected by a parental movement.</summary>
            <param name="info">An object containing information about the relation</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.ClearRel">
            <summary>Clear relations.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.ForceRel">
            <summary>Force all pending relational seeks to be performed.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.RelArea(System.UInt32)">
            <summary>Retrieve the logical number of a related work area.</summary>
            <param name="nRelNum">The ONE based relation number for which to obtain the logical number.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.RelEval(XSharp.RDD.Support.DbRelInfo)">
            <summary>Evaluate a code block against the relation in a work area.</summary>
            <param name="info">An object containing information about the relation</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.RelText(System.UInt32)">
            <summary>Retrieve the key expression of a relation.</summary>
            <param name="nRelNum">The ONE based relation number for which to obtain the key expression. </param>
        </member>
        <member name="M:XSharp.RDD.IRdd.SetRel(XSharp.RDD.Support.DbRelInfo)">
            <summary>Set a relation.</summary>
            <param name="info">An object containing information about the relation</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.SyncChildren">
            <summary>Force relational movement in child work areas to synchronize them with the parent work area.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Sort(XSharp.RDD.Support.DbSortInfo)">
            <summary>Physically reorder a table.</summary>
            <param name="info">An object containing information about now to sort the table.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Trans(XSharp.RDD.Support.DbTransInfo)">
            <summary>Copy one or more rows from one work area to another.</summary>
            <param name="info">An object containing information about the transfer of data.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.TransRec(XSharp.RDD.Support.DbTransInfo)">
            <summary>Copy a single row from one work area to another.</summary>
            <param name="info">An object containing information about the transfer of data.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.BlobInfo(System.UInt32,System.UInt32)">
            <summary>Retrieve information about a memo column.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.Compile(System.String)">
            <summary>Compile an expression.</summary>
            <param name="sBlock">The expression to compile.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.EvalBlock(XSharp.ICodeblock)">
            <summary>Evaluate a code block.</summary>
            <param name="sBlock">The code block to evaluate.</param>
        </member>
        <member name="M:XSharp.RDD.IRdd.Info(System.Int32,System.Object)">
            <summary>Retrieve and optionally change information about a work area.</summary>
        </member>
        <member name="M:XSharp.RDD.IRdd.RecInfo(System.Int32,System.Object,System.Object)">
            <summary>Retrieve and optionally change information about a row.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Alias">
            <summary>Retrieve the alias name.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Area">
            <summary>Retrieve the workarea number.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.BoF">
            <summary>Is the table at the logical beginning-of-file.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Deleted">
            <summary>Is the current row deleted?</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Driver">
            <summary>Driver (RDD) name of the object.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.EoF">
            <summary>Is the table at the logical end-of-file.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Exclusive">
            <summary>Is the workarea opened Exclusively</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.FieldCount">
            <summary>The # of fields in the current workarea.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.FilterText">
            <summary>The filter condition as a string.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Found">
            <summary>The outcome of the last search operation.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.RecCount">
            <summary>The number of rows.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.RecId">
            <summary>The row identifier at the current cursor position.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.RecNo">
            <summary>The physical row identifier at the current cursor position.</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.Shared">
            <summary>Is the current workarea opened Shared?</summary>
        </member>
        <member name="P:XSharp.RDD.IRdd.SysName">
            <summary>The Name of the current RDD</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbEvalInfo">
            <summary>Helper class to store the scope and codeblock for a DbEval() operation. </summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbEvalInfo.Block">
            <summary>A code block to be evaluated with DbEval() on each row of the work area that is in the range defined by ScopeInfo.  </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbEvalInfo.ScopeInfo">
            <summary>A DbScopeInfo structure limiting the evaluation of Block.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbEvalInfo.#ctor">
            <summary>Construct a DbEvalInfo object.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbFilterInfo">
            <summary>Helper class to store a filter condition for a table.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbFilterInfo.FilterText">
            <summary>A string representing the source code for itmCobExpr.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbFilterInfo.FilterBlock">
            <summary>A code block representing the condition that is evaluated at each cursor location.  If the result of the evaluation is FALSE, the cursor location requested is invalid according to the current filter condition.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbFilterInfo.Active">
            <summary>A flag that is TRUE if a filter is active.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbFilterInfo.Optimized">
            <summary>A flag that is TRUE if a filter is optimized.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbFilterInfo.Clear">
            <summary>Clear the filter fields.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbFilterInfo.Clone">
            <summary>Clone the filter object.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbFilterInfo.#ctor">
            <summary>Construct a DbFilterInfo object.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbLockInfo">
            <summary>Helper structure to store information needed to lock a row or table for exclusive access.</summary>                 
        </member>
        <member name="F:XSharp.RDD.Support.DbLockInfo.RecId">
            <summary>An Item indicating the ID of the row to lock.  This member is meaningful only if Method is set to EXCLUSIVE or MULTIPLE. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbLockInfo.Method">
            <summary>A constant indicating the type of lock to obtain.  The possible values are of the Lockmethod enum. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbLockInfo.Result">
            <summary>A flag that is TRUE if the lock operation was successful.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbLockInfo.LockMethod">
            <summary>List of possible Locking Methods </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbLockInfo.LockMethod.Exclusive">
            <summary>Lock a row, releasing currently locked rows.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbLockInfo.LockMethod.Multiple">
            <summary>Lock a row, maintaining currently locked rows.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbLockInfo.LockMethod.File">
            <summary>Lock a table, releasing locks currently held.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbOpenInfo">
            <summary>Helper class to store information needed to open a table.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbOpenInfo.ReadOnly">
            <summary>Should the table be opened Readonly?</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOpenInfo.Shared">
            <summary>Should the table be opened Shared?</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOpenInfo.Alias">
            <summary>Unique Alias that the table has. This must be a valid XBase Identifier</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOpenInfo.Extension">
            <summary>The extension for the table that must be opened.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOpenInfo.FileName">
            <summary>The filename (optionally includig a path) for the table that must be opened.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOpenInfo.WorkArea">
            <summary>Workarea number in which the table will be opened.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbOpenInfo.#ctor">
            <summary>Construct a DbOpenInfo object.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbOpenInfo.#ctor(System.String,System.String,System.UInt32,System.Boolean,System.Boolean)">
            <summary>Construct a DbOpenInfo object.</summary>
        </member>
        <member name="P:XSharp.RDD.Support.DbOpenInfo.FileMode">
            <summary>Return the numeric FileMode based on the Shared and Readonly flags </summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbOrderCondInfo">
            <summary>Helper class to store information needed to create a conditional order.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.Active">
            <summary> A flag that is TRUE if one or more valid conditions have been specified in the structure. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.Additive">
            <summary> A flag that is TRUE if open orders should remain open while the new order is being created. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.All">
            <summary> A flag that is TRUE if all rows are to be processed during order creation. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.Custom">
            <summary>A flag that is TRUE if the new order will be a custom built order.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.Descending">
            <summary> A flag that is TRUE if the order should be created in descending order. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.EvalBlock">
            <summary>A code block defining the expression to evaluate every StepSize rows during the creation of the order.  The code block referenced should return a logical value: TRUE indicates that creation of the order should continue normally, and FALSE indicates that order creation should terminate. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.ForBlock">
            <summary>A code block defining the for condition to use for the creation and maintenance of the order.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.ForExpression">
            <summary>A string defining the for condition to use for the creation and maintenance of the order.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.NextCount">
            <summary>The number of rows to process for order creation.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.NoOptimize">
            <summary>A flag that is TRUE if the for condition may NOT be optimized,</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.RecNo">
            <summary> A single row number to include in the order. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.Rest">
            <summary>A flag that is TRUE if only the rows specified by lStartRecno through end-of-file are to be included in the order.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.Scoped">
            <summary>A flag indicating whether the order is to be scoped. fScoped will be TRUE if WhileBlock, NextCount, Recno, Rest, or All is specified.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.StartRecNo">
            <summary>The row at which to begin processing when either the NextCount or Rest scoping options are specified.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.StepSize">
            <summary>The frequency of the evaluation of EvalBlock. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.UseCurrent">
            <summary>A flag that is TRUE if only rows in the controlling order are to be included in the order.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.WhileBlock">
            <summary>A code block defining the while condition to use for the creation of the order.  An empty value indicates that no while condition is being imposed.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCondInfo.WhileExpression">
            <summary>A string defining the for while condition to use for the creation and maintenance of the order.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbOrderCreateInfo">
            <summary>Helper class to store information needed to create a new order.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCreateInfo.BagName">
            <summary>The index file name.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCreateInfo.Order">
            <summary>The order name or number to create in BagName.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCreateInfo.Expression">
            <summary>The key expression defining the order.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCreateInfo.Unique">
            <summary>A flag that is TRUE if the order should contain only unique keys. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCreateInfo.Block">
            <summary>A code block containing the key expression defining the order imposed on the work area. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderCreateInfo.OrdCondInfo">
            <summary>A DbOrderCondInfo object containing information about the condition (if any) for the order. </summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbOrderInfo">
            <summary>Helper class to store information needed to open/address an order.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderInfo.AllTags">
            <summary>A flag that is TRUE if all tags of the index file must be opened.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderInfo.Expression">
            <summary>A code block containing the key expression defining the order imposed on the work area.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderInfo.Order">
            <summary>An object containing the order name or number</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderInfo.BagName">
            <summary>The index file name.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbOrderInfo.Result">
            <summary>Return value for some order operations.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbRelInfo">
            <summary>Helper class to store a list of relational information.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbRelInfo.Key">
            <summary>The expression used to reposition the cursor of the child table when this relation is resolved.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbRelInfo.Block">
            <summary>A code block used to reposition the cursor of the child table when this relation is resolved.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbRelInfo.Child">
            <summary>A reference to the child RDD for the relation.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbRelInfo.Parent">
            <summary>A reference to the parent RDD for the relation.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbScopeInfo">
            <summary>Helper class to store references to all of the scope clause expressions. </summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.IgnoreDuplicates">
            <summary>A flag that is TRUE if a process should ignore duplicate key values.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.IgnoreFilter">
            <summary>A flag that is TRUE if a process should ignore any filter condition imposed on the current work area. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.IncludeDeleted">
            <summary> A flag that is TRUE if a process should include deleted rows. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.ForBlock">
            <summary>A code block representing the conditional for clause.  A for condition is, essentially, a filter that hides rows for which the condition evaluates to FALSE.  The string value is provided for storage, while the code block is provided as a parameter for the EvalBlock() method.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.ForExpression">
            <summary>A string representing the conditional for clause.  A for condition is, essentially, a filter that hides rows for which the condition evaluates to FALSE.  The string value is provided for storage, while the code block is provided as a parameter for the EvalBlock() method.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.Last">
            <summary>A flag that is TRUE if the last row of the current scope is required. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.NextCount">
            <summary>Permits continuation of a process for the next lNext rows, while obeying for and while clauses.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.RecId">
            <summary>Permits continuation of a process for a single row number, while obeying for and while clauses.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.Rest">
            <summary>A flag that is TRUE if a process should continue stepping through data from the current work area cursor position until logical end-of-file. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.WhileBlock">
            <summary>A code block representing the conditional while clause.  A while condition permits continuation of a process that steps through rows until the condition evaluates to FALSE.  The string value is provided for storage, while the code block is provided as a parameter for the EvalBlock() method.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbScopeInfo.WhileExpression">
            <summary>A string representing the conditional while clause.  A while condition permits continuation of a process that steps through rows until the condition evaluates to FALSE.  The string value is provided for storage, while the code block is provided as a parameter for the EvalBlock() method.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbScopeInfo.#ctor">
            <summary>Construct a DbScopeInfo object.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbScopeInfo.Clear">
            <summary>Clear the scope fields.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbScopeInfo.Clone">
            <summary>Clone the scopeinfo object.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbSeekInfo">
            <summary>Helper structure to store information needed to perform a seek operation </summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbSeekInfo.Last">
            <summary>A flag that is TRUE if the last occurrence of the specified key value is to be sought, rather than the first.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbSeekInfo.SoftSeek">
            <summary>A flag that is TRUE if a soft seek is to be performed. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbSeekInfo.Value">
            <summary>An object containing the key value to find.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbSortInfo">
            <summary>Helper class to store information needed to perform a physical sort. </summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbSortInfo.TransInfo">
            <summary>A DbTransInfo object holding the destination work area, column transfer information, and scoping information for the Sort() method. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbSortInfo.Items">
            <summary>An array of DbSortItem structures defining the key values for the sort.  Note that the key values are processed in the order that they appear in this array. </summary>
        </member>
        <member name="P:XSharp.RDD.Support.DbSortInfo.ItemCount">
            <summary>Number of items in the Items array. </summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbSortInfo.#ctor(System.Int32,System.Int32)">
            <summary>Construct a DbSortInfo object.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbSortItem">
            <summary>Helper structure to store information about a single sort key value. </summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbSortItem.FieldNo">
            <summary>A one-based index indicating the column on which the sort is based. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbSortItem.OffSet">
            <summary>The offset of the field in the workarea buffer.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbSortItem.Length">
            <summary>The length of the field in the workarea buffer.</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbSortItem.Flags">
            <summary>One or more constants that function as sort optimization and control flags.  They are passed to your RDD Sort() routine from the high-level wrapper function for the DBSort() function.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbTransInfo">
            <summary>Helper class to store information needed for the global transfer of data items from one work area to another. </summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.Scope">
            <summary>A DbScopeInfo object describing the limits of the scope of the transfer. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.Source">
            <summary>The source work area. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.Destination">
            <summary>The destination work area. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.Items">
            <summary>An array of DbTransItem structures defining the items to transfer to the destination work area. This is usually a list of column mappings from the source to the destination. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.Flags">
            <summary>Transfer attributes specified using one or more of the constants Match or PutRec. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.Match">
            <summary>Both this work area and the destination work area have identical row structures (i.e., all columns match).</summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransInfo.PutRec">
            <summary>The RDD has the ability to transfer an entire row.</summary>
        </member>
        <member name="P:XSharp.RDD.Support.DbTransInfo.ItemCount">
            <summary>Number of items in the Items array.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.DbTransInfo.#ctor(System.Int32)">
            <summary>Construct a DbTransInfo object.</summary>
        </member>
        <member name="T:XSharp.RDD.Support.DbTransItem">
            <summary>Helper structure to store information about a single piece of data (usually a column) to transfer from one work area to another.</summary> 
        </member>
        <member name="F:XSharp.RDD.Support.DbTransItem.Source">
            <summary>A one-based field index in the source work area. </summary>
        </member>
        <member name="F:XSharp.RDD.Support.DbTransItem.Destination">
            <summary>A one-based field index in the destination work area. </summary>
        </member>
        <member name="T:XSharp.RDD.Support.RddFieldInfo">
            <summary>Helper class for the RDD system to store field information</summary> 
        </member>
        <member name="M:XSharp.RDD.Support.RddFieldInfo.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>Construct a RddFieldInfo object.</summary>
        </member>
        <member name="M:XSharp.RDD.Support.RddFieldInfo.#ctor(System.String,XSharp.RDD.Enums.DbFieldType,System.Int32,System.Int32)">
            <summary>Construct a RddFieldInfo object.</summary>        
        </member>
        <member name="M:XSharp.RDD.Support.RddFieldInfo.Clone">
            <summary>Clone a RddFieldInfo object.</summary>        
        </member>
        <member name="M:XSharp.RDD.Support.RddFieldInfo.SameType(XSharp.RDD.Support.RddFieldInfo)">
            <summary>Check if two fields match in type, length and decimals.</summary>        
        </member>
        <member name="T:XSharp.RDD.Workarea">
            <summary>Base class for DBF based RDDs. Holds common properties such as the Workarea number, Alias, Fields list and various flags.</summary> 
            <seealso cref="T:XSharp.RDD.IRdd"/>
        </member>
        <member name="F:XSharp.RDD.Workarea._Area">
            <summary>Workarea Number (1 based) </summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Alias">
            <summary> Unique Alias </summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._FileName">
            <summary>File name of the main file</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Fields">
            <summary>List of Fields</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Bof">
            <summary>Is at BOF ?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Bottom">
            <summary>Is at bottom ?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Eof">
            <summary>Is at EOF ?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Found">
            <summary>Result of last SEEK operation</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Top">
            <summary>Is at top?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Result">
            <summary>Result of last macro evaluation</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._ScopeInfo">
            <summary>Current Scope</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._FilterInfo">
            <summary>Current Filter</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._OrderCondInfo">
            <summary>Current Order condition</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._RelInfo">
            <summary>Current Relation info</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Parents">
            <summary># of parents</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._MaxFieldNameLength">
            <summary>Maximum fieldname length (Advantage supports field names > 10 characters)</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._RecordLength">
            <summary>Size of record</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._RecordBuffer">
            <summary>Current Record</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Delimiter">
            <summary>Field delimiter (for DELIM RDD)</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Separator">
            <summary>Field separator (for DELIM RDD)</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._ReadOnly">
            <summary> Is the file opened ReadOnly ?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Shared">
            <summary> Is the file opened Shared ?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._hFile">
            <summary>File handle of the current file</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Flush">
            <summary>Should the file be flushed (it is dirty) ?</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Memo">
            <summary>Current memo implementation.</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._Order">
            <summary>Current index implementation.</summary>
        </member>
        <member name="F:XSharp.RDD.Workarea._EvalResult">
            <summary>Result of the last Block evaluation.</summary>
        </member>
        <member name="M:XSharp.RDD.Workarea.#ctor">
            <exclude />
        </member>
        <member name="M:XSharp.RDD.Workarea.Finalize">
            <exclude />	
        </member>
        <member name="M:XSharp.RDD.Workarea.DbEval(XSharp.RDD.Support.DbEvalInfo)">
            <inheritdoc />			
        </member>
        <member name="M:XSharp.RDD.Workarea.GoTop">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GoBottom">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GoTo(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GoToId(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Skip(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SkipFilter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SkipRaw(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SkipScope(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Append(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Delete">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GetRec">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Pack">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.PutRec(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Recall">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Zap">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Close">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Create(XSharp.RDD.Support.DbOpenInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Open(XSharp.RDD.Support.DbOpenInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ClearFilter">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ClearScope">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Continue">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GetScope">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SetFilter(XSharp.RDD.Support.DbFilterInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SetScope(XSharp.RDD.Support.DbScopeInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.AddField(XSharp.RDD.Support.RddFieldInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.CreateFields(XSharp.RDD.Support.RddFieldInfo[])">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.FieldIndex(System.String)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea._FieldIndexValidate(System.Int32)">
            <exclude/>
        </member>
        <member name="M:XSharp.RDD.Workarea.FieldInfo(System.Int32,System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.FieldName(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GetValueFile(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GetValueLength(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Flush">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GoCold">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.GoHot">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.PutValue(System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.PutValueFile(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.AppendLock(XSharp.RDD.Enums.DbLockMode)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.HeaderLock(XSharp.RDD.Enums.DbLockMode)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Lock(XSharp.RDD.Support.DbLockInfo@)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.UnLock(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.CloseMemFile">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.CreateMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OpenMemFile(XSharp.RDD.Support.DbOpenInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderCondition(XSharp.RDD.Support.DbOrderCondInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderCreate(XSharp.RDD.Support.DbOrderCreateInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderDestroy(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderInfo(System.UInt32,XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderListAdd(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderListDelete(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderListFocus(XSharp.RDD.Support.DbOrderInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.OrderListRebuild">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Seek(XSharp.RDD.Support.DbSeekInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ChildEnd(XSharp.RDD.Support.DbRelInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ChildStart(XSharp.RDD.Support.DbRelInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ChildSync(XSharp.RDD.Support.DbRelInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ClearRel">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.ForceRel">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.RelArea(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.RelEval(XSharp.RDD.Support.DbRelInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.RelText(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SetRel(XSharp.RDD.Support.DbRelInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.SyncChildren">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Trans(XSharp.RDD.Support.DbTransInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.TransRec(XSharp.RDD.Support.DbTransInfo)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.BlobInfo(System.UInt32,System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Compile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.EvalBlock(XSharp.ICodeblock)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Info(System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.RecInfo(System.Int32,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:XSharp.RDD.Workarea.Sort(XSharp.RDD.Support.DbSortInfo)">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Alias">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Area">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.BoF">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Deleted">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Driver">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.EoF">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Exclusive">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.FieldCount">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.FilterText">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Found">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.RecCount">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.RecId">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.RecNo">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.Shared">
            <inheritdoc />
        </member>
        <member name="P:XSharp.RDD.Workarea.SysName">
            <inheritdoc />
        </member>
        <member name="T:XSharp.RDD.WorkAreas">
            <summary>Class that contains the list of open workareas. Each thread will have its own list.</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.#ctor">
            <exclude />
        </member>
        <member name="M:XSharp.RDD.WorkAreas.AdjustArea(System.UInt32@)">
            <summary>Convert 1 based Workarea number to 0 based with validation</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.CloseAll">
            <summary>Close All RDDs referenced by this workarea list</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.CommitAll">
            <summary>Commit changes in all workares in this workarea list</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.CloseArea(System.UInt32)">
            <summary>Close area with 1 based workarea number</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.FindAlias(System.String)">
            <summary> Return 1 based Workarea Number for Alias or 0 when no found</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.FindEmptyArea(System.Boolean)">
            <summary> Return 1 based empty Workarea</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.GetAlias(System.UInt32)">
            <summary>Get Alias for 1 based Workarea Number</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.GetRDD(System.UInt32)">
            <summary>Get RDD object for 1 based Workarea Number</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.SetArea(System.UInt32,XSharp.RDD.IRdd)">
            <summary>Set RDD object and ALias for 1 based Workarea Number</summary>
        </member>
        <member name="M:XSharp.RDD.WorkAreas.UnLockAll">
            <summary>Unlock All RDDs referenced by this workarea list</summary>
        </member>
        <member name="P:XSharp.RDD.WorkAreas.CurrentWorkAreaNO">
            <summary>Get 1 based Current workarea Number</summary>
        </member>
        <member name="P:XSharp.RDD.WorkAreas.CurrentWorkArea">
            <summary>Get Current workarea Object</summary>
        </member>
        <member name="T:XSharp.CollationMode">
            <summary>This enum specifies the collation mode used to create and update index strings.</summary>
        </member>
        <member name="F:XSharp.CollationMode.Windows">
            <summary></summary>
        </member>
        <member name="F:XSharp.CollationMode.Clipper">
            <summary></summary>
        </member>
        <member name="F:XSharp.CollationMode.Unicode">
            <summary></summary>
        </member>
        <member name="F:XSharp.CollationMode.Ordinal">
            <summary></summary>
        </member>
        <member name="T:XSharp._FieldNames">
            <summary>Helper class for VoDbTrans and VoDbSort()</summary>
        </member>
        <member name="F:XSharp._FieldNames.fields">
            <summary>List of field names.</summary>
        </member>
        <member name="P:XSharp._FieldNames.fieldCount">
            <summary>Number of fields in the list.</summary>
        </member>
        <member name="M:XSharp._FieldNames.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>Construct a _FieldNames object.</summary>
        </member>
        <member name="T:XSharp._JoinList">
            <summary>Helper class for DbJoin()</summary>
        </member>
        <member name="F:XSharp._JoinList.uiDestSel">
            <summary>Area number of destination workarea.</summary>
        </member>
        <member name="F:XSharp._JoinList.Fields">
            <summary>List of field areas and positions.</summary>
        </member>
        <member name="P:XSharp._JoinList.Count">
            <summary>Number of fields in the list.</summary>
        </member>
        <member name="M:XSharp._JoinList.#ctor(System.Int32)">
            <summary>Construct a _JoinList object.</summary>
        </member>
        <member name="T:XSharp._JoinField">
            <summary>Helper structure for DbJoin()</summary>
        </member>
        <member name="F:XSharp._JoinField.Area">
            <summary>Source workarea number.</summary>
        </member>
        <member name="F:XSharp._JoinField.Pos">
            <summary>Source field position.</summary>
        </member>
        <member name="T:XSharp._RddList">
            <summary>Helper structure to store information for a list of RDD names for DbUseArea()</summary>
        </member>
        <member name="F:XSharp._RddList.atomRddName">
            <summary>List of RDD names.</summary>
        </member>
        <member name="P:XSharp._RddList.uiRDDCount">
            <summary>Number of names in the list.</summary>
        </member>
        <member name="M:XSharp._RddList.#ctor(XSharp.RDD.Workarea)">
            <summary>Construct _RddList from class Tree.</summary>
        </member>
        <member name="M:XSharp._RddList.#ctor(System.String[])">
            <summary>Construct _RddList from list of names.</summary>
        </member>
        <member name="T:XSharp.CoreDb">
            <summary>
            The CoreDb class contains the methods to manipulate workareas. <br/>
            The class is stateless. The workarea state is stored in the runtimestate.
            </summary>
        </member>
        <member name="M:XSharp.CoreDb.CWA(System.String,System.Boolean)">
            <exclude />
        </member>
        <member name="M:XSharp.CoreDb.CWANum(System.String)">
            <exclude />    
        </member>
        <member name="M:XSharp.CoreDb.RddNameToType(System.String)">
            <exclude />   
        </member>
        <member name="M:XSharp.CoreDb.BuildTrans(XSharp.RDD.Support.DbTransInfo,XSharp._FieldNames,XSharp.RDD.IRdd,XSharp.RDD.IRdd)">
            <exclude />   
        </member>
        <member name="M:XSharp.CoreDb.TransSetInfo(XSharp.RDD.IRdd,XSharp.RDD.Support.DbTransInfo,System.String,System.UInt32,XSharp._FieldNames,XSharp.ICodeblock,XSharp.ICodeblock,System.Object,System.Object,System.Boolean)">
            <exclude />   
        </member>
        <member name="M:XSharp.CoreDb.AliasFromFilename(System.String,System.String@)">
            <exclude />   
        </member>
        <member name="M:XSharp.CoreDb.Alias(System.UInt32)">
            <summary>
            Return the alias of a specified work area as a string.
            </summary>
            <param name="nArea"></param>
            <returns>
            </returns>
            <remarks><note type="tip">VoDbAlias() and CoreDb.Alias() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Append(System.Boolean)">
            <summary>
            Add a new record.
            </summary>
            <param name="lReleaseLocks"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBAppend() but is strongly typed.  
            <span id='LastError' >
            <br/>This function, however, does not call the error
            handler and will therefore not produce a runtime error message or create an error object if it fails.<br/>
            Thus, it may be important to check the return value to determine if the function succeeded.<br/>
            The <see cref="P:XSharp.RuntimeState.LastRddError">LastRddError property in the runtimestate</see>  will contain needed information
            regarding any error that occurs.</span>
            <note type="tip">VoDbAppend() and CoreDb.Append() are aliases</note>
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.BlobInfo(System.UInt32,System.UInt32,System.Object)">
            <summary>Retrieve information about a memo column.</summary>
            <param name="nOrdinal"></param>
            <param name="nPos"></param>
            <param name="oRet"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <seealso cref="O:XSharp.RT.Functions.VoDbBlobInfo" >VoDbBlobInfo overloads </seealso>
            <seealso cref="O:XSharp.VoDb.BlobInfo" >BlobInfo overloads in VoDb</seealso>
            <seealso cref="O:XSharp.CoreDb.BlobInfo" >BlobInfo overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.BlobInfo(System.UInt32,System.UInt32,System.Object@)">
            <inheritdoc cref="M:XSharp.CoreDb.BlobInfo(System.UInt32,System.UInt32,System.Object)" />
        </member>
        <member name="M:XSharp.CoreDb.Bof">
            <summary>
            Determine when beginning-of-file is encountered.
            </summary>
            <returns>TRUE after an attempt to skip backward beyond the first logical record in a database file or if
            the current database file contains no records; otherwise, FALSE.  If there is no database file open in the
            current work area, CoreDbBOF() returns TRUE.</returns>
            <remarks>This function is like BOF().
            <note type="tip">VoDbBof() and CoreDb.Bof() are aliases</note></remarks>
            <seealso cref="M:XSharp.RT.Functions.Bof" >Bof Function </seealso>
            <seealso cref="M:XSharp.RT.Functions.VoDbBof" >VoDbBof Function in XSharp.VO</seealso>
        </member>
        <member name="M:XSharp.CoreDb.BuffRefresh">
            <summary>
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBBuffRefresh().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbBuffRefresh() and CoreDb.BuffRefresh() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.ClearFilter">
            <summary>
            Clear a logical filter condition.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBClearFilter().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbClearFilter() and CoreDb.ClearFilter() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.ClearLocate">
            <summary>
            Clear a locate condition by deleting the locate code block.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBClearLocate().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbClearLocate() and CoreDb.ClearLocate() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.ClearRelation">
            <summary>Clear any active relations.</summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBClearRelation().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbClearRelation() and CoreDb.ClearRelation() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.ClearScope">
            <summary>Clear the active locate condition.</summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBClearScope().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbClearScope() and CoreDb.ClearScope() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.CloseAll">
            <summary>
            Close all files in all work areas.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBCloseAll().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbCloseAll() and CoreDb.CloseAll() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.CloseArea">
            <summary>
            Close all files in a work area.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBCloseArea().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbCloseArea() and CoreDb.CloseArea() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Commit">
            <summary>
            Flush pending updates in one work area.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBCommit().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbCommit() and CoreDb.Commit() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.CommitAll">
            <summary>
            Flush pending updates in all work areas.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBCommitAll().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbCommitAll() and CoreDb.CommitAll() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Continue">
            <summary>
            Resume a pending locate condition.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBContinue().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbContinue() and CoreDb.Continue() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Create(System.String,XSharp.RDD.Support.RddFieldInfo[],System.String,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)">
            <inheritdoc cref="M:XSharp.CoreDb.Create(System.String,XSharp.RDD.Support.RddFieldInfo[],System.Type,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)" />
            <param name="cRddName">Name of RDD to use</param>
        </member>
        <member name="M:XSharp.CoreDb.Create(System.String,XSharp.RDD.Support.RddFieldInfo[],XSharp._RddList,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)">
            <inheritdoc cref="M:XSharp.CoreDb.Create(System.String,XSharp.RDD.Support.RddFieldInfo[],System.Type,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)" />
            <param name="rddList">List of RDDs to use when creating the file</param>
        </member>
        <member name="M:XSharp.CoreDb.Create(System.String,XSharp.RDD.Support.RddFieldInfo[],System.Type,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)">
            <overloads>
            <summary>
            Create new file through the specified RDDs
            </summary>
            </overloads>
            <summary>
            Create new file through the specified RDDs
            </summary>
            <param name="cName">Name of the file to create. When no extension is specified then the default extension for the RDD will be used.</param>
            <param name="aStruct">Structure to use when creating the file.</param>
            <param name="rddType">Type of the class that must be used to work with the RDD.</param>
            <param name="lNew">TRUE opens the database file in a new work area (first available).  FALSE opens it in the current work area.  lNew is useful only when lOpen has a value of TRUE. The default is FALSE.</param>
            <param name="cAlias">The alias to be associated with the work area where the file is opened.  Within a single thread, X# will not accept duplicate aliases.  cAlias is useful only when lOpen has a value of TRUE.  The default alias is the filename without extension</param>
            <param name="cDelim">The delimiter for fields within a delimited database file. The default is a NULL string </param>
            <param name="lKeep">TRUE specifies that the file should remain open after creating. FALSE closes the file.</param>
            <param name="lJustOpen">TRUE specifies that an existing database file be opened. FALSE specifies that that a new database file be opened.  The default is FALSE.  This can be used to open existing SDF and delimited files, which do not have a structure in the header — in which case, an empty aStruct should be used.</param>
            <returns>TRUE when succesfull, otherwise FALSE. When an error has occurred then you can retrieve that error from RuntimeState.LastRddError.</returns>
            <seealso cref="M:XSharp.RT.Functions.DbCreate(XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual,XSharp.__Usual)" >DbCreate() function </seealso>
            <seealso cref="O:XSharp.RT.Functions.VoDbCreate" >VoDbCreate overloads</seealso>
            <seealso cref="O:XSharp.CoreDb.Create" >Create overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.Delete">
            <summary>
            Mark the current record for deletion.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBDelete().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbDelete() and CoreDb.Delete() are aliases</note></remarks>
            <seealso cref="M:XSharp.RT.Functions.DbDelete">DbDelete Function</seealso>
        </member>
        <member name="M:XSharp.CoreDb.Deleted">
            <summary>
            Return the deleted status of the current record.
            </summary>
            <returns>TRUE if the current record is marked for deletion; otherwise, FALSE.  
            If there is no database file in use in the current work area, CoreDbDeleted() returns FALSE.</returns>
            <seealso cref="M:XSharp.RT.Functions.Deleted">Deleted Function</seealso>
            <remarks><note type="tip">VoDbDelete() and CoreDb.Delete() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Eof">
            <summary>
            Determine when end-of-file is encountered.
            </summary>
            <returns>TRUE when an attempt is made to move the record pointer beyond the last logical record in a
            database file or if the current database file contains no records; otherwise, FALSE.  If there is no
            database file open in the current work area, CoreDbEOF() returns TRUE.</returns>
            <remarks>This function is like EOF().
            <note type="tip">VoDbEof() and CoreDb.Eof() are aliases</note></remarks>
            <seealso cref="M:XSharp.RT.Functions.Eof" >Eof Function </seealso>
            <seealso cref="M:XSharp.RT.Functions.VoDbEof" >VoDbEof Function in XSharp.VO</seealso>
        </member>
        <member name="M:XSharp.CoreDb.Eval(XSharp.ICodeblock,XSharp.ICodeblock,XSharp.ICodeblock,System.Object,System.Object,System.Boolean)">
            <summary>
            Evaluate a code block for each record that matches a specified scope and/or condition.
            </summary>
            <param name="uBlock">The code block to execute for each record that matches the scope and conditions. </param>
            <param name="uCobFor">A code block that defines a condition that each record within the scope must meet in order to be processed.</param>
            <param name="uCobWhile">A code block that defines another condition that each record must meet in order to be processed.  As soon as a record is encountered that causes the condition to fail, the operation terminates.  If no scope is specified, <paramref name="cbWhileCondition"/> changes the default scope to <paramref name="lRest"/>.</param>
            <param name="uNext">The number of records to process, starting at the current record.</param>
            <param name="nRecno">The number of the record to process.</param>
            <param name="lRest">TRUE processes only records from the current record to end-of-file.  FALSE processes all records.</param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>
            By default, Eval() operates on the currently selected work area.
            It will operate on an unselected work area if you specify it as part of an aliased expression.
            On each iteration, Eval() evaluates the specified code block.
            All records within the scope or matching the condition are processed until end-of-file is reached.
            Eval() can be used as a primitive for the construction of commands that process database files.
            In fact, many of the database processing commands are created using Eval().
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.FieldGet(System.UInt32,System.Object@)">
            <summary>
            Retrieve the value of a specified database field.
            </summary>
            <param name="nPos"></param>
            <param name="oRet"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
        </member>
        <member name="M:XSharp.CoreDb.FieldInfo(System.UInt32,System.UInt32,System.Object)">
            <summary>
            Retrieve field definition information about a field.
            </summary>
            <param name="nOrdinal"></param>
            <param name="nPos"></param>
            <param name="oRet"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBFieldInfo().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
            <seealso cref='O:XSharp.RT.Functions.VoDbFieldInfo' >VoDbFieldInfo overloads </seealso>
            <seealso cref='O:XSharp.VoDb.FieldInfo' >FieldInfo overloads in CoreDb</seealso>
            <seealso cref='O:XSharp.CoreDb.FieldInfo' >FieldInfo overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.FieldInfo(System.UInt32,System.UInt32,System.Object@)">
            <inheritdoc cref="M:XSharp.CoreDb.FieldInfo(System.UInt32,System.UInt32,System.Object)" />
        </member>
        <member name="M:XSharp.CoreDb.FieldName(System.UInt32)">
            <summary>
            Return the name of a field as a string.
            </summary>
            <param name="dwFieldPos"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.CoreDb.FieldPos(System.String)">
            <summary>
            Return the position of a field.
            </summary>
            <param name="sFieldName"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.CoreDb.FieldPut(System.UInt32,System.Object)">
            <summary>
            Set the value of a specified database field.
            </summary>
            <param name="nPos"></param>
            <param name="xValue"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.FileGet(System.UInt32,System.String)">
            <summary>Import contents from file into Memo field </summary>
            <param name="nPos"></param>
            <param name="cFile"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBFileGet().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbFileGet() and CoreDb.FileGet() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.FilePut(System.UInt32,System.String)">
            <summary>Export field contents from Memo field to file</summary>
            <param name="nPos"></param>
            <param name="cFile"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks><note type="tip">VoDbFilePut() and CoreDb.FilePut() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Filter">
            <summary>
            Return a filter.
            </summary>
            <returns>
            </returns>
            <remarks>This function is like DBFilter().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbFilter() and CoreDb.Filter() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Flock">
            <summary>
            Lock an opened and shared database file.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBFlock().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbFlock() and CoreDb.Flock() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Found">
            <summary>
            Determine if the previous search operation succeeded.
            </summary>
            <returns>
            </returns>
            <remarks>This function is like Found().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbFound() and CoreDb.Found() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.GetSelect">
            <summary>
            Return the work area number.
            </summary>
            <returns>
            </returns>
            <remarks>This function is like DBGetSelect().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbGetSelect() and CoreDb.GetSelect() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.GoBottom">
            <summary>
            Move to the last logical record.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBGoBottom().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbGoBottom() and CoreDb.GoBottom() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Goto(System.Object)">
            <summary>
            Move to a record specified by record number.
            </summary>
            <param name="uRecId"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
        </member>
        <member name="M:XSharp.CoreDb.GoTop">
            <summary>
            Move to the first logical record.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBGoTop().  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbGoTop() and CoreDb.GoTop() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Info(System.UInt32,System.Object)">
            <summary>
            Retrieve information about a work area.
            </summary>
            <param name="nOrdinal"></param>
            <param name="ptrRet"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <seealso cref='O:XSharp.RT.Functions.VoDbInfo' >VoDbInfo overloads </seealso>
            <seealso cref='O:XSharp.VoDb.Info' >Info overloads in VoDb</seealso>
            <seealso cref='O:XSharp.CoreDb.Info' >Info overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.Info(System.UInt32,System.Object@)">
            <inheritdoc cref="M:XSharp.CoreDb.Info(System.UInt32,System.Object)" />
        </member>
        <member name="M:XSharp.CoreDb.JoinAppend(System.UInt32,XSharp._JoinList)">
            <summary>Write values to destination workarea in a JOIN operation</summary>
            <param name="nSelect"></param>
            <param name="struList"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
        </member>
        <member name="M:XSharp.CoreDb.LastRec">
            <summary>
            Return the number of the last record in a database file.
            </summary>
            <returns>
            </returns>
            <remarks> <note type="tip">VoDbLastRec() and CoreDb.LastRec() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Locate(XSharp.ICodeblock,XSharp.ICodeblock,System.Int32,System.Object,System.Boolean)">
            <summary>
            Search for the first record that matches a specified condition and scope.
            </summary>
            <param name="uCobFor"></param>
            <param name="uCobWhile"></param>
            <param name="nNext"></param>
            <param name="uRecId"></param>
            <param name="lRest"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBLocate() but strongly typed.  
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.MemoExt(System.String)">
            <summary>Return Memo File extension</summary>
            <param name="cDriver"></param>
            <returns>
            </returns>
            <remarks> <note type="tip">VoDbMemoExt() and CoreDb.MemoExt() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrdBagExt">
            <summary>
            Return the default index file extension for a work area as defined by the its RDD.
            </summary>
            <returns>Default extension for the current workarea, or an empty string when no table is open in the current workarea.
            </returns>
        </member>
        <member name="M:XSharp.CoreDb.OrdCondSet(XSharp.RDD.Support.DbOrderCondInfo)">
            <summary>
            Set the condition and scope for an order.
            </summary>
            <param name="ordCondInfo">An object defining the condition and scope information. </param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like OrdCondSet() but strongly typed and the condition information is passed in an object.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrdCreate(System.String,System.Object,System.String,XSharp.ICodeblock,System.Boolean,XSharp.RDD.Support.DbOrderCondInfo)">
            <summary>
            Create or replace an order in an index file.
            </summary>
            <param name="cBagName">Orderbag name (index filename) to create the order in.</param>
            <param name="uOrder">Ordername to create.</param>
            <param name="cExpr">The order key expression specified as a string</param>
            <param name="uCobExpr">The order key expression specified as a codeblock.</param>
            <param name="lUnique">TRUE creates a unique order by including only those records with unique key values; FALSE uses all records in the database file. </param>
            <param name="ordCondInfo">An object defining the condition and scope information. </param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DbCreateOrder() but strongly typed and the condition information is passed in an object.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrdDestroy(System.String,System.Object)">
            <summary>
            Remove an order from an open index file.
            </summary>
            <param name="cBagName"></param>
            <param name="oOrder"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DbDeleteOrder() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrderInfo(System.UInt32,System.String,System.Object,System.Object)">
            <summary>
            Return information about index files and the orders in them.
            </summary>
            <param name="nOrdinal"></param>
            <param name="cBagName"></param>
            <param name="uOrder"></param>
            <param name="oValue"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DbOrderInfo() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
            <seealso cref='O:XSharp.RT.Functions.VoDbOrderInfo' >VoDbOrderInfo overloads </seealso>
            <seealso cref='O:XSharp.VoDb.OrderInfo' >OrderInfo overloads in VoDb</seealso>
            <seealso cref='O:XSharp.CoreDb.OrderInfo' >OrderInfo overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.OrderInfo(System.UInt32,System.String,System.Object,System.Object@)">
            <inheritdoc cref="M:XSharp.CoreDb.OrderInfo(System.UInt32,System.String,System.Object,System.Object)" />
        </member>
        <member name="M:XSharp.CoreDb.OrdListAdd(System.String,System.Object)">
            <summary>
            Open an index file and add specified orders to the order list in a work area.
            </summary>
            <param name="cBagName"></param>
            <param name="oOrder"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DbSetIndex() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrdListClear(System.String,System.Object)">
            <summary>
            Remove orders from the order list in a work area and close associated index files.
            </summary>
            <param name="cBagName"></param>
            <param name="oOrder"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBClearIndex() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrdListRebuild">
            <summary>
            Rebuild all orders in the order list of a work area.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like OrdListRebuild().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.OrdSetFocus(System.String,System.Object,System.String@)">
            <summary>
            Set the controlling order for a work area.
            </summary>
            <param name="cBagName"></param>
            <param name="oOrder"></param>
            <param name="strPreviousOrder"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DbSetOrder() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.Pack">
            <summary>
            Remove all records that have been marked for deletion from a database file.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DbPack(). 
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbPack() and CoreDb.Pack() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.RddCount">
            <summary>
            </summary>
            <param name="nRddType"></param>
            <returns>
            </returns>
            <remarks><note type="tip">VoDbRddCount() and CoreDb.RddCount() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.RddInfo(System.UInt32,System.Object@)">
            <summary>Return and optionally change settings controlled directly by the RDD.</summary>
            <param name="nOrdinal"></param>
            <param name="ptrRet"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <seealso cref='O:XSharp.RT.Functions.VoDbRddInfo' >VoDbRddInfo overloads </seealso>
            <seealso cref='O:XSharp.VoDb.RddInfo' >RddInfo overloads in VoDb</seealso>
            <seealso cref='O:XSharp.CoreDb.RddInfo' >RddInfo overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.RddInfo(System.UInt32,System.Object)">
            <inheritdoc cref="M:XSharp.CoreDb.RddInfo(System.UInt32,System.Object@)" />
        </member>
        <member name="M:XSharp.CoreDb.RddList">
            <summary>Returns list of RDD names that are in use at this moment</summary>
            <remarks><note type="tip">VoDbRddList() and CoreDb.RddList() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.RddName">
            <summary>
            Return an RDD name.                  
            </summary>
            <returns>
            </returns>
            <remarks><note type="tip">VoDbRddName() and CoreDb.RddName() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.RddSetDefault(System.String)">
            <summary>
            Return and optionally change the default RDD for the application.
            </summary>
            <param name="cNewRDD"></param>
            <returns>
            </returns>
            <remarks><note type="tip">VoDbRddSetDefault() and CoreDb.RddSetDefault() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Recall">
            <summary>
            Restore the current record if it is marked for deletion.
            </summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBRecall().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbRecall() and CoreDb.Recall() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Recno">
            <summary>
            Return the current record number.
            </summary>
            <returns>
            </returns>
            <remarks><note type="tip">VoDbRecno() and CoreDb.Recno() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.RecordGet">
            <summary>Get the contents of the current record as an array of bytes</summary>
            <returns>
            </returns>
            <remarks><note type="tip">VoDbRecordGet() and CoreDb.RecordGet() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.RecordInfo(System.UInt32,System.Object,System.Object)">
            <summary>
            Retrieve information about a record.
            </summary>
            <param name="nOrdinal"></param>
            <param name="oRecID"></param>
            <param name="oRet"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <seealso cref='O:XSharp.RT.Functions.VoDbRecordInfo'  >VoDbRecordInfo overloads</seealso>
            <seealso cref='O:XSharp.VoDb.RecordInfo'  >RecordInfo overloads in VoDb</seealso>
            <seealso cref='O:XSharp.CoreDb.RecordInfo'  >RecordInfo overloads in CoreDb</seealso>
        </member>
        <member name="M:XSharp.CoreDb.RecordInfo(System.UInt32,System.Object,System.Object@)">
            <inheritdoc cref="M:XSharp.CoreDb.RecordInfo(System.UInt32,System.Object,System.Object)" />
        </member>
        <member name="M:XSharp.CoreDb.RecordPut(System.Byte[])">
            <summary>Update the current record from an array of bytes</summary>
            <param name="aRecord"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks><note type="tip">VoDbRecordPut() and CoreDb.RecordPut() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Relation(System.UInt32,System.String@)">
            <summary>
            Return the linking expression of a specified relation.
            </summary>
            <param name="nPos"></param>
            <param name="pszRel"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSetRelation().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.RLock(System.Object)">
            <summary>
            Lock the current record.
            </summary>
            <param name="uRecId"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBRlock() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.RSelect(System.UInt32)">
            <summary>
            Return the work area number of a relation.
            </summary>
            <param name="nPos"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBRSelect() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbRSelect() and CoreDb.RSelect() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Seek(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Move to the record having the specified key value.
            </summary>
            <param name="oValue"></param>
            <param name="lSoftSeek"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSeek() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.Select(System.UInt32,System.UInt32@)">
            <summary>
            Select a new work area and retrieve the current work area.
            </summary>
            <param name="nNew"></param>
            <param name="nOld"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSelect() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbSelect() and CoreDb.Select() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.SetFilter(XSharp.ICodeblock,System.String)">
            <summary>
            Set a filter condition.
            </summary>
            <param name="oBlock"></param>
            <param name="cFilter"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSetFilter() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.SetFound(System.Boolean)">
            <summary>
            Set the found flag.
            </summary>
            <param name="lFound"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSetFound().
            <note type="tip">VoDbSetFound() and CoreDb.SetFound() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.SetLocate(XSharp.ICodeblock)">
            <summary>
            Specify the code block for a locate condition.
            </summary>
            <param name="oBlock"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSetLocate() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.SetRelation(System.String,XSharp.ICodeblock,System.String)">
            <summary>
            Relate a specified work area to the current work area.
            </summary>
            <param name="cAlias"></param>
            <param name="uCobKey"></param>
            <param name="cKey"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSetRelation() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.SetScope(XSharp.RDD.Support.DbScopeInfo)">
            <summary>Set the locate condition.</summary>
            <param name="scope"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks><note type="tip">VoDbSetFound() and CoreDb.SetFound() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.SetSelect(System.Int32)">
            <summary>
            Select a new work area.
            </summary>
            <param name="siNew">The number of the new work area. 0 indicates the first available free workarea. -1 indicates the last available free workarea.</param>
            <returns>The newly selected work area.</returns>
            <remarks>This function is like DBSetSelect() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbSetSelect() and CoreDb.SetSelect() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Skip(System.Int32)">
            <summary>
            Move the record pointer relative to the current record.
            </summary>
            <param name="nRecords">The number of logical records to move, relative to the current record.  A positive value means to skip forward, and a negative value means to skip backward. </param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBSkip() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbSkip() and CoreDb.Skip() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.SkipScope(System.Int32,XSharp.RDD.Support.DbScopeInfo)">
            <summary>Position the cursor relative to its current position within the current scope.</summary>
            <param name="nRecords"></param>
            <param name="scope"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks><note type="tip">VoDbSkipScope() and CoreDb.SkipScope() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Sort(System.UInt32,XSharp._FieldNames,XSharp.ICodeblock,XSharp.ICodeblock,System.Object,System.Object,System.Boolean,XSharp._FieldNames)">
            <summary>
            </summary>
            <param name="nDest"></param>
            <param name="fieldNames"></param>
            <param name="uCobFor"></param>
            <param name="uCobWhile"></param>
            <param name="nNext"></param>
            <param name="nRecno"></param>
            <param name="lRest"></param>
            <param name="sortNames"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.CoreDb.SymSelect(System.String)">
            <summary>
            Select a new work area by specifying its alias as a string and return the number of the current work area.
            </summary>
            <param name="sAlias"></param>
            <returns>
            </returns>
        </member>
        <member name="M:XSharp.CoreDb.Trans(System.UInt32,XSharp._FieldNames,XSharp.ICodeblock,XSharp.ICodeblock,System.Object,System.Object,System.Boolean)">
            <summary>Copy one or more rows from one work area to another.</summary>
            <param name="nDest"></param>
            <param name="fldNames"></param>
            <param name="uCobFor"></param>
            <param name="uCobWhile"></param>
            <param name="nNext"></param>
            <param name="nRecno"></param>
            <param name="lRest"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>    
        </member>
        <member name="M:XSharp.CoreDb.TransRec(System.UInt32,XSharp._FieldNames)">
            <summary>Copy a single row from one work area to another.</summary>
            <param name="nDest"></param>
            <param name="fldNames"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks><note type="tip">VoDbTransRec() and CoreDb.TransRec() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Unlock(System.Object)">
            <summary>
            Release all locks for a work area.
            </summary>
            <param name="uRecno">The ID of the record to be unlocked.  To omit, specify NULL_OBJECT.
            This unlocks all locked records or the whole file. </param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBUnlock().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            </remarks>
        </member>
        <member name="M:XSharp.CoreDb.UnlockAll">
            <summary>Release all locks for all work areas.</summary>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBUnlockAll().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbUnlockAll() and CoreDb.UnlockAll() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.UseArea(System.Boolean,XSharp._RddList,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Open a database file.
            </summary>
            <param name="lNew"></param>
            <param name="rddList"></param>
            <param name="cName"></param>
            <param name="cAlias"></param>
            <param name="lShare"></param>
            <param name="lReadOnly"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>    
            <remarks>This function is like DBUseArea() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbUseArea() and CoreDb.UseArea() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.UseArea(System.Boolean,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Open a database file.
            </summary>
            <param name="lNew"></param>
            <param name="rddName"></param>
            <param name="cName"></param>
            <param name="cAlias"></param>
            <param name="lShare"></param>
            <param name="lReadOnly"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBUseArea() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbUseArea() and CoreDb.UseArea() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.UseArea(System.Boolean,System.Type,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Open a database file.
            </summary>
            <param name="lNew"></param>
            <param name="rddType"></param>
            <param name="cName"></param>
            <param name="cAlias"></param>
            <param name="lShare"></param>
            <param name="lReadOnly"></param>
            <returns>TRUE if successful; otherwise, FALSE.</returns>
            <remarks>This function is like DBUseArea() but strongly typed.
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbUseArea() and CoreDb.UseArea() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb.Zap">
            <summary>Remove all records from the current workarea.</summary>
            <returns>TRUE if successful; otherwise, FALSE./// </returns>
            <remarks>This function is like DBZap().
            <inheritdoc cref="M:XSharp.CoreDb.Append(System.Boolean)" select="span[@id='LastError']" />
            <note type="tip">VoDbZap() and CoreDb.Zap() are aliases</note></remarks>
        </member>
        <member name="M:XSharp.CoreDb._ErrInfoPtr">
            <summary>Return exception object from last RDD operation.</summary>    
        </member>
        <member name="T:XSharp.DateCountry">
            <summary>Values that match the Visual Objects DateCountry defines </summary>
        </member>
        <member name="F:XSharp.DateCountry.American">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.Ansi">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.British">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.French">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.German">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.Italian">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.Dutch">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.Japanese">
            <summary></summary>
        </member>
        <member name="F:XSharp.DateCountry.USA">
            <summary></summary>
        </member>
        <member name="T:XSharp.SET">
            <summary>Values that match the Visual Objects SET_* defines </summary>
        </member>
        <member name="F:XSharp.SET.EXACT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.FIXED">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DECIMALS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DATEFORMAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EPOCH">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.PATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DEFAULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EXCLUSIVE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.SOFTSEEK">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.UNIQUE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DELETED">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CANCEL">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DEBUG">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.TYPEAHEAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.COLOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CURSOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CONSOLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ALTERNATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ALTFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DEVICE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EXTRA">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EXTRAFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.PRINTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.PRINTFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.MARGIN">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.BELL">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CONFIRM">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ESCAPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.INSERT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EXIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.INTENSITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.SCOREBOARD">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DELIMITERS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DELIMCHARS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.WRAP">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.MESSAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.MCENTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.SCROLLBREAK">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ERRRORLOG">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.NETERR">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DIGITS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.AMEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.PMEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ANSI">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.YIELD">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.LOCKTRIES">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.AMPM">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CENTURY">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DIGITFIXED">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DECIMALSEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.THOUSANDSEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.TIMESEP">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.FIELDSTORE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.SCIENCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CPU">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.FLOATDELTA">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.MATH">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.INTERNATIONAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DATECOUNTRY">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EpochCent">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EpochYear">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DateFormatNet">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DateFormatEmpty">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.OPTIONVO11">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.OPTIONOVF">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.NOMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.APPMODULE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.PATHARRAY">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.NatDLL">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CollationTable">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ErrorLevel">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.ErrorBlock">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.OPTIONVO13">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.LastRddError">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DICT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.INTL">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.RDDINFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.MEMOBLOCKSIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DEFAULTRDD">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.MEMOEXT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.AUTOOPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.AUTOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.HPLOCKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.NEWINDEXLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.AUTOSHARE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.STRICTREAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.BLOBCIRCREF">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.OPTIMIZE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.FOXLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.WINCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DOSCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.COLLATIONMODE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.AXSLOCKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.RIGHTSCHECKING">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CONNECTION_HANDLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EXACTKEYPOS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.SQL_QUERY">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.SQL_TABLE_PASSWORDS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.COLLATION_NAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.LANGUAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.IDLEREPEAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.FILECASE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DIRCASE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DIRSEPARATOR">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EOF">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.HARDCOMMIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.FORCEOPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DBFLOCKSCHEME">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DEFEXTENSIONS">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.EOL">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.TRIMFILENAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.HBOUTLOG">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.HBOUTLOGINFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.CODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.OSCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.TIMEFORMAT">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.DBCODEPAGE">
            <summary></summary>
        </member>
        <member name="F:XSharp.SET.User">
            <summary></summary>
        </member>
        <member name="T:XSharp.RuntimeState">
            <summary>
            Container Class that holds the XSharp Runtime state
            </summary>
            <remarks>
            Please note that unlike in Visual Objects and Vulcan.NET every thread has its own copy of the runtime state.<br/>
            The runtime state from a new thread is a copy of the state of the main thread at that moment.
            </remarks>
        </member>
        <member name="M:XSharp.RuntimeState.GetInstance">
            <summary>Retrieve the runtime state for the current thread</summary>
        </member>
        <member name="M:XSharp.RuntimeState.Finalize">
            <exclude />
        </member>
        <member name="P:XSharp.RuntimeState.Name">
            <summary>Retrieve state name</summary>
            <returns>String value, such as "State for Thread 123"</returns>
        </member>
        <member name="P:XSharp.RuntimeState.BreakLevel">
            <summary>Current Break Level. Gets set by compiler generated code for BEGIN SEQUENCE .. END constructs.</summary>
        </member>
        <member name="M:XSharp.RuntimeState.ToString">
            <summary>ToString() override</summary>
            <returns>String value, such as "State for Thread 123"</returns>
        </member>
        <member name="M:XSharp.RuntimeState.GetValue``1(System.Int32)">
            <summary>Retrieve a value from the state of the current Thread.</summary>
            <param name="nSetting">Setting number to retrieve. Must be defined in the SET enum.</param>
            <typeparam name="T">The return type expected for this setting.</typeparam>
            <returns>The current value, or a default value of type T.</returns>
        </member>
        <member name="M:XSharp.RuntimeState.SetValue``1(System.Int32,``0)">
            <summary>Set a value for the state of the current Thread.</summary>
            <param name="nSetting">Setting number to retrieve. Must be defined in the SET enum.</param>
            <param name="oValue">The new value for the setting.</param>
            <typeparam name="T">The return type expected for this setting.</typeparam>
            <returns>The previous value, or a default value of type T when the setting was not yetr defined.</returns>
        </member>
        <member name="P:XSharp.RuntimeState.CompilerOptionVO11">
            <summary>The current compiler setting for the VO11 compiler option as defined when compiling the main application.
            This value gets assigned in the startup code for applications in the VO or Vulcan dialect.</summary>
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionVO13" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionOVF" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionFOVF" />
        </member>
        <member name="P:XSharp.RuntimeState.CompilerOptionVO13">
            <summary>The current compiler setting for the VO13 compiler option as defined when compiling the main application.
            This value gets assigned in the startup code for applications in the VO or Vulcan dialect.</summary>
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionVO11" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionOVF" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionFOVF" />
        </member>
        <member name="P:XSharp.RuntimeState.CurrentWorkArea">
            <summary>Gets / Sets the current workarea number for the current thread</summary>
        </member>
        <member name="P:XSharp.RuntimeState.CompilerOptionOVF">
            <summary>The current compiler setting for the OVF compiler option as defined when compiling the main application.
            This value gets assigned in the startup code for applications in the VO or Vulcan dialect.</summary>
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionVO11" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionVO13" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionFOVF" />
        </member>
        <member name="P:XSharp.RuntimeState.CompilerOptionFOVF">
            <summary>The current compiler setting for the FOVF compiler option as defined when compiling the main application.
            This value gets assigned in the startup code for applications in the VO or Vulcan dialect.</summary>
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionVO11" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionVO13" />
            <seealso cref="P:XSharp.RuntimeState.CompilerOptionOVF" />
        </member>
        <member name="P:XSharp.RuntimeState.AppModule">
            <summary>The System.Reflection.Module for the main application.
            This value gets assigned in the startup code for applications in the VO or Vulcan dialect.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Ansi">
            <summary>The current ANSI setting</summary>
        </member>
        <member name="P:XSharp.RuntimeState.AutoOrder">
            <summary>The current AutoOrder setting (used by the RDD system).</summary>
            <seealso cref="P:XSharp.RuntimeState.AutoOpen" />
            <seealso cref="P:XSharp.RuntimeState.AutoShareMode" />
        </member>
        <member name="P:XSharp.RuntimeState.AutoOpen">
            <summary>The current AutoOpen setting (used by the RDD system).</summary>
            <seealso cref="P:XSharp.RuntimeState.AutoOrder" />
            <seealso cref="P:XSharp.RuntimeState.AutoShareMode" />
        </member>
        <member name="P:XSharp.RuntimeState.AutoShareMode">
            <summary>The current AutoShareMode setting (used by the RDD system).</summary>
            <seealso cref="P:XSharp.RuntimeState.AutoOpen" />
            <seealso cref="P:XSharp.RuntimeState.AutoOrder" />
        </member>
        <member name="P:XSharp.RuntimeState.Century">
            <summary>The current Century setting (used in DATE &lt;-&gt; STRING conversions).</summary>
        </member>
        <member name="P:XSharp.RuntimeState.CollationMode">
            <summary>The current Collation mode (used by the RDD system).</summary>
        </member>
        <member name="P:XSharp.RuntimeState.DateCountry">
            <summary>The current DateCountry setting mode (used in DATE &lt;-&gt; STRING conversions).</summary>
            <seealso cref="P:XSharp.RuntimeState.DateFormat" />
        </member>
        <member name="P:XSharp.RuntimeState.DateFormat">
            <summary>The current Date format</summary>
            <remarks>This string should contain a combination of DD MM and either YY or YYYY characters.<br/>
            For example DD-MM-YYYY for italian date format, MM/DD/YYYY for American date format or DD/MM/YYYY for British Date format.
            Note that all other characters except the four groups mentioned above are copied to the output string verbatim.
            </remarks>
            <seealso cref="P:XSharp.RuntimeState.DateCountry" />
        </member>
        <member name="P:XSharp.RuntimeState.NullDateString">
            <summary>A cached copy of the string that is returned for empty dates, matching the current DateFormat</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Decimals">
            <summary>The default number of decimals for new FLOAT values that are created without explicit decimals</summary>
        </member>
        <member name="P:XSharp.RuntimeState.DecimalSep">
            <summary>The default number of decimals for new FLOAT values that are created without explicit decimals</summary>
            <seealso cref="P:XSharp.RuntimeState.ThousandSep" />
        </member>
        <member name="P:XSharp.RuntimeState.DefaultRDD">
            <summary>The default RDD</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Deleted">
            <summary>RDD Deleted Flag that determines whether to ignore or include records that are marked for deletion.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Digits">
            <summary>The default number of digits for new FLOAT values that are created without explicit decimals</summary>
        </member>
        <member name="P:XSharp.RuntimeState.DigitsFixed">
            <summary>Logical setting that fixes the number of digits used to display numeric output.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.DosCodePage">
            <summary>The DOS Codepage. This gets read at startup from the OS().</summary>
            <seealso cref="P:XSharp.RuntimeState.DosEncoding" />
        </member>
        <member name="P:XSharp.RuntimeState.Epoch">
            <summary>Date Epoch value that determines how dates without century digits are interpreted.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.EpochYear">
            <summary>Date Epoch Year value. This gets set by the SetEpoch() function to the Epoch year % 100.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.EpochCent">
            <summary>Date Epoch Century value. This gets set by the SetEpoch() function to the century in which the Epoch year falls.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Exact">
            <summary>String comparison Exact flag that determines how comparisons with the single '=' characters should be done.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Fixed">
            <summary>Logical setting that fixes the number of decimal digits used to display numbers.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.FloatDelta">
            <summary>Numeric value that controls the precision of Float comparisons.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.International">
            <summary>Current SetInternational Setting.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.LastRddError">
            <summary>Last error that occurred in the RDD subsystem.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.LockTries">
            <summary>Number of tries that were done when the last lock operation failed.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.HPLocking">
            <summary>The setting that determines whether to use the High Performance (HP) locking schema for newly created .NTX files</summary>
        </member>
        <member name="P:XSharp.RuntimeState.NewIndexLock">
            <summary>The setting that determines whether to use the new locking offset of -1 (0xFFFFFFFF) for .NTX files.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.MemoBlockSize">
            <summary>The current default MemoBlock size.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.NetErr">
            <summary>Did the last RDD operation cause a Network Error ?</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Optimize">
            <summary>RDD Optimize Flag</summary>
        </member>
        <member name="P:XSharp.RuntimeState.SoftSeek">
            <summary>The current SetSoftSeek flag.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.ThousandSep">
            <summary>The Thousand separator</summary>
            <seealso cref="P:XSharp.RuntimeState.DecimalSep" />
        </member>
        <member name="P:XSharp.RuntimeState.Unique">
            <summary>Number of tries that were done when the last lock operation failed.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.WinCodePage">
            <summary>The Windows Codepage. This gets read at startup from the OS().</summary>
            <seealso cref="P:XSharp.RuntimeState.WinEncoding" />
        </member>
        <member name="P:XSharp.RuntimeState.WinEncoding">
            <summary>The DOS Encoding. This is based on the corrent Win Codepage.</summary>
            <seealso cref="P:XSharp.RuntimeState.WinCodePage" />
        </member>
        <member name="P:XSharp.RuntimeState.DosEncoding">
            <summary>The DOS Encoding. This is based on the corrent DOS Codepage.</summary>
            <seealso cref="P:XSharp.RuntimeState.DosCodePage" />
        </member>
        <member name="P:XSharp.RuntimeState.NoMethod">
            <summary>The name of the method that was called in the last late bound method call.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.Workareas">
            <summary>The workarea information for the current Thread.</summary>
        </member>
        <member name="M:XSharp.RuntimeState.PushCurrentWorkarea(System.UInt32)">
            <exclude />
        </member>
        <member name="M:XSharp.RuntimeState.PopCurrentWorkarea">
            <exclude />    
        </member>
        <member name="P:XSharp.RuntimeState.CollationTable">
            <summary>Current collation table.</summary>
        </member>
        <member name="P:XSharp.RuntimeState.MacroCompiler">
            <summary>Active Macro compiler</summary>
        </member>
        <member name="E:XSharp.RuntimeState.OnCodePageChanged">
            <summary>This event is thrown when the codepage of the runtimestate is changed</summary>
            <remarks>Clients can refresh cached information by registering to this event</remarks>
        </member>
        <member name="E:XSharp.RuntimeState.OnCollationChanged">
            <summary>This event is thrown when the collation of the runtimestate is changed</summary>
            <remarks>Clients can refresh cached information by registering to this event</remarks>
        </member>
        <member name="M:XSharp.RuntimeState.StringCompare(System.String,System.String)">
            <overloads>
            <summary>Compare 2 strings respecting the runtime string comparison rules.</summary>
            </overloads>
            <summary>
      Compare 2 strings. This function is used by the compiler for string comparisons.
    </summary><returns>
      This function returns a numeric value to indicate the order in which the strings should be sorted: <br />
      <table>
        <tr>
          <td>-1</td>
          <td>LHS precedes RHS in the sort order. </td>
        </tr>
        <tr>
          <td>0</td>
          <td>LHS occurs in the same position as RHS in the sort order.</td>
        </tr>
        <tr>
          <td>1</td>
          <td>LHS follows RHS in the sort order.</td>
        </tr>
        </table>
    </returns>
            <param name="strLHS">The first string .</param>
            <param name="strRHS">The second string.</param>
            <remarks>
            The StringCompare method takes into account: <br />
            - the setting of SetExact()<br />
            - the setting of VO13 of the main app<br />
            - the setting of Collation mode <br />
            This method respects the current setting of SetCollation(): <br />
            - When the current collationmode is Clipper or Windows then a Unicode - Ansi conversions will be performed.
            The Clipper collation uses the current DOS codepage and the Windows collation the current Windows codepage.<br />
            - When the current collationmode is Unicode or Ordinal then the original strings will be compared.
            </remarks>
        </member>
        <member name="M:XSharp.RuntimeState.StringCompareCollation(System.String,System.String)">
            <summary>
      Compare 2 strings. This function is used by the compiler for string comparisons.
    </summary><returns>
      This function returns a numeric value to indicate the order in which the strings should be sorted: <br />
      <table>
        <tr>
          <td>-1</td>
          <td>LHS precedes RHS in the sort order. </td>
        </tr>
        <tr>
          <td>0</td>
          <td>LHS occurs in the same position as RHS in the sort order.</td>
        </tr>
        <tr>
          <td>1</td>
          <td>LHS follows RHS in the sort order.</td>
        </tr>
        </table>
    </returns>
            <param name="strLHS">The first string .</param>
            <param name="strRHS">The second string.</param>
            <remarks>
            This method only checks for SetCollation and does not check fot SetExact() or the VO13 setting
            </remarks>
        </member>
        <member name="M:XSharp.RuntimeState.StringCompare(System.Byte[],System.Byte[],System.Int32)">
            <inheritdoc cref="M:XSharp.RuntimeState.StringCompare(System.String,System.String)"/>
            <summary>Compare 2 byte arrays respecting the runtime string comparison rules.</summary>
            <param name="aLHS">The first list of bytes.</param>
            <param name="aRHS">The second list of bytes.</param>
            <param name="nLen">The # of bytes to compare.</param>
            <remarks>This method works on BYTE arrays and is used by the RDD system. <br/>
            This method respects the current setting of SetCollation(): <br/>
            - When the current collationmode is Clipper or Windows then no Ansi - Unicode conversions will be done.<br/>
            - When the current collationmode is Unicode or Ordinal then the byte arrays will be converted to Unicode before
            the comparison is executed. 
            </remarks>
        </member>
        <member name="T:XSharp.Internal.ActualTypeAttribute">
            <summary>
            This class is used to mark IntPtr _DLL arguments with the actual type
            </summary>
        </member>
        <member name="P:XSharp.Internal.ActualTypeAttribute.VALUE">
            <summary>The actual type of the parameter.</summary>
        </member>
        <member name="M:XSharp.Internal.ActualTypeAttribute.#ctor(System.Type)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.ClassLibraryAttribute">
            <summary>
            This class exposes the namespace and globalclass in an assembly
            </summary>
        </member>
        <member name="P:XSharp.Internal.ClassLibraryAttribute.GlobalClassName">
            <summary>Name of the class where functions, defines and globals are stored.</summary>
        </member>
        <member name="P:XSharp.Internal.ClassLibraryAttribute.DefaultNameSpace">
            <summary>Default namespace of the assembly.</summary>
        </member>
        <member name="M:XSharp.Internal.ClassLibraryAttribute.#ctor(System.String,System.String)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.ClipperCallingConventionAttribute">
            <summary>
            This class documents the parameter names for methods and functions
            with Clipper calling convention
            </summary>
        </member>
        <member name="P:XSharp.Internal.ClipperCallingConventionAttribute.ParameterNames">
            <summary>List of parameter names for the method or constructor </summary>
        </member>
        <member name="M:XSharp.Internal.ClipperCallingConventionAttribute.#ctor(System.String[])">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.CompilerVersionAttribute">
            <summary>
            This class records the compiler version used to build an assembly
            </summary>
        </member>
        <member name="P:XSharp.Internal.CompilerVersionAttribute.Version">
            <summary>The version and dialect of the compiler that created the assembly.</summary>	
        </member>
        <member name="M:XSharp.Internal.CompilerVersionAttribute.#ctor(System.String)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.DefaultParameterValueAttribute">
            <summary>
            this class is used to mark default parameter values in the middle of a parameter list.
            </summary>
            <remarks>
            It is used when compiling in VO or Vulcan mode.
            And only for parameters that are followed by parameters without default value (because that is not supported by the .Net framework).<br/>
            The X# compiler will find this attribute at compile time and will insert its value into the argument list.
            </remarks>
        </member>
        <member name="P:XSharp.Internal.DefaultParameterValueAttribute.VALUE">
            <summary>Value of the default parameter</summary>
        </member>
        <member name="P:XSharp.Internal.DefaultParameterValueAttribute.Flag">
            <summary>Flag indicating the type of the default parameter</summary>
            <remarks>
            0 = Regular .Net default value 
            1 = NIL
            2 = Date (value is LONG ticks, empty for NULL_DATE)
            3 = Symbol, value can be empty or a string
            4 = PSZ, null = empty, or a string
            5 = IntPtr (can be 0 for NullPtr)
            </remarks>
        </member>
        <member name="M:XSharp.Internal.DefaultParameterValueAttribute.#ctor(System.Object,System.Int32)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.VoStructAttribute">
            <summary>
            This class is used to describe VOSTRUCT and UNION structures which have a different semantics
            AS actually means Struct PTR. IS means Struct
            Please note that the size assumes x86 (32 bits) OS.
            </summary>
        </member>
        <member name="P:XSharp.Internal.VoStructAttribute.Size">
            <summary>Total size of the VOSTRUCT or UNION.</summary>	
        </member>
        <member name="P:XSharp.Internal.VoStructAttribute.LargestMemberSize">
            <summary>Size of the largest member.</summary>	
        </member>
        <member name="M:XSharp.Internal.VoStructAttribute.#ctor(System.Int32,System.Int32)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.IsInstanceAttribute">
            <summary>
            This class is used to describe fields that have been declared with the INSTANCE modifier
            </summary>
        </member>
        <member name="M:XSharp.Internal.IsInstanceAttribute.#ctor">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Internal.WrappedException">
            <summary>Helper class for the BREAK statement</summary>
        </member>
        <member name="P:XSharp.Internal.WrappedException.VALUE">
            <summary>The property that is passed by the BREAK statement</summary>
        </member>
        <member name="M:XSharp.Internal.WrappedException.#ctor(System.Object)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.ImplicitNamespaceAttribute">
            <summary>
            This class is used to tell the compiler that the assembly has types in a specific namespace.
            When the compiler is called with the /ins command line option, then the names specified with this attribute
            will be automatically included in the USING list when compiling.
            </summary>
            <remarks>
            This type is not in the internal namespace because it is supposed to be used by 3rd party vendors as well
            </remarks>
        </member>
        <member name="P:XSharp.ImplicitNamespaceAttribute.Namespace">
            <summary>Name of the implicit namespace.</summary>		
        </member>
        <member name="M:XSharp.ImplicitNamespaceAttribute.#ctor(System.String)">
            <summary></summary>	
        </member>
        <member name="T:XSharp.Error">
            <summary>XSharp Runtime base Error class</summary>
        </member>
        <member name="P:XSharp.Error.SubSystem">
            <summary>A string representing the name of the subsystem generating the error.</summary>
        </member>
        <member name="P:XSharp.Error.Gencode">
            <summary>An integer numeric value representing a Visual Objects generic error code.</summary>
            <Seealso cref="T:XSharp.Gencode"/>
        </member>
        <member name="P:XSharp.Error.GenCodeText">
            <summary>An string containing the description of the Gencode.</summary>
        </member>
        <member name="P:XSharp.Error.SubCode">
            <summary>An integer numeric value representing a subsystem-specific error code.</summary>
        </member>
        <member name="P:XSharp.Error.SubCodeText">
            <summary>An string containing the description of the SubCode.</summary>
        </member>
        <member name="P:XSharp.Error.FuncSym">
            <summary>A string representing the name of the function or method in which the error occurred.</summary>
        </member>
        <member name="P:XSharp.Error.FileName">
            <summary>A string representing the name used to open the file associated with the error condition.</summary>
        </member>
        <member name="P:XSharp.Error.Severity">
            <summary>A constant indicating the severity of the error condition.</summary>
            <Seealso cref="T:XSharp.Severity"/>
        </member>
        <member name="P:XSharp.Error.Description">
            <summary>A string that describes the error condition.</summary>
        </member>
        <member name="P:XSharp.Error.Arg">
            <summary>A string representing the argument supplied to an operator or function when an argument error occurs.</summary>
        </member>
        <member name="P:XSharp.Error.ArgType">
            <summary>A numeric value representing the data type of the argument that raised the error.</summary>
        </member>
        <member name="P:XSharp.Error.ArgTypeType">
            <summary>The system type representing the data type of the argument that raised the error.</summary>
        </member>
        <member name="P:XSharp.Error.ArgTypeReq">
            <summary>A numeric value representing the expected type of the argument that raised the error.</summary>
        </member>
        <member name="P:XSharp.Error.ArgTypeReqType">
            <summary>The system type representing the expected type of the argument that raised the error.</summary>
        </member>
        <member name="P:XSharp.Error.SubstituteType">
            <summary>A numeric value representing the type of the new result that the error handler substitutes for the operation that produced the error condition.</summary>
        </member>
        <member name="P:XSharp.Error.ArgNum">
            <summary>A numeric value representing the number of the argument supplied to an operator or function when an argument error occurs.</summary>
        </member>
        <member name="P:XSharp.Error.MethodSelf">
            <summary>An object representing the SELF of the method in which the error occurred.</summary>
        </member>
        <member name="P:XSharp.Error.CallFuncSym">
            <summary>A symbol representing the calling function of the function in which the error occurred.</summary>
        </member>
        <member name="P:XSharp.Error.Args">
            <summary>An array of the arguments supplied to an operator or function when an argument error occurs.</summary>
        </member>
        <member name="P:XSharp.Error.Tries">
            <summary>An integer numeric value representing the number of times the failed operation has been attempted.</summary>
        </member>
        <member name="P:XSharp.Error.CanDefault">
            <summary>A logical value indicating whether the subsystem can perform default error recovery for the error condition.</summary>
        </member>
        <member name="P:XSharp.Error.CanRetry">
            <summary>A logical value indicating whether the subsystem can retry the operation that caused the error condition.</summary>
        </member>
        <member name="P:XSharp.Error.CanSubstitute">
            <summary>A logical value indicating whether a new result can be substituted for the operation that produced the error condition.</summary>
        </member>
        <member name="P:XSharp.Error.Operation">
            <summary>A string that describes the operation being attempted when the error occurred.</summary> 
        </member>
        <member name="P:XSharp.Error.OSCode">
            <summary>A value of 0 indicates that the error condition was not caused by an error from the operating system.  When Error:OsCode is set to a value other </summary>
        </member>
        <member name="P:XSharp.Error.OSCodeText">
            <summary>Descripion of the OSCode</summary>
        </member>
        <member name="P:XSharp.Error.FileHandle">
            <summary>A numeric value representing the file handle supplied to a function when an file error occurs.</summary>
        </member>
        <member name="P:XSharp.Error.MaxSize">
            <summary>A numeric value representing a boundary condition for an operation (such as string overflow or array bound error).</summary>
        </member>
        <member name="P:XSharp.Error.Cargo">
            <summary>A value of any data type unused by the Error system.  It is provided as a user-definable slot, allowing arbitrary information to be attached to an Error object and retrieved later</summary>
        </member>
        <member name="M:XSharp.Error.#ctor">
            <summary>Create an Error Object</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.String)">
            <summary>Create an Error Object with the specified Description</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.Exception)">
            <summary>Create an Error Object with the Innner Exception</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.Exception,System.String,System.String,System.UInt32,System.Object[])">
            <summary>Create an Error Object with the Innner Exception and other parameters</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.UInt32,System.String)">
            <summary>Create an Error Object for a Gencode and Argument Name.</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.UInt32,System.String,System.String)">
            <summary>Create an Error Object for a Gencode, Argument Name and Description.</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.UInt32,System.UInt32,System.String,System.String,System.UInt32)">
            <summary>Create an Error Object.</summary>
        </member>
        <member name="M:XSharp.Error.#ctor(System.UInt32,System.UInt32)">
            <summary>Create an Error Object.</summary>
        </member>
        <member name="M:XSharp.Error.ToString">
            <inheritdoc />
        </member>
        <member name="M:XSharp.Error.Throw">
            <summary>Throw the error.</summary>
        </member>
        <member name="M:XSharp.Error.ArgumentError(System.String,System.String,System.String)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.ArgumentError(System.String,System.String,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.ArgumentError(System.String,System.String,System.String,System.UInt32)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.WrapRawException(System.Exception)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.VOError(System.UInt32,System.String,System.String,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.VOError(System.Exception,System.UInt32,System.String,System.String,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.VODBError(System.UInt32,System.UInt32,System.String)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.VODBError(System.UInt32,System.UInt32,System.String,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.VODBError(System.UInt32,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.VODBError(System.UInt32,System.UInt32,System.String,System.String,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.DataTypeError(System.String,System.String,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.ArgumentError(System.String,System.String,System.UInt32,System.String,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.NullArgumentError(System.String,System.String,System.UInt32)">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.BoundError(System.String,System.String,System.UInt32,System.Object[])">
            <exclude/>	
        </member>
        <member name="M:XSharp.Error.TypeToUsualType(System.Type)">
            <exclude />
        </member>
        <member name="M:XSharp.Error.UsualTypeTotype(System.UInt32)">
            <exclude />
        </member>
        <member name="T:XSharp.__UsualType">
            <exclude />
        </member>
        <member name="F:XSharp.__UsualType.Void">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Long">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Date">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Float">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Fixed">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Array">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Object">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.String">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Logic">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Codeblock">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Symbol">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Byte">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.ShortInt">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Word">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.DWord">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Real4">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Real8">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Psz">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Ptr">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Usual">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Int64">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Uint64">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Char">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Dynamic">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.DateTime">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Decimal">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Memo">
            <exclude/>	
        </member>
        <member name="F:XSharp.__UsualType.Invalid">
            <exclude/>	
        </member>
        <member name="T:XSharp.Gencode">
            <summary>Error code Enum that matches the Visual Objecs and Vulcan Generic Error Codes</summary>
            <note type="tip">
            These enums are also available as DEFINES and can therefore also be used without the "Gencode." prefix.
            </note>
        </member>
        <member name="F:XSharp.Gencode.EG_UNKNOWN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_ARG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_BOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_STROVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NUMOVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_ZERODIV">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NUMERR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_SYNTAX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_COMPLEXITY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_MEMOVERFLOW">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_SEQUENCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_MEM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOFUNC">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOVAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOVARMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_BADALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_DUPALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NULLVAR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_CREATE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_OPEN">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_CLOSE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_READ">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_WRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_PRINT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOATOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOCLASS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_WRONGCLASS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_REFERENCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_UNSUPPORTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_LIMIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_CORRUPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_DATATYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_DATAWIDTH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOTABLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_NOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_UNLOCKED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_READONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_APPENDLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_LOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_LOCK_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_LOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_STACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_EVALSTACK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_ERRORBLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_PROTECTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_BADPTR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_BADPAGEFAULT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_ERRORBUILD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_DYNPTR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_INACCESSIBLETYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_AMBIGUOUSMETHOD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_SEND_MISSINGARG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_SEND_TOOMANYARGS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_EXCEPTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Gencode.EG_MAX">
            <summary></summary>
        </member>
        <member name="T:XSharp.Severity">
            <summary>Error code Enum that matches the Visual Objecs and Vulcan Error Severity codes</summary>
            <note type="tip">
            These enums are also available as DEFINES and can therefore also be used without the "Severity." prefix.
            </note>
        </member>
        <member name="F:XSharp.Severity.ES_WHOCARES">
            <summary></summary>
        </member>
        <member name="F:XSharp.Severity.ES_WARNING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Severity.ES_ERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Severity.ES_CATASTROPHIC">
            <summary></summary>
        </member>
        <member name="T:XSharp.Subcodes">
            <summary>Error code Enum that matches the Visual Objecs and Vulcan Error Sub Codes</summary>
            <note type="tip">
            These enums are also available as DEFINES and can therefore also be used without the "Subcodes." prefix.
            </note>
        </member>
        <member name="F:XSharp.Subcodes.ENOERROR">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SEEK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SKIP">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_GOTO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SETRELATION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_USE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_CREATEINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SETORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SETINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_FIELDNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_BADALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_DUPALIAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SETFILTER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_CYCLICREL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_CREATETABLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_RDDNOTFOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_FIELDINDEX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SELECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_SYMSELECT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_TOTAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_RECNO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_EXPRESSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_EXPR_WIDTH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_DRIVERLOAD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_PARAM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_NOAREAS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_NOMEM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_NOFIELDS">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_BAD_ERROR_INFO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_WRONGFIELDNAME">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_ORDDESTROY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_NOINITFUNCTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_ERRORINIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_DBSTRUCT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_NOTABLE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_NOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.EDB_ASSERTION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_OPEN_ORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CREATE_FILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CREATE_MEMO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CREATE_ORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CORRUPT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CORRUPT_HEADER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_RDDVERSION">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_DATATYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_DATAWIDTH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_UNLOCKED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SHARED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_APPENDLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READONLY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_NULLKEY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_NTXLIMIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_TAGLIMIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_INIT_LOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ_LOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRITE_LOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ_UNLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRITE_UNLOCK">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ_LOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRITE_LOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ_UNLOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRITE_UNLOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CLOSE_FILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CLOSE_MEMO">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CLOSE_ORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_INVALID_ORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_RECNO_MISSING">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_NOORDER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_UNSUPPORTED">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRITE_NTX">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_KEY_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_KEY_EVAL">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_VAR_TYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ_BUFFER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SORT_INIT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SORT_ADVANCE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SORT_SORT">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SORT_COMPLETE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SORT_END">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_READ_TEMPFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_STREAM_NUM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_CREATE_TEMPFILE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.DISKIO_WRITE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_WRONG_DRIVERTYPE">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_OUTOFMEMORY">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_INVALIDARG">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_NOEVENTHANDLER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_USER">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_SCOPETYPEMISMATCH">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_NOTCUSTOM">
            <summary></summary>
        </member>
        <member name="F:XSharp.Subcodes.ERDD_INVALIDRECORDLIST">
            <summary></summary>
        </member>
        <member name="T:XSharp.IDate">
            <summary>
            This interface defines Date values
            </summary>
            <seealso cref="T:XSharp.__Date"/>
            <seealso cref="T:XSharp.RDD.DbDate"/>
        </member>
        <member name="P:XSharp.IDate.Year">
            <summary>Year part of the date. A number between 0 and 9999</summary>
            <returns>Integer value</returns>
        </member>
        <member name="P:XSharp.IDate.Month">
            <summary>Month part of the date. A number between 0 an 12</summary>
            <returns>Integer value</returns>
        </member>
        <member name="P:XSharp.IDate.Day">
            <summary>Day part of the date. A number between 0 an 31</summary>
            <returns>Integer value</returns>
        </member>
        <member name="P:XSharp.IDate.Value">
            <summary>Date as System.DateTime structure</summary>
            <returns>System.DateTime value</returns>
        </member>
        <member name="P:XSharp.IDate.IsEmpty">
            <summary>Is the date empty (NULL_DATE)</summary>
            <returns>Logical value</returns>
        </member>
        <member name="T:XSharp.IFloat">
            <summary>
            This interface defines FLOAT values
            </summary>
            <seealso cref="T:XSharp.__Float"/>
            <seealso cref="T:XSharp.RDD.DbFloat"/>
        </member>
        <member name="P:XSharp.IFloat.Value">
            <summary>Double value of the Float</summary>
            <returns>Integer value</returns>
        </member>
        <member name="P:XSharp.IFloat.Digits">
            <summary>Number of digits (includes the optional decimal separator and decimals).</summary>
            <returns>Integer value</returns>
        </member>
        <member name="P:XSharp.IFloat.Decimals">
            <summary>Number of decimals.</summary>
            <returns>Integer value</returns>
        </member>
        <member name="T:XSharp.IDbNotify">
            <summary>
            This interface must be implemented by objects that register themselves for DB Notifications
            </summary>
        </member>
        <member name="T:XSharp.ICodeblock">
            <summary>
            This interface defines Compile time and runtime codeblocks
            </summary>
            <seealso cref="T:XSharp.Codeblock"/>
            <seealso cref="T:XSharp._Codeblock"/>
        </member>
        <member name="M:XSharp.ICodeblock.EvalBlock(System.Object[])">
            <summary>Evaluate the codeblock</summary>
        </member>
        <member name="M:XSharp.ICodeblock.PCount">
            <summary>
            Returns the number of parameters defined for the codeblock
            </summary>
        </member>
        <member name="T:XSharp.IMacroCompiler">
            <summary>
            This interface defines the Macro compiler subsystem
            </summary>
            <seealso cref="M:XSharp.Core.Functions.SetMacroCompiler(System.Type)"/>
            <seealso cref="M:XSharp.Core.Functions.GetMacroCompiler"/>
            <seealso cref="T:XSharp.ICodeblock"/>
        </member>
        <member name="M:XSharp.IMacroCompiler.Compile(System.String,System.Boolean,System.Reflection.Module,System.Boolean@,System.Boolean@)">
            <summary>Compile a string into a runtime codeblock.</summary>
            <param name="macro">String to compile</param>
            <param name="lAllowSingleQuotes">Should single quotes be allowed</param>
            <param name="module">Module of the main app</param>
            <param name="isCodeblock">will be set to TRUE when the string was a real codeblock (with {|..| }).</param>
            <param name="addsMemVars">will be set to TRUE when the macro contains code that may result in adding new MemVars).</param>
            <returns>A compiled codeblock</returns>
            <seealso cref="T:XSharp.ICodeblock"/>
        </member>
        <member name="T:XSharp.RuntimeCodeblockDelegate">
            <summary>Delegate used for Runtime Codeblocks </summary>
        </member>
        <member name="T:XSharp.RuntimeCodeblock">
            <summary>Class wrapper used for Runtime Codeblocks </summary>
        </member>
        <member name="T:VOErrors">
            <exclude />
        </member>
        <member name="F:VOErrors.EDB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SEEK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SKIP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_GOTO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SETRELATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_USE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_CREATEINDEX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SETORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SETINDEX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_FIELDNAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_BADALIAS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_DUPALIAS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SETFILTER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_CYCLICREL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_CREATETABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_RDDNOTFOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_FIELDINDEX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SELECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_SYMSELECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_TOTAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_RECNO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_EXPRESSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_EXPR_WIDTH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_DRIVERLOAD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_PARAM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_NOAREAS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_NOMEM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_NOFIELDS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_BAD_ERROR_INFO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_WRONGFIELDNAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_ORDDESTROY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_NOINITFUNC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_ERRORINIT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_DBSTRUCT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_NOTABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_NOORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.EDB_ASSERTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_OPEN_FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_OPEN_MEMO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_OPEN_ORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CREATE_FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CREATE_MEMO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CREATE_ORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRITE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CORRUPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CORRUPT_HEADER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_RDDVERSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_DATATYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_DATAWIDTH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_UNLOCKED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SHARED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_APPENDLOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READONLY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_NULLKEY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_NTXLIMIT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_TAGLIMIT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_INIT_LOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ_LOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRITE_LOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ_UNLOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRITE_UNLOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ_LOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRITE_LOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ_UNLOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRITE_UNLOCK_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CLOSE_FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CLOSE_MEMO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CLOSE_ORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_INVALID_ORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_RECNO_MISSING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_NOORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_UNSUPPORTED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRITE_NTX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_KEY_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_KEY_EVAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_VAR_TYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ_BUFFER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SORT_INIT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SORT_ADVANCE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SORT_SORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SORT_COMPLETE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SORT_END">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_READ_TEMPFILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_STREAM_NUM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_CREATE_TEMPFILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.DISKIO_WRITE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_WRONG_DRIVERTYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_OUTOFMEMORY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_INVALIDARG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_NOEVENTHANDLER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_SCOPETYPEMISMATCH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_NOTCUSTOM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_INVALIDRECORDLIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERDD_USER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.E_OPEN_MRESTORE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.E_OPEN_MSAVE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSFIRST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSLIBRARYNAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSINTERFACEERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSTYPEERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSLOADLIBRARYERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSAREAINDEX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSAREAINDEXLAST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSUNKNOWN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSWARNING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSCHGDISCARD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDATAWINDOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDWUNTITLED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSUNKNOWNSTATUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSUNKNOWNSTATUSMSG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSERROR2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDSNOTOPEN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSCHANGINGVIEW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDELETEDRECORD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSIPCSERVERNOTFOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSIPCTOPICNOTFOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSIPCITEMNOTFOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSIPCOUTOFMEMORY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDELETEFAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDELETEFAILEDMSG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSALLFILES">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSPRINTERNODISKSPACE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDATADIALOG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSDBROWSEROBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSCREATECTLFAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSCREATEDLGFAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSHOSTVOAPP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSHOSTDATABROWSER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSHOSTDATAWINDOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSPICTUREYN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSPICTURETFYN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSNOOLESUPPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSTEXTBOX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSINFOBOX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSCAPAINTLOADFAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCSCNOAUTOMATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_FIRST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_LAST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_BADTRANSLATIONARRAY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ARG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ARG_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ARGNUM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ARGS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ARGTYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ARGTYPE_REQ">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CALLED_FROM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CHOICE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CMD_LINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CONVERSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CURDIR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_DANGER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_DISK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_DISK_FREE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_DOS_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ENTITY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ERR_IN_ERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_FILE_HANDLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_FUNCPTR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_FUNCTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_HANDLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_HANDLE_CUR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_HANDLE_END">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_IVARS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_LINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_MAX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_MODULE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_OBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_OPERATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_SUBCODE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_SUBST_TYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_SUBSYSTEM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_TO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_TRIES">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_WARNING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_OLEBASE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CONVERSION_CALLED_FROM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CONVERSION_TO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_CONVERSION_TO_CALLED_FROM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_FUNCTION_CALLED_FROM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_NOMEM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSLIB_INCTYPES">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_FIRST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_LAST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_BADERROROBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_BADCAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_BADDESCRIPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_BADHELPCONTEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SYSCLASS_BADNAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_FIRST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_LAST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_ALIAS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADCHILD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADEXPRESSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADFIELDMATCH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADFILENAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADFILTERBLOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADNEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADNEXT_CAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADREADONLYMODE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADSHAREMODE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_FIELDSPEC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_LOCKFAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_LOCKFAILED_CAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_MISMATCH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NODATAFIELDSEXIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOFIELDS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOFILENAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOGOTOP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOGOTOP_CAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOSEEK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOSELECTIONACTIVE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOTABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOTABLE_CAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOTABLE2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_RECORDCHANGED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_RECORDCHANGED_CAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_SELECTIVENOTFOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_SELECTIVESEEK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_SELECTIVEVALUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADFS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADHLNAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADCONCURRENCYASSIGN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADFIELDPOSITION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADTRANSLATIONARRAY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADCB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADDECIMALS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADDRIVE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADEXTENSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADHL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADLENGTH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADLREQ">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADNAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADPATH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADSI">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADSTRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADTYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADTYPE2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDLENGTH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDMAX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDMIN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDMINLENGTH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDRANGE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDTYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDVALUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_REQUIRED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INTENTTOMOVE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INTENTTOMOVE_CAPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADPARENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDINDEX">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_KEYVALUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_INVALIDORDER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_NOFIELDMATCH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADALIAS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_DBFCLASS_BADERROROBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_LAST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_SUBSYSTEM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NO_GET_PROPERTY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NO_SET_PROPERTY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_UNKNOWN_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NO_MEMORY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_CONVERTERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_EXP_NO_DESC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_GET_PROPERTY_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_SET_PROPERTY_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NO_METHOD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_METHOD_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_PARAM_MISSING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NAMED_ARG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_INIT_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NAMED_ARG_LAST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_NAMED_ARG_NOTSUPP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_MSG_VARIANT_ARGS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_NO_IDISPATCH_INTERFACE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OLEAUTO_ERROR_NO_ITYPELIB_INTERFACE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDS_OLERUNTIME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDS_NOAPPDOCFILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDS_NOINSERT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDS_CREATEFAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_FIRST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_LAST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_CLOSEDREPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_COMMANDERROR1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_COMMANDERROR2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_COMPLETEDREPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_DETECTEDERRORS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_OPENEDREPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_SAVEDREPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_SAVETOFILEINFO1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_SAVETOFILEINFO2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_THEREPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_TOCLOSEFILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_SYNCHRONOUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_ASYNCHRONOUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_DDE_PENDING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_REPORTS_OPEN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_REPORT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_ISCLOSED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_ABOUTTITLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_ABOUTBODY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_REPORTCLASS_PARAMERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS_FIRST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS_LAST_STRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS_SUBSYS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__ENV_ALLOC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__ENV_FREE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__CON_ALLOC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__CON_FREE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__CONNECTED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NOT_CONN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__CANCELLED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__ODBC_VO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__GENERAL_ERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__STMT_NOT_ALLOC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__STMT_PREP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NO_STMT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__STMT_ALLOC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__FUNCSEQ_ERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__PARM_TYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__MEM_ALLOC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BADCOL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BADFLD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BADPAR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BADRECNO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BACKWARDS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BOF">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__EOF">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NOFLDS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NO_KEY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NO_ROW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NO_INS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__INV_OP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NO_CSR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BADVALID">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__EMPTY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__UPDATE_COL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__NODATAFIELDSEXIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__BADFIELDPOSITION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__CAVOSTR_SQLCLASS__INVALIDCOLATT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TERMINAL_FIRST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TERMINAL_LAST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_YN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_ALERTDEFAULT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_NOTERMWIN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_FNTCHNG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_SHADE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_MARK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_SCREEN2FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_MEMRECOUR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_DYNCHECKERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_HNDLINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_HNDENTITY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_HNDCONTENTS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_HNDVAR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_NOCHANGE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_FONTCHGERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_MUSTSELECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_NODEVSEL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_NOLINK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_PRNSETUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_PAGENO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_PRESSANYKEY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_APPENDSCREEN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_APPENDALL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_LOCKEDFONT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_NOACCELERATORS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.TMSG_ONTOP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH3">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH4">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH5">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH6">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH7">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH8">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH9">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH10">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH11">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MONTH12">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY3">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY4">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY5">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY6">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DAY7">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_INFOSTRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_LITERAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_SHORT_TRUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_SHORT_FALSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_LONG_TRUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_LONG_FALSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_SHORT_YES">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_SHORT_NO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_LONG_YES">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_LONG_NO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_CURRENCY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_YNSTRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_0">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_3">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_4">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_5">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_6">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_7">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_8">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_9">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_10">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_11">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_12">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_13">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_14">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_15">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_16">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_17">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_18">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_19">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_20">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_21">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_22">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_23">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_24">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_25">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_26">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_27">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_28">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_29">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_30">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_31">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_32">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_33">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_34">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_35">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_36">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_37">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_38">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_39">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_40">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_41">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_42">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_43">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_44">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_45">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_46">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_47">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_48">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_49">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_50">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_51">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_52">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_53">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_54">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_UNKNOWN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_CORRUPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FATAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_APPLI">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_LINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FUNC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_RELEASE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_0">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_3">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_4">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_5">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_6">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_7">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_8">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_9">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_10">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_11">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_12">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_13">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_14">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_15">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_16">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_17">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_18">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_19">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_20">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_21">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_22">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_23">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_24">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_25">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_26">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_27">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_28">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_29">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_30">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_31">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_32">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_33">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_34">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_35">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_36">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_37">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_38">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_39">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_40">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_41">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_42">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_43">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_44">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_45">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_46">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_47">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_48">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_49">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_50">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_51">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_52">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_53">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_54">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_55">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_56">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_57">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_58">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_59">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_60">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_61">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_62">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_63">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_64">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_65">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_66">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_67">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_68">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_69">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_70">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_71">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_72">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_73">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_74">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_75">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_76">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_77">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_78">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_79">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_80">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_81">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_82">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_83">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_84">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_85">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_86">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_87">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_88">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_89">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_90">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_91">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_92">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_93">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_94">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_95">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_96">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_97">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_98">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_99">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_100">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_101">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_102">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_103">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_104">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_105">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_106">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_107">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_108">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_109">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_110">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_111">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_112">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_113">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_114">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_115">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_116">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_117">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_118">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_119">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_120">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_121">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_122">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_123">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_124">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_125">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_126">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_127">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_128">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_129">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_130">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_131">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_132">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_133">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_134">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_135">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_136">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_137">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_138">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_139">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_140">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_141">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_142">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_143">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_144">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_145">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_146">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_147">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_148">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_149">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_150">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_151">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_152">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_153">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_154">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_155">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_156">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_157">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_158">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_159">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_160">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_161">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_162">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_163">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_164">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_165">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_166">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_167">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_168">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_169">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_170">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_171">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_172">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_173">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_174">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_175">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_176">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_177">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_178">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_179">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_180">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_181">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_182">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_183">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_184">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_185">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_186">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_187">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_188">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_189">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_190">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_191">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_192">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_193">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_194">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_195">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_196">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_197">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_198">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_199">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_200">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_201">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_202">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_203">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_204">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_205">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_206">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_207">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_208">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_209">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_210">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_211">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_212">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_213">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_214">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_215">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_216">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_217">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_218">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_219">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_220">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_221">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_222">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_223">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_224">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_225">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_226">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_227">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_228">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_229">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_230">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_231">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_232">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_233">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_234">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_235">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_236">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_237">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_238">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_239">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_240">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_241">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_242">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_243">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_244">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_245">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_246">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_247">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_248">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_249">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_250">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_251">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_252">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_253">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_254">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_255">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_256">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_257">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_258">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_FFFF">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DOSERR_UNKNOWN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_INSTALLED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_GURU">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_STACK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_PARAM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_NOCLIPPER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ERR_ARGCOUNT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MAIL_ERR1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MAIL_ERR2">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_MAIL_ERR3">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_EXCEPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ACCESS_VIOLATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_DATATYPE_MISALIGNMENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_SINGLE_STEP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ARRAY_BOUNDS_EXCEEDED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_DENORMAL_OPERAND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_DIVIDE_BY_ZERO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_INEXACT_RESULT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_INVALID_OPERATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_OVERFLOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_STACK_CHECK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_FLT_UNDERFLOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_INT_DIVIDE_BY_ZERO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_INT_OVERFLOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_PRIV_INSTRUCTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_IN_PAGE_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_ILLEGAL_INSTRUCTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_NONCONTINUABLE_EXCEPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_STACK_OVERFLOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_INVALID_DISPOSITION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RT_MSG_GUARD_PAGE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCTOOLBAROFFSET">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_NEWSHEET">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_OPEN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CLOSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SAVE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PRINT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PREVIEW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SUM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BOLD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ITALIC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_UNDERLINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CROSSOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SIZEPLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SIZEMINUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SUPERSCRIPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SUBSCRIPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CURRENCY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PERCENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COMMA">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_DECIMALPLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_DECIMALMINUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_LEFT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CENTER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RIGHT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_JUSTIFY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ADDTEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CENTERTEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_TABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BORDERRECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BORDERLOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_LIGHTSHADING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COPY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PASTEFORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PASTEVALUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_UNDO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_REPEAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ZOOMIN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ZOOMOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SORTATOZ">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SORTZTOA">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_LOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_OUTLINESYMBOL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SELECTCELL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SCROLLMINUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SCROLLPLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BUTTON">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PICTURE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SPELLCHECK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CALCULATE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_AREACHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BARCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COLUMNCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_STACKCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_LINECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PIECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SCATTERCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DAREACHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DBARCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DCOLUMNCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DCOLUMNAREACHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DLINECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DPIECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DSURFACECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RADARCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COLUMNLINECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COLUMNSTOCKCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CHARTFORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_EDITCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_LINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ARROW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FREEHAND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RECTANGLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ELLIPSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ARC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_POLYGON">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FILLEDRECTANGLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FILLEDELLIPSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FILLEDARC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FILLEDPOLYGON">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SELECTOBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_EDITPOINT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_GROUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_UNGROUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FRONT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BACK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COLOR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_3DFRAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_NEWMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FUNCTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CALC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_GOMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_STEPMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_TRACEOUTMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_TRACEINMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RUNMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_SKIPMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RESETMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RECORDMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_STOPMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PAUSEMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_NEW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PASTE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_NUMBERLIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_BULLETLIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_UNINDENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_INDENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_COLUMNFORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FRAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_OBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_GRAPH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ENVELOPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PAGELAYOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PAGENORMAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PAGEFIT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_LEFTTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CENTERTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_RIGHTTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_DECIMALTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PARAGRAPH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_HELP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_DELETE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_TIME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_MAIL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_TUTORIAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_DISKETTEIO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_FIND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_PREVREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_NEXTREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_STARTREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_ENDREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_VGBROWSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_VFORM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDT_CUSTOMBITMAP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.__WCTOOLTIPOFFSET">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_NEWSHEET">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_OPEN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CLOSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SAVE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PRINT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PREVIEW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SUM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BOLD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ITALIC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_UNDERLINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CROSSOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SIZEPLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SIZEMINUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SUPERSCRIPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SUBSCRIPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CURRENCY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PERCENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COMMA">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_DECIMALPLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_DECIMALMINUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_LEFT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CENTER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RIGHT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_JUSTIFY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ADDTEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CENTERTEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_TABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BORDERRECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BORDERLOW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_LIGHTSHADING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COPY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PASTEFORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PASTEVALUE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_UNDO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_REPEAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ZOOMIN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ZOOMOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SORTATOZ">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SORTZTOA">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_LOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_OUTLINESYMBOL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SELECTCELL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SCROLLMINUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SCROLLPLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BUTTON">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PICTURE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SPELLCHECK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CALCULATE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_AREACHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BARCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COLUMNCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_STACKCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_LINECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PIECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SCATTERCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DAREACHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DBARCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DCOLUMNCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DCOLUMNAREACHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DLINECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DPIECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DSURFACECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RADARCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COLUMNLINECHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COLUMNSTOCKCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CHARTFORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_EDITCHART">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_LINE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ARROW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FREEHAND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RECTANGLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ELLIPSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ARC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_POLYGON">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FILLEDRECTANGLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FILLEDELLIPSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FILLEDARC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FILLEDPOLYGON">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SELECTOBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_EDITPOINT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_GROUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_UNGROUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FRONT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BACK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COLOR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_3DFRAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_NEWMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FUNCTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CALC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_GOMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_STEPMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_TRACEOUTMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_TRACEINMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RUNMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_SKIPMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RESETMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RECORDMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_STOPMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PAUSEMACRO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_NEW">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PASTE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_NUMBERLIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_BULLETLIST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_UNINDENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_INDENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_COLUMNFORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FRAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_OBJECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_GRAPH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ENVELOPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PAGELAYOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PAGENORMAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PAGEFIT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_LEFTTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CENTERTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_RIGHTTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_DECIMALTAB">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PARAGRAPH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_HELP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_DELETE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_TIME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_MAIL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_TUTORIAL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_DISKETTEIO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_FIND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_PREVREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_NEXTREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_STARTREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_ENDREC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_VGBROWSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_VFORM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.IDTT_CUSTOMBITMAP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.INTERNET_ERROR_BASE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_OUT_OF_HANDLES">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_EXTENDED_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INTERNAL_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INVALID_URL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_UNRECOGNIZED_SCHEME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NAME_NOT_RESOLVED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_PROTOCOL_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INVALID_OPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_BAD_OPTION_LENGTH">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_OPTION_NOT_SETTABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SHUTDOWN">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INCORRECT_USER_NAME">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INCORRECT_PASSWORD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_LOGIN_FAILURE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INVALID_OPERATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_OPERATION_CANCELLED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INCORRECT_HANDLE_TYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INCORRECT_HANDLE_STATE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NOT_PROXY_REQUEST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_REGISTRY_VALUE_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_BAD_REGISTRY_PARAMETER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NO_DIRECT_ACCESS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NO_CONTEXT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NO_CALLBACK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_REQUEST_PENDING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INCORRECT_FORMAT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_ITEM_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_CANNOT_CONNECT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_CONNECTION_ABORTED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_CONNECTION_RESET">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_FORCE_RETRY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INVALID_PROXY_REQUEST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NEED_UI">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_HANDLE_EXISTS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_CERT_DATE_INVALID">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_CERT_CN_INVALID">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_MIXED_SECURITY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_CHG_POST_IS_NON_SECURE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_POST_IS_NON_SECURE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_CLIENT_AUTH_CERT_NEEDED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INVALID_CA">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_CLIENT_AUTH_NOT_SETUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_ASYNC_THREAD_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_REDIRECT_SCHEME_CHANGE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_DIALOG_PENDING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_RETRY_DIALOG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_HTTPS_HTTP_SUBMIT_REDIR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_INSERT_CDROM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_FORTEZZA_LOGIN_NEEDED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_CERT_ERRORS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_CERT_NO_REV">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_CERT_REV_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_FTP_TRANSFER_IN_PROGRESS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_FTP_DROPPED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_FTP_NO_PASSIVE_MODE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_PROTOCOL_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_NOT_FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_DATA_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_END_OF_DATA">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_INVALID_LOCATOR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_INCORRECT_LOCATOR_TYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_NOT_GOPHER_PLUS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_ATTRIBUTE_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_GOPHER_UNKNOWN_LOCATOR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_HEADER_NOT_FOUND">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_DOWNLEVEL_SERVER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_INVALID_SERVER_RESPONSE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_INVALID_HEADER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_INVALID_QUERY_REQUEST">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_HEADER_ALREADY_EXISTS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_REDIRECT_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_NOT_REDIRECTED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_COOKIE_NEEDS_CONFIRMATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_COOKIE_DECLINED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_HTTP_REDIRECT_NEEDS_CONFIRMATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SECURITY_CHANNEL_ERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_UNABLE_TO_CACHE_FILE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_TCPIP_NOT_INSTALLED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_DISCONNECTED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SERVER_UNREACHABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_PROXY_SERVER_UNREACHABLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_BAD_AUTO_PROXY_SCRIPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_UNABLE_TO_DOWNLOAD_SCRIPT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_INVALID_CERT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_SEC_CERT_REVOKED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_FAILED_DUETOSECURITYCHECK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NOT_INITIALIZED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_NEED_MSN_SSPI_PKG">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERROR_INTERNET_LOGIN_FAILURE_DISPLAY_ENTITY_BODY">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_FILE_EXISTS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_LOGON_FAILED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_NEWSGROUP_MISSING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_NO_ARTICLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_NO_ARTICLE_NUMBER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_NO_ARTICLE_SELECTED">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_NO_NEWSGROUP">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_UNKNOWN_CODE_TYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERR_WSA_WAIT_TIMEOUT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.XS_RT_BASE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGCANNOTBEZERO">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGNOTCODEBLOCK">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGLISTING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGNOTDATE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGNOTINT32">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGNOTINTEGER">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGNOTNUMERIC">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGNOTSTRING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGSINCOMPATIBLE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGSNOTSAMETYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGUMENT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGUMENTSHEADING">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ATRANSLATE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.DATATYPEERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.DATE_ADD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.DATE_SUBTRACT">
            <summary></summary>
        </member>
        <member name="F:VOErrors.DESCRIPTION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OPERATION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ERRORCODE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.INVALIDARGTYPE">
            <summary></summary>
        </member>
        <member name="F:VOErrors.OSVERSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.RUNTIMEERROR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.STRINGLENNE1">
            <summary></summary>
        </member>
        <member name="F:VOErrors.SUBSYSTEM">
            <summary></summary>
        </member>
        <member name="F:VOErrors.USUALBINARYOPERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.USUALUNARYOPERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.VERSION">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARGISNULL">
            <summary></summary>
        </member>
        <member name="F:VOErrors.UNKNOWNRDD">
            <summary></summary>
        </member>
        <member name="F:VOErrors.ARRAYBOUNDS">
            <summary></summary>
        </member>
        <member name="F:VOErrors.USUALCONVERSIONERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.USUALOVERFLOWERR">
            <summary></summary>
        </member>
        <member name="F:VOErrors.USUALNOTINDEXED">
            <summary></summary>
        </member>
        <member name="T:MemoHelpers">
            <exclude />
        </member>
        <member name="F:MemoHelpers.BLANK">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.END_MEMO">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.MAX_WIDTH">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.TAB">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.LINE_FEED">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.HARD_CR">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.SOFT_CR">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.HARD_CR_LF">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.SOFT_CR_LF">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.STD_TAB_WIDTH">
            <exclude/>	
        </member>
        <member name="F:MemoHelpers.STD_MEMO_WIDTH">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.MLCount(System.String,System.Int32,System.Int32,System.Boolean)">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.GetTabPos(System.Int32,System.Int32)">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.MPosToLc(System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.MLcToPos(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.IsCrLf(System.String,System.Int32,System.Int32@)">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.LineLen(System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <exclude/>	
        </member>
        <member name="M:MemoHelpers.MLine(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32@)">
            <exclude/>	
        </member>
        <member name="T:Messages">
            <exclude />
        </member>
    </members>
</doc>
