<GenerateNativeResource
         Sources="@(NativeResource)"
         IncludePaths="$(IncludePaths)"
         OutputPath="$(IntermediateOutputPath)"
         TargetFrameworkVersion="$(TargetFrameworkVersion)"
         EmitDebugInformation="$(EmitDebugInformation)"         
         Condition="'@(NativeResource)' != ''">
      </GenerateNativeResource>

	  
- Create task to compile unmanaged resource files (.rc files)
  - Find the MS Resource compiler in the VO\Bin Path or Windows SDK path, for example
    C:\Program files (x86)\Microsoft SDKs\WIndows\v7.1a\bin
  - GenerateResponseFileCommands() ouput a line with an #include for all of the .rc files in the project
    this.Sources[x].GetMetadata("Fullpath")
  -	GetResponseFileSwitch: argument with quotes surrounded
  - GenerateCommandLineCommands  :
     /i Includepath
	 /x (Ignore include path from environment)
	 /fo OutputFileName
	 /d DEBUG or /d NDEBUG depending on configuration
	 / Vulcan adds /d__CLR2__ or /d__CLR4__ depending on Frameworkversion (checks for start with "v4")
  - SkipTaskExecution should parse all .RC files for timestamp and also find the #Includes in the RC files and check their timestamp
    and compare this with timestamp of output file
  - ValidateParameters should check
    x does RC.EXE exist
	x are there Sources
	x is there an Output Path
	x set the output filename to <outputpath> Native.Res
  - Public properties
    x TargetFrameworkVersion (used for __CLR__ defines)
	x IncludePath string
	x OutputPath string
	x EmitDebugInformation bool
	x Sources ITaskItem[]
	x UseSourcePath
	
	
	