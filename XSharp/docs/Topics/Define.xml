<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>Define</title>
  <keywords>
    <keyword>DEFINE</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">DEFINE statement</para>
    </header>
    <para styleclass="Heading2">Purpose</para>
    <para styleclass="Body Text">Declare a constant name and its value to the compiler.</para>
    <para styleclass="Heading2">Syntax</para>
    <para styleclass="Body Text">[STATIC] DEFINE &lt;idConstant&gt; := &lt;expression&gt; [ AS &lt;Type&gt;]</para>
    <para styleclass="Heading2">Arguments</para>
    <para styleclass="List">STATIC<tab />Restricts the visibility of the constant to the module in which it is declared. If omitted, the constant has application-wide visibility.</para>
    <para styleclass="List">&lt;idConstant&gt;<tab />A valid identifier name for the constant. A constant is an entity and, as such, shares the same name space as other entities. This means that it is not possible to have a constant and a global variable, for example, with the same name.</para>
    <para styleclass="List">&lt;<text styleclass="Body Text">expression</text>&gt;<tab />A constant value that is assigned to &lt;idConstant&gt;. This value can be a literal representation of one of the data types listed below or a simple expression involving only operators, literals, and other DEFINE constants; however, more complicated expressions (including class instantiation) are not allowed.</para>
    <para styleclass="List">&lt;Type&gt;<tab />You can optionally specify a type for a DEFINE. When the type is omitted then the compiler will calculate the type from &lt;expression&gt;.</para>
    <para styleclass="List"></para>
    <para styleclass="Heading2">Description</para>
    <para styleclass="Body Text">Once the constant name and value is declared and initialized with the DEFINE statement, you can not change the value of &lt;idConstant&gt; without provoking a compiler error. The constant value &lt;uValue&gt; will be used whenever the &lt;idConstant&gt; identifier name is encountered in your application.</para>
    <para styleclass="Body Text">You can hide a constant name from a routine by declaring a variable with the same name (with LOCAL, MEMVAR, or FIELD). The search order for a variable name is as follows:</para>
    <para styleclass="Body Text">1.<tab />LOCALs, local parameters, MEMVARs, and FIELDs</para>
    <para styleclass="Body Text">2.<tab />SELF instance variables (i.e., without &lt;idObject&gt;: prefix in class methods)</para>
    <para styleclass="Body Text">3.<tab />GLOBALs and DEFINEs</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">Note: you can&apos;t use DEFINES for #ifdef constructs. You need to use #defines for that. DEFINEs are like GLOBALs but their value is a constant.</para>
    <para styleclass="Heading2">Examples</para>
    <para styleclass="Body Text">The following example assigns an application name to the constant cAppName. This value is then displayed at the beginning and end of the application run:</para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">DEFINE</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> cAppName := &quot;Accounts Payable&quot;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">...</text><br/><text style="font-weight:bold; font-style:normal; text-decoration:none; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;"> Start()</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">? &quot;Start of &quot;, cAppName, &quot; application.&quot;</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">...</text><br/><text style="font-weight:normal; font-style:normal; text-decoration:none; color:#000000;">? &quot;End of &quot;, cAppName, &quot; application.&quot;</text></para>
    <para styleclass="Heading2">See Also</para>
    <para styleclass="Body Text"><link displaytype="text" defaultstyle="true" type="topiclink" href="pp-Define">#define</link> , <link displaytype="text" defaultstyle="true" type="topiclink" href="GLOBAL">GLOBAL</link></para>
    <para styleclass="Body Text"></para>
  </body>
</topic>
