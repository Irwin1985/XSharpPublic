<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>PRIVATE</title>
  <keywords>
    <keyword>PRIVATE</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">PRIVATE</para>
    </header>
    <para styleclass="Body Text">The PRIVATE statement is NOT available in the Core and Vulcan dialects and will only be enabled if the <link displaytype="text" defaultstyle="true" type="topiclink" href="opt-memvar">-memvar</link> commandline option is specified.</para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">private &#160; &#160; : </text><text style="font-weight:bold; font-style:normal; color:#3366ff;">PRIVATE</text><text style="font-weight:normal; font-style:normal; color:#000000;">&#32;</text><link displaytype="text" defaultstyle="true" type="topiclink" href="Identifiers" style="font-weight:normal; font-style:normal; color:#000000;">identifier</link><text style="font-weight:normal; font-style:normal; color:#000000;"> (, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="Identifiers" style="font-weight:normal; font-style:normal; color:#000000;">identifier</link><text style="font-weight:normal; font-style:normal; color:#000000;">)* </text><link displaytype="text" defaultstyle="true" type="topiclink" href="Helpers" style="font-weight:normal; font-style:normal; color:#000000;">eos</link><br/></para>
    <para styleclass="Heading2">Description </para>
    <para styleclass="Body Text">The PRIVATE statement creates memory variables of the storage class PRIVATE. Storage classes define the lifetime and the visibility of variables. With the PRIVATE statement, so-called &quot;dynamic&quot; memory variables are created at runtime and whose references the compiler does not resolve. </para>
    <para styleclass="Body Text">The declaration of a PRIVATE variable takes place with the declaration MEMVAR. The generation of such a variable explicitly takes place with the PRIVATE statement or implicitly with assignment of a value to an undeclared variable. PRIVATE variables can also be created from character string expressions using the macro operator (&amp;) at runtime. Since the symbolic variable name of PRIVATE variables exists at runtime, they can be saved in files and restored at runtime. This is not possible with LOCAL or STATIC variables. </para>
    <para styleclass="Body Text">The name of the private may occur only once within a function. This includes variables which are declared as STATIC or LOCAL. If a PRIVATE or PUBLIC variable of the name &lt;VarName&gt; already exists in a calling function, the existing variable is hidden and is no longer visible within the function or procedure in which the new PRIVATE variable of the same name was declared. </para>
    <para styleclass="Body Text">The length of a variable name is unlimited. A variable consists of alphanumeric characters, and the first character may not be numeric. The underscore (_) is permitted as a special character. </para>
    <para styleclass="Body Text">The lifetime of a PRIVATE variable extends implicitly to the lifetime of the method, function or procedure in which the variable was created. It is released after the function terminates, but can also be deleted with one of the commands CLEAR ALL, CLEAR MEMORY or RELEASE. A private variable remains visible in called functions and procedures until, if necessary, a new variable is created with the same name as the variable in the calling function or procedure. </para>
    <para styleclass="Body Text">PRIVATE variables have the value NIL after generation.</para>
    <para styleclass="Body Text"></para>
  </body>
</topic>
