<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>LOCAL Statement</title>
  <keywords>
    <keyword>Arrays<keyword>declaring</keyword></keyword>
    <keyword>Compiledeclaration</keyword>
    <keyword>Declaration statements</keyword>
    <keyword>LOCAL statement</keyword>
    <keyword>Statements</keyword>
    <keyword>STATIC LOCAL statement</keyword>
    <keyword>Variable declaration</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">LOCAL Statement</para>
    </header>
    <para styleclass="Heading1">Purpose</para>
    <para styleclass="Body Text">Declare and initialize local variables and arrays.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Heading1">Syntax</para>
    <para styleclass="Body Text">[STATIC] LOCAL &lt;idVar&gt; [:= &lt;uValue&gt;] [,...] [AS | IS &lt;idType&gt;] [, ...]</para>
    <para styleclass="Body Text">[STATIC] LOCAL DIM &lt;ArraySpec&gt; [, ...] AS | IS &lt;idType&gt; [, ...]</para>
    <para styleclass="Body Text">[STATIC] LOCAL &lt;ArraySpec&gt; [, ...] [AS ARRAY] [, ...]</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text"><text style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Note:  </text><text styleclass="Normal">The LOCAL statement is shown using several syntax diagrams for convenience.  You can declare variables, dynamic arrays, and dimensioned arrays using a single LOCAL statement if each definition is separated by a comma.</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Heading1">Arguments</para>
    <para styleclass="List">STATIC<tab/>Causes the local variable to retain its value across invocations of the declaring entity but does not affect its visibility.</para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;idVar&gt;<tab/>A valid identifier name for the local variable to declare.</para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;uValue&gt;<tab/>The initial value to assign to the variable.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>For LOCAL, this can be any valid expression.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>For STATIC LOCAL, this value can be a literal representation of one of the data types listed below or a simple expression involving only operators, literals, and DEFINE constants; however, more complicated expressions (including class instantiation) are not allowed.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>Note:  Although &lt;uValue&gt; can be a literal array, it must be one-dimensional.  Multi-dimensional literal arrays are not allowed.  For example, {1, 2, 3} is allowed, but {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}} is not.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>Note:  Although the Chr() function cannot be used in &lt;uValue&gt;, the _Chr() operator can.   _Chr() is otherwise identical in functionality to Chr().</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>If &lt;uValue&gt; is not specified, the initial value of the variable depends on the data type you declare (e.g., NIL if you do not use strong typing, 0 for AS INT, etc.)</para>
    <para styleclass="List"></para>
    <para styleclass="List">DIM &lt;ArraySpec&gt;<tab/>The specification for a dimensioned array to declare.</para>
    <para styleclass="List"></para>
    <para styleclass="List">&lt;ArraySpec&gt;<tab/>The specification for a dynamic array to declare.<br/>In both cases, &lt;ArraySpec&gt; is one of the following:<br/>&lt;idArray&gt;[&lt;nElements&gt;, &lt;nElements&gt;, &lt;nElements&gt;]<br/>&lt;idArray&gt;[&lt;nElements&gt;][&lt;nElements&gt;][&lt;nElements&gt;]<br/>All dimensions except the first are optional.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>&lt;idArray&gt; is a valid identifier name for the array to declare.  For dynamic arrays, array elements are initialized to NIL.  For dimensioned arrays, the initial value of the elements depends on the data type as explained above for &lt;uValue&gt;.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>&lt;nElements&gt; defines the number of elements in a particular dimension of an array.  The number of dimensions is determined by how many &lt;nElements&gt; arguments you specify.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><tab/>&lt;nElements&gt; can be a literal numeric representation or a simple numeric expression involving only operators, literals, and DEFINE constants; however, more complicated expressions (such as function calls) are not allowed.</para>
    <para styleclass="List"></para>
    <para styleclass="List"><snippet src="__asType" inline="false"/></para>
    <para styleclass="List"></para>
    <para styleclass="List"></para>
    <para styleclass="List">IS &lt;idType&gt;<tab/>Specifies a structure data type in which the memory needed to hold the structure is allocated on the stack (&lt;idStructure&gt; is the only &lt;idType&gt; allowed with the IS keyword.) See the <link displaytype="text" defaultstyle="true" type="topiclink" href="command_VOSTRUCT">VOSTRUCT</link> entry in this guide for more information on data structure memory allocation.</para>
    <para styleclass="List"></para>
    <para styleclass="List">AS ARRAY<tab/>For dynamic array declarations, specifies the data type of the entire array.</para>
    <para styleclass="List"></para>
    <para styleclass="Heading1">Description</para>
    <para styleclass="Body Text">LOCAL is a declaration statement that declares one or more variables or arrays as local to the current routine (i.e., function, method, or procedure).  Like other variable declaration statements (such as FIELD and MEMVAR), you must place LOCAL statements before any executable statements (including PRIVATE, PUBLIC, and PARAMETERS) in the routine you are defining.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">Local variable declarations hide all inherited private variables, visible public variables, instance variables, global variables, and constants with the same name.  The search order for a variable name is as follows:</para>
    <para styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="Normal">1.</text><tab/><text styleclass="Normal">LOCALs, local parameters, MEMVARs, and FIELDs</text></para>
    <para styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="Normal">2.</text><tab/><text styleclass="Normal">SELF instance variables (i.e., without &lt;</text><text styleclass="Italic">idObject</text><text styleclass="Normal">&gt;:  prefix in class methods)</text></para>
    <para styleclass="Indented" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="Normal">3.</text><tab/><text styleclass="Normal">GLOBALs and DEFINEs</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">A LOCAL statement that declares a variable name which is already declared within the same routine (with FIELD, LOCAL, or MEMVAR) causes a compiler error.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">Local variables are visible only within the current routine, and unlike private variables, are not visible within invoked routines.  If a routine is invoked recursively, each recursive activation creates a new set of local variables.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">Unless you specify the STATIC keyword, local variables are created automatically each time the routine in which they were declared begins executing.  They continue to exist and retain their values until the declaring routine returns control to the routine that invoked it.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">The STATIC keyword serves as a lifetime modifier for a local variable, preventing the variable from being released from memory when the creating entity returns to its calling routine.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Important!  </text><text style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">When an application containing static variable declarations is invoked, the variables are created and initialized before the beginning of program execution.  Thus, initial values are assigned only once per application run, not each time the creator is called.</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">For more information on variable declarations and scoping, refer to the &quot;Variables, Constants, and Declarations&quot; chapter in the <text styleclass="Italic">Programmer&apos;s Guide</text>.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Heading1">Notes</para>
    <para styleclass="Body Text"><text style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Local parameters:  </text><text styleclass="Normal">The FUNCTION, METHOD, and PROCEDURE statements allow you to declare a list of local parameters enclosed in parentheses following the entity name.  For example:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> &lt;idFunction&gt;(&lt;idParamList&gt;)</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text"><text style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Exporting locals through code blocks:  </text><text styleclass="Normal">When you create a code block, you can access local variables defined in the creating entity within the code block definition without passing them as parameters (because local variables are visible to the code block).  This, along with the fact that you can pass a code block as a parameter, allows you to export local variables.  For example:</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> One() </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">   </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:normal; font-style:normal; color:#000000;"> nVar := 10 </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:normal; font-style:normal; color:#000000;">, cbAdd </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:normal; font-style:normal; color:#000000;"> CODEBLOCK</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">   cbAdd := {|nValue| nValue + nVar}</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">   </text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">   ? NextFunc(cbAdd)      </text><text style="font-weight:bold; font-style:italic; color:#339966;">// Result:  210</text><br/><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:normal; font-style:normal; color:#000000;"> NextFunc(cbAddEmUp)</text><br/><text style="font-weight:normal; font-style:normal; color:#000000;">   </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:normal; font-style:normal; color:#000000;"> EVAL(cbAddEmUp, 200)</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">When the code block is evaluated in NextFunc(), <text styleclass="Italic">nVar</text>, which is local to function One(), becomes visible even though it is not passed directly as a parameter.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Macro expressions:  </text>You cannot refer to local variables within macro variables and expressions.  If you refer to a local variable within a macro variable, a private or public variable with the same name will be referenced instead.  If no such variable exists, a runtime error will be raised.</para>
    <para styleclass="Body Text"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Type of a local variable:  </text>Since Type() uses the macro operator (&amp;) to evaluate its argument, you cannot use it to determine the type of a local variable or an expression containing a local variable reference.  You can, however, use ValType() which evaluates its argument and returns the type of the return value</para>
    <para styleclass="Body Text"><text styleclass="BoldItalic" style="font-family:Arial; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;">Memory files:  </text>You cannot SAVE or RESTORE local variables.</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Heading1">Examples</para>
    <para styleclass="Body Text">The following example declares two local arrays and two local variables:</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aArray1</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">[20,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">10],</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aArray2</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">[20][10],</text><text style="font-weight:bold; font-style:normal; color:#000000;"> var1</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> var2</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">This example declares two local variables with initializers.  The first is initialized to a date value and the second to an array:</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> dWhen </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">TODAY</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">()</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aVegies </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;Tomato&quot;,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;Chickadee&quot;,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;Butterbean&quot;</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">}</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">In this example, the variable <text styleclass="Italic">x </text>and the dimensioned array <text styleclass="Italic">z </text>are typed as INT, while the variables <text styleclass="Italic">cName </text>and <text styleclass="Italic">cAddr </text>are typed as STRING:</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> x</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">DIM</text><text style="font-weight:bold; font-style:normal; color:#000000;"> z</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">[100]</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">INT</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cName</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cAddr </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">AS</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">STRING</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">The next example declares static variables both with and without initializers:</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aArray1</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">[20,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">10],</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aArray2</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">[20][10]</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cVar</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cVar2</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> cString </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">&quot;my string&quot;,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> var</text><br/><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> aArray </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">{</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">1,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">2,</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">3</text><text style="font-weight:bold; font-style:normal; color:#ff0000;">}</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Body Text">Here a static variable is manipulated within a function.  In this example, a count variable increments itself each time the function is called:</para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Code Example"><text style="font-weight:bold; font-style:normal; color:#ff0000;">FUNCTION</text><text style="font-weight:bold; font-style:normal; color:#000000;"> MyCounter</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">(</text><text style="font-weight:bold; font-style:normal; color:#000000;">nNewValue</text><text style="font-weight:bold; font-style:normal; color:#0000ff;">)</text><br/><tab/><tab/><tab/><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// Initial value assigned once</text><br/><tab/><text style="font-weight:bold; font-style:normal; color:#ff0000;">STATIC</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">LOCAL</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nCounter </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">0</text><br/><tab/><text style="font-weight:bold; font-style:normal; color:#ff0000;">IF</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nNewValue </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">!=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> </text><text style="font-weight:bold; font-style:normal; color:#ff0000;">NIL</text><br/><tab/><tab/><tab/><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// New value for nCounter</text><br/><tab/><text style="font-weight:bold; font-style:normal; color:#000000;">nCounter </text><text style="font-weight:bold; font-style:normal; color:#0000ff;">:=</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nNewValue</text><br/><tab/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ELSE</text><br/><tab/><tab/><tab/><text style="font-weight:bold; font-style:normal; color:#ff00ff;">// Increment nCounter</text><br/><tab/><tab/><text style="font-weight:bold; font-style:normal; color:#0000ff;">++</text><text style="font-weight:bold; font-style:normal; color:#000000;">nCounter</text><br/><tab/><text style="font-weight:bold; font-style:normal; color:#ff0000;">ENDIF</text><br/><tab/><text style="font-weight:bold; font-style:normal; color:#ff0000;">RETURN</text><text style="font-weight:bold; font-style:normal; color:#000000;"> nCounter</text></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
    <para styleclass="Heading1">See Also</para>
    <para styleclass="link"><link displaytype="text" defaultstyle="true" type="topiclink" href="command_FIELD">FIELD</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_FUNCTION">FUNCTION</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_DEFINE">DEFINE</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_GLOBAL">GLOBAL</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_MEMVAR">MEMVAR</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_METHOD">METHOD</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_PROCEDURE">PROCEDURE</link>, <link displaytype="text" defaultstyle="true" type="topiclink" href="command_STATIC">STATIC</link></para>
    <para styleclass style="text-align:left; text-indent:0px; margin-top:0px; margin-right:16px; margin-bottom:0px; margin-left:12px; line-height:1.00; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:64px left,320px left ;"></para>
  </body>
</topic>
