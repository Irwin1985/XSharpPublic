///////////////////////////////////////////////////////////////////////////
// FoxProSql.xh
//
// XSharp FoxPro SQL Preprocessor Directives
//
// Copyright (c) XSharp BV.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  
// See License.txt in the project root for license information.
//
// Caution: do not modify this file. It will be overwritten during product updates
//


#ifndef FOXPROSQL_XH
#define FOXPROSQL_XH

// SQL Select commands. Separate commands for TO and 3 different INTO variations

#command SELECT <*columnClauses*> FROM <*TableList*>           ;
    [WITH (BUFFERING = <lExpr> ) ]                             ;
    [WHERE <*WhereConditions*> ]                               ;
    [GROUP BY <*ColumnList*> [HAVING <*HavingConditions*>] ]   ;
    [UNION [ALL] <*SelectCommand*>]                            ;
    [ORDER BY <*orderByList*>]                                 ;
    [TO <dest:FILE,PRINTER,SCREEN> <*extraoptions*>]        => ;
    __FoxSqlSelect(<"udc">)                

#command SELECT <*columnClauses*> FROM <*TableList*>           ;
    [WITH (BUFFERING = <lExpr> ) ]                             ;
    [WHERE <*WhereConditions*> ]                               ;
    [GROUP BY <*ColumnList*> [HAVING <*HavingConditions*>] ]   ;
    [UNION [ALL] <*SelectCommand*>]                            ;
    [ORDER BY <*orderByList*>]                                 ;
    INTO ARRAY <ArrayName>                                  => ;
    __FoxSqlSelectArray(<"udc">,<ArrayName>)                

            
#command SELECT <*columnClauses*> FROM <*TableList*>              ;
    [WITH (BUFFERING = <lExpr> ) ]                                ;
    [WHERE <*WhereConditions*> ]                                  ;
    [GROUP BY <*ColumnList*> [HAVING <*HavingConditions*>] ]      ;
    [UNION [ALL] <*SelectCommand*>]                               ;
    [ORDER BY <*orderByList*>]                                    ;
    INTO CURSOR <CursorName> [<cursoropt:NOFILTER,READWRITE>] =>  ;
    __FoxSqlSelectCursor(<"udc">,<"CursorName">)     

#command SELECT <*columnClauses*> FROM <*TableList*>                          ;
    [WITH (BUFFERING = <lExpr> ) ]                                            ;
    [WHERE <*WhereConditions*> ]                                              ;
    [GROUP BY <*ColumnList*> [HAVING <*HavingConditions*>] ]                  ;
    [UNION [ALL] <*SelectCommand*>]                                           ;
    [ORDER BY <*orderByList*>]                                                ;
    INTO TABLE <TableName> [DATABASE <DatabaseName> [NAME <LongName>] ]  =>   ;
    __FoxSqlSelectTable(<"udc">,<"TableName">, <"DatabaseName">, <"LongName">)     


// SQL Insert commands
    
#command INSERT INTO <*dbfAndFields*> VALUES [<values,...>]    => ;
    __FoxSqlCommand(<"udc">)
    
#command INSERT INTO <*dbfAndFields*> FROM MEMVAR => ;
    __FoxSqlInsertMemVar(<"udc">)

#command INSERT INTO <*dbfAndFields*> FROM ARRAY <arrayName>   => ;
    __FoxSqlInsertArray(<"udc">,<arrayName>)

#command INSERT INTO <*dbfAndFields*> FROM NAME <objectName>   => ;
    __FoxSqlInsertObject(<"udc">,<objectName>)

// SQL Delete commands
#command DELETE [<*target*>] FROM <moreClauses,...> => ;
    __FoxSqlDelete(<"udc"> )

// SQL Update Commands
#command UPDATE <target,...> SET <otherClauses,...> => ;
    __FoxSqlUpdate(<"udc">)


// SQL Create Commands
#command CREATE SQL VIEW <clauses,...> => ;
    __FoxSqlCreateView(<"udc">)

#command CREATE TABLE <*clauses*> => ;
    __FoxSqlCreateTable(<"udc">)

#command CREATE CURSOR <*clauses*> => ;
    __FoxSqlCreateCursor(<"udc">)

#command DROP TABLE <*clauses*> => ;
    __FoxSqlCommand(<"udc">)

#command DROP VIEW <*clauses*> => ;
    __FoxSqlCommand(<"udc">)

// SQL Alter Commands

#command ALTER TABLE <*clauses*> => ;
    __FoxSqlCreateTable(<"udc">)

// Unsupported commands

#command UPDATE SET      <*clauses*> => #error "Table name missing in UPDATE statement"
#command CREATE TRIGGER  <*clauses*> => #error "CREATE TRIGGER is not supported "
#command DELETE TRIGGER  <*clauses*> => #error "DELETE TRIGGER is not supported "

#endif