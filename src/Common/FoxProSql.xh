///////////////////////////////////////////////////////////////////////////
// FoxProSql.xh
//
// XSharp FoxPro SQL Preprocessor Directives
//
// Copyright (c) XSharp BV.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.
// See License.txt in the project root for license information.
//
// Caution: do not modify this file. It will be overwritten during product updates
//


#ifndef FOXPROSQL_XH
#define FOXPROSQL_XH

// SQL Select commands. Separate commands for TO and 3 different INTO variations

#command __NOFOXPROSQL__ <any> => #warning This command is not (yet) supported: <(any)>


#command SELECT <*columnClauses*> FROM <*TableList*>           ;
    [WITH (BUFFERING = <lExpr> ) ]                             ;
    [WHERE <*WhereConditions*> ]                               ;
    [GROUP BY <*ColumnList*> [HAVING <*HavingConditions*>] ]   ;
    [UNION [ALL] <*SelectCommand*>]                            ;
    [ORDER BY <*orderByList*>]                                 ;
    [TO <dest:FILE,PRINTER,SCREEN> <*extraoptions*>]        => ;
    __NOFOXPROSQL__ <(udc)> //__FoxSqlSelect(<"udc">,<"dest">,<"extraoptions">


#command SELECT <*columnClauses*> FROM <*TableList*>           ;
    [WITH (BUFFERING = <lExpr> ) ]                             ;
    [WHERE <*WhereConditions*> ]                               ;
    [GROUP BY <*ColumnList*> [HAVING <*HavingConditions*>] ]   ;
    [UNION [ALL] <*SelectCommand*>]                            ;
    [ORDER BY <*orderByList*>]                                 ;
    INTO <dest:ARRAY,CURSOR,TABLE> <Name> ;
	[<cursoropt:NOFILTER,READWRITE>]  ;
	[DATABASE <DatabaseName> [NAME <LongName>] ] =>;
    __NOFOXPROSQL__ <(udc)>  // __FoxSqlSelectSpecial(<"udc">, <(dest)>, <(Name)>, <cursoropt>,<DatabaseName>,<LongName>)



// SQL Insert commands
// First is generic INSERT, to enable keyword coloring  while typing


#command INSERT [INTO] [<*any*>] => #error <(udc)> : command not supported

#command INSERT INTO <(table)> [( <(f1)> [, <(fn)> ] )] FROM MEMVAR => ;
    __SqlInsertMemVar(<"udc">,<"table"> , { <"f1"> [, <"fn"> ] })

#command INSERT INTO <(table)> [( <(f1)> [, <(fn)> ] )]  VALUES (  <(v1)> [, <(vn)> ] )     => ;
    __SqlInsertValues(<"udc"> , <"table"> , { <"f1"> [, <"fn"> ] },  { <v1> [, <vn> ] } )

#command INSERT INTO <(table)> [( <(f1)> [, <(fn)> ] )] FROM ARRAY <ArrayName>   => ;
    __SqlInsertFromArray(<"udc">, <"table"> , { <"f1"> [, <"fn"> ] },  <ArrayName>)

#command INSERT INTO <(table)> [( <(f1)> [, <(fn)> ] )] FROM NAME <ObjectName>   => ;
    __SqlInsertFromObject(<"udc">, <"table"> , { <"f1"> [, <"fn"> ] },  <ObjectName> )

#command INSERT INTO <(table)> [( <(f1)> [, <(fn)> ] )] <s:Select> <*moreclauses*>   => ;
    __SqlInsertFromSQL(<"udc">, <"table"> , { <"f1"> [, <"fn"> ] },  <"s">+" "+<"moreclauses"> )

// SQL Create Commands
#command CREATE VIEW <*clauses*>    => __SqlCreateView(<"udc">)
#command CREATE TABLE <*clauses*> => __SqlCreateTable(<"udc">)
#command CREATE CURSOR <*clauses*> => __SqlCreateCursor(<"udc">)
#command DROP TABLE <*clauses*> => __SqlDropTable <(udc)>
#command DROP VIEW <*clauses*>  => __SqlDropView <(udc)>
#command ALTER TABLE <*clauses*> => __SqlAlterTable <(udc)>

#command DELETE [<*tableName*>] FROM  <*clauses*> => __SqlDelete(<"udc">)

#command UPDATE [<*tableName*>] SET <*setclauses*> ;
  [FROM <*fromclause*>] [JOIN <*joinclause*>]  ;
  [WHERE <*whereclause*>] => __SqlUpdate(<"udc">)

#command CREATE TRIGGER  <*clauses*> => #error "CREATE TRIGGER is not supported "
#command DELETE TRIGGER  <*clauses*> => #error "DELETE TRIGGER is not supported "

#endif